<?xml version="1.0" encoding="UTF-8" ?>
<project name="MySql" database="MySql" id="13c051c0-9e24-4a42-8850-b4e0ddcc5eeb" >
	<schema name="devel" >
		<table name="account" row_count="0" spec="" >
			<column name="account" type="BINARY" length="3" mandatory="y" />
			<column name="alias" prior="name" type="VARCHAR" length="100" mandatory="y" />
			<column name="owner" type="BINARY" length="3" mandatory="y" />
			<column name="broker" type="BINARY" length="3" mandatory="y" />
			<column name="state" type="BINARY" length="3" mandatory="y" />
			<column name="environment" type="BINARY" length="3" mandatory="y" />
			<column name="total_equity" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="isolated_equity" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="rest_api_url" type="VARCHAR" length="100" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="private_wss_url" prior="wss_url" type="VARCHAR" length="100" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="public_wss_url" prior="private_rest_api_url" type="VARCHAR" length="100" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="create_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<column name="update_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<index name="pk_account" unique="PRIMARY_KEY" >
				<column name="account" />
			</index>
			<index name="fk_a_state" unique="NORMAL" >
				<column name="state" />
			</index>
			<index name="fk_a_broker" unique="NORMAL" >
				<column name="broker" />
			</index>
			<index name="fk_a_environment" unique="NORMAL" >
				<column name="environment" />
			</index>
			<index name="fk_a_owner" unique="NORMAL" >
				<column name="owner" />
			</index>
			<index name="ak_alias" unique="UNIQUE_KEY" >
				<column name="alias" />
			</index>
			<fk name="fk_a_broker" to_schema="devel" to_table="broker" options="" >
				<fk_column name="broker" pk="broker" />
			</fk>
			<fk name="fk_a_environment" to_schema="devel" to_table="environment" options="" >
				<fk_column name="environment" pk="environment" />
			</fk>
			<fk name="fk_a_state" to_schema="devel" to_table="state" options="" >
				<fk_column name="state" pk="state" />
			</fk>
			<fk name="fk_a_owner" to_schema="devel" to_table="user" >
				<fk_column name="owner" pk="user" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="account_detail" row_count="0" spec="" >
			<column name="account" type="BINARY" length="3" mandatory="y" />
			<column name="currency" type="BINARY" length="3" mandatory="y" />
			<column name="balance" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="available" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="currency_equity" prior="equity" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="currency_isolated_equity" prior="isolated_equity" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="available_equity" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="equity_usd" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="frozen" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="order_frozen" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="borrow_frozen" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="unrealized_pnl" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="isolated_unrealized_pnl" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="coin_usd_price" type="DECIMAL" length="10" decimal="6" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="margin_ratio" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="spot_available" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="liability" type="DECIMAL" length="15" decimal="3" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="update_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<index name="pk_account_detail" unique="PRIMARY_KEY" >
				<column name="account" />
				<column name="currency" />
			</index>
			<index name="fk_ad_currency" unique="NORMAL" >
				<column name="currency" />
			</index>
			<fk name="fk_ad_account" to_schema="devel" to_table="account" options="" >
				<fk_column name="account" pk="account" />
			</fk>
			<fk name="fk_ad_currency" to_schema="devel" to_table="currency" options="" >
				<fk_column name="currency" pk="currency" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="activity" row_count="0" spec="" >
			<column name="activity" type="BINARY" length="3" mandatory="y" />
			<column name="subject_area" prior="subject" type="BINARY" length="3" mandatory="y" />
			<column name="task" type="VARCHAR" length="60" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_activity" unique="PRIMARY_KEY" >
				<column name="activity" />
			</index>
			<index name="ak_activity" unique="UNIQUE_KEY" >
				<column name="task" />
			</index>
			<index name="fk_a_subject" unique="NORMAL" >
				<column name="subject_area" />
			</index>
			<fk name="fk_a_subject" to_schema="devel" to_table="subject_area" >
				<fk_column name="subject_area" pk="subject_area" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="api_error" row_count="0" spec="" >
			<column name="error_code" type="INT" mandatory="y" />
			<column name="http_status_code" type="SMALLINT" mandatory="y" />
			<column name="error_message" type="VARCHAR" length="200" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_api_error" unique="PRIMARY_KEY" >
				<column name="error_code" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="audit_request" row_count="0" spec="" >
			<column name="request" type="BINARY" length="6" />
			<column name="old_state" type="BINARY" length="3" />
			<column name="new_state" type="BINARY" length="3" />
			<column name="update_time" type="DATETIME" length="6" />
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="authority" row_count="0" spec="" >
			<column name="authority" type="BINARY" length="3" mandatory="y" />
			<column name="privilege" type="VARCHAR" length="16" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="priority" type="SMALLINT" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="pk_authority" unique="PRIMARY_KEY" >
				<column name="authority" />
			</index>
			<index name="ak_authority" unique="UNIQUE_KEY" >
				<column name="privilege" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="broker" row_count="0" spec="" >
			<column name="broker" type="BINARY" length="3" mandatory="y" />
			<column name="name" type="VARCHAR" length="30" mandatory="y" />
			<column name="image_url" type="VARCHAR" length="60" mandatory="y" />
			<column name="website_url" type="VARCHAR" length="60" mandatory="y" />
			<index name="pk_broker" unique="PRIMARY_KEY" >
				<column name="broker" />
			</index>
			<index name="ak_broker" unique="UNIQUE_KEY" >
				<column name="name" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="cancel_source" row_count="0" spec="" >
			<comment><![CDATA[not_canceled
user_canceled
system_canceled]]></comment>
			<column name="cancel_source" type="BINARY" length="3" mandatory="y" />
			<column name="source_ref" type="VARCHAR" length="15" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="source" type="VARCHAR" length="12" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_cancel_source" unique="PRIMARY_KEY" >
				<column name="cancel_source" />
			</index>
			<index name="ak_cancel" unique="UNIQUE_KEY" >
				<column name="source_ref" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="candle" row_count="0" spec="" >
			<column name="instrument" type="BINARY" length="3" mandatory="y" />
			<column name="period" type="BINARY" length="3" mandatory="y" />
			<column name="bar_time" type="DATETIME" mandatory="y" />
			<column name="open" type="DOUBLE" mandatory="y" />
			<column name="high" type="DOUBLE" mandatory="y" />
			<column name="low" type="DOUBLE" mandatory="y" />
			<column name="close" type="DOUBLE" mandatory="y" />
			<column name="volume" type="INT" mandatory="y" />
			<column name="vol_currency" type="DECIMAL" length="15" decimal="6" mandatory="y" />
			<column name="vol_currency_quote" type="DECIMAL" length="15" decimal="6" mandatory="y" />
			<column name="completed" type="BOOLEAN" mandatory="y" />
			<index name="pk_candle" unique="PRIMARY_KEY" >
				<column name="instrument" />
				<column name="period" />
				<column name="bar_time" />
			</index>
			<index name="fk_c_period" unique="NORMAL" >
				<column name="period" />
			</index>
			<fk name="fk_c_instrument" to_schema="devel" to_table="instrument" options="" >
				<fk_column name="instrument" pk="instrument" />
			</fk>
			<fk name="fk_c_period" to_schema="devel" to_table="period" options="" >
				<fk_column name="period" pk="period" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="contract_type" row_count="0" spec="" >
			<column name="contract_type" type="BINARY" length="3" mandatory="y" />
			<column name="source_ref" type="VARCHAR" length="10" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="description" type="VARCHAR" length="30" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_contract_type" unique="PRIMARY_KEY" >
				<column name="contract_type" />
			</index>
			<index name="ak_contract_type" unique="UNIQUE_KEY" >
				<column name="source_ref" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="currency" row_count="0" spec="" >
			<column name="currency" type="BINARY" length="3" mandatory="y" />
			<column name="symbol" type="VARCHAR" length="20" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="state" type="BINARY" length="3" mandatory="y" />
			<column name="image_url" type="VARCHAR" length="300" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_currency" unique="PRIMARY_KEY" >
				<column name="currency" />
			</index>
			<index name="ak_currency" unique="UNIQUE_KEY" >
				<column name="symbol" />
			</index>
			<index name="fk_c_state" unique="NORMAL" >
				<column name="state" />
			</index>
			<fk name="fk_c_state" to_schema="devel" to_table="state" >
				<fk_column name="state" pk="state" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="environment" row_count="0" spec="" >
			<column name="environment" type="BINARY" length="3" mandatory="y" />
			<column name="environ" type="VARCHAR" length="30" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_environment" unique="PRIMARY_KEY" >
				<column name="environment" />
			</index>
			<index name="ak_environment" unique="UNIQUE_KEY" >
				<column name="environ" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="fibonacci" row_count="0" spec="" >
			<column name="fibonacci" type="BINARY" length="3" mandatory="y" />
			<column name="level" type="TINYINT" mandatory="y" />
			<column name="percent" type="DECIMAL" length="5" decimal="3" mandatory="y" />
			<column name="alias" type="VARCHAR" length="10" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_fibonacci" unique="PRIMARY_KEY" >
				<column name="fibonacci" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="fractal" row_count="0" spec="" >
			<column name="fractal" type="BINARY" length="3" mandatory="y" />
			<column name="instrument" type="BINARY" length="3" mandatory="y" />
			<column name="period" type="BINARY" length="3" mandatory="y" />
			<column name="position" type="CHAR" length="5" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="fibonacci" type="BINARY" length="3" />
			<index name="pk_fractal" unique="PRIMARY_KEY" >
				<column name="fractal" />
			</index>
			<index name="ak_fractal" unique="UNIQUE_KEY" >
				<column name="instrument" />
				<column name="period" />
				<column name="position" />
			</index>
			<fk name="fk_f_instrument_period" to_schema="devel" to_table="instrument_period" options="" >
				<fk_column name="instrument" pk="instrument" />
				<fk_column name="period" pk="period" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="fractal_fibonacci" row_count="0" spec="" >
			<column name="fractal" type="BINARY" length="3" mandatory="y" />
			<column name="fractal_type" type="CHAR" length="10" mandatory="y" >
				<column_options><![CDATA[COLLATE utf8mb4_0900_as_cs]]></column_options>
				<comment><![CDATA[Retrace
Extension]]></comment>
			</column>
			<column name="fibonacci" type="BINARY" length="3" mandatory="y" />
			<column name="fractal_state" type="CHAR" length="10" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="price" type="DOUBLE" mandatory="y" />
			<index name="pk_fractal_fibonacci" unique="PRIMARY_KEY" >
				<column name="fractal" />
				<column name="fractal_type" />
				<column name="fibonacci" />
			</index>
			<index name="fk_ff_fibonacci" unique="NORMAL" >
				<column name="fibonacci" />
			</index>
			<index name="fk_ff_fractal_state" unique="NORMAL" >
				<column name="fractal_state" />
			</index>
			<constraint name="ck_ff_fractal_type" type="CHECK" options="" >
				<string><![CDATA[`fractal_type` in (_utf8mb4'extension',_utf8mb4'retrace')]]></string>
			</constraint>
			<fk name="fk_ff_fibonacci" to_schema="devel" to_table="fibonacci" options="" >
				<fk_column name="fibonacci" pk="fibonacci" />
			</fk>
			<fk name="fk_ff_fractal" to_schema="devel" to_table="fractal" options="" >
				<fk_column name="fractal" pk="fractal" />
			</fk>
			<fk name="fk_ff_fractal_state" to_schema="devel" to_table="fractal_state" options="" >
				<fk_column name="fractal_state" pk="fractal_state" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="fractal_point" row_count="0" spec="" >
			<column name="fractal" type="BINARY" length="3" mandatory="y" />
			<column name="point_type" type="CHAR" length="10" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="price" type="DOUBLE" mandatory="y" />
			<column name="create_time" type="DATETIME" mandatory="y" />
			<index name="pk_fractal_point" unique="PRIMARY_KEY" >
				<column name="fractal" />
				<column name="point_type" />
			</index>
			<index name="fk_fp_point_type" unique="NORMAL" >
				<column name="point_type" />
			</index>
			<fk name="fk_p_point_type" to_schema="devel" to_table="point_type" options="" >
				<fk_column name="point_type" pk="point_type" />
			</fk>
			<fk name="fk_point_fractal" to_schema="devel" to_table="fractal" options="" >
				<fk_column name="fractal" pk="fractal" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="fractal_state" row_count="0" spec="" >
			<comment><![CDATA[Rally
Pullback
Retrace
Correction
Recovery
Breakout
Reversal
Extension]]></comment>
			<column name="fractal_state" type="CHAR" length="10" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_fractal_state" unique="PRIMARY_KEY" >
				<column name="fractal_state" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="instrument" row_count="0" spec="" >
			<column name="instrument" type="BINARY" length="3" mandatory="y" />
			<column name="trade_period" prior="period" type="BINARY" length="3" mandatory="y" />
			<column name="base_currency" type="BINARY" length="3" mandatory="y" />
			<column name="quote_currency" type="BINARY" length="3" mandatory="y" />
			<column name="margin_mode" type="VARCHAR" length="10" mandatory="y" >
				<column_options><![CDATA[COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="leverage" type="SMALLINT" mandatory="y" >
				<defo><![CDATA[10]]></defo>
			</column>
			<column name="lot_scale_factor" type="SMALLINT" unsigned="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<column name="martingale_factor" type="SMALLINT" mandatory="y" >
				<defo><![CDATA[1]]></defo>
			</column>
			<index name="pk_instrument" unique="PRIMARY_KEY" >
				<column name="instrument" />
			</index>
			<index name="ak_instrument" unique="UNIQUE_KEY" >
				<column name="base_currency" />
				<column name="quote_currency" />
			</index>
			<index name="fk_i_quote_currency" unique="NORMAL" >
				<column name="quote_currency" />
			</index>
			<index name="fk_i_trade_period" unique="NORMAL" >
				<column name="trade_period" />
			</index>
			<index name="fk_i_margin_mode" unique="NORMAL" >
				<column name="margin_mode" />
			</index>
			<fk name="fk_i_base_currency" to_schema="devel" to_table="currency" options="" >
				<fk_column name="base_currency" pk="currency" />
			</fk>
			<fk name="fk_i_margin_mode" to_schema="devel" to_table="margin_mode" options="" >
				<fk_column name="margin_mode" pk="margin_mode" />
			</fk>
			<fk name="fk_i_trade_period" to_schema="devel" to_table="period" options="" >
				<fk_column name="trade_period" pk="period" />
			</fk>
			<fk name="fk_i_quote_currency" to_schema="devel" to_table="currency" options="" >
				<fk_column name="quote_currency" pk="currency" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="instrument_detail" row_count="0" spec="" >
			<column name="instrument" type="BINARY" length="3" mandatory="y" />
			<column name="instrument_type" type="BINARY" length="3" mandatory="y" />
			<column name="contract_type" type="BINARY" length="3" mandatory="y" />
			<column name="contract_value" type="DECIMAL" length="17" decimal="5" mandatory="y" />
			<column name="max_leverage" type="INT" mandatory="y" />
			<column name="min_size" type="DECIMAL" length="5" decimal="3" mandatory="y" />
			<column name="lot_size" type="DECIMAL" length="5" decimal="3" mandatory="y" />
			<column name="tick_size" type="DOUBLE" mandatory="y" />
			<column name="max_limit_size" type="DECIMAL" length="13" decimal="2" mandatory="y" />
			<column name="max_market_size" type="DECIMAL" length="13" decimal="2" mandatory="y" />
			<column name="list_time" type="DATETIME" length="3" mandatory="y" />
			<column name="expiry_time" type="DATETIME" length="3" mandatory="y" />
			<index name="pk_instrument_detail" unique="PRIMARY_KEY" >
				<column name="instrument" />
			</index>
			<index name="fk_id_instrument_type" unique="NORMAL" >
				<column name="instrument_type" />
			</index>
			<index name="fk_id_contract_type" unique="NORMAL" >
				<column name="contract_type" />
			</index>
			<fk name="fk_id_contract_type" to_schema="devel" to_table="contract_type" options="" >
				<fk_column name="contract_type" pk="contract_type" />
			</fk>
			<fk name="fk_id_instrument" to_schema="devel" to_table="instrument" options="" >
				<fk_column name="instrument" pk="instrument" />
			</fk>
			<fk name="fk_id_instrument_type" to_schema="devel" to_table="instrument_type" options="" >
				<fk_column name="instrument_type" pk="instrument_type" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="instrument_period" row_count="0" spec="" >
			<column name="instrument" type="BINARY" length="3" mandatory="y" />
			<column name="period" type="BINARY" length="3" mandatory="y" />
			<column name="sma_factor" type="SMALLINT" mandatory="y" >
				<defo><![CDATA[_utf8mb4'0']]></defo>
			</column>
			<column name="bulk_collection_rate" type="SMALLINT" mandatory="y" >
				<defo><![CDATA[_utf8mb4'0']]></defo>
			</column>
			<column name="interval_collection_rate" type="SMALLINT" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="active_collection" prior="strict_stops" type="BOOLEAN" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<index name="pk_instrument_period" unique="PRIMARY_KEY" >
				<column name="instrument" />
				<column name="period" />
			</index>
			<index name="fk_ip_period" unique="NORMAL" >
				<column name="period" />
			</index>
			<fk name="fk_ip_instrument" to_schema="devel" to_table="instrument" options="" >
				<fk_column name="instrument" pk="instrument" />
			</fk>
			<fk name="fk_ip_period" to_schema="devel" to_table="period" options="" >
				<fk_column name="period" pk="period" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="instrument_position" row_count="0" spec="" >
			<column name="instrument_position" type="BINARY" length="6" mandatory="y" />
			<column name="account" type="BINARY" length="3" mandatory="y" />
			<column name="instrument" type="BINARY" length="3" mandatory="y" />
			<column name="position" type="CHAR" length="5" mandatory="y" />
			<column name="state" type="BINARY" length="3" mandatory="y" />
			<column name="auto_state" type="BINARY" length="3" mandatory="y" />
			<column name="strict_stops" type="BOOLEAN" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="strict_targets" type="BOOLEAN" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="update_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<column name="close_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<index name="pk_instrument_position" unique="PRIMARY_KEY" >
				<column name="instrument_position" />
			</index>
			<index name="ak_instrument_position" unique="UNIQUE_KEY" >
				<column name="account" />
				<column name="instrument" />
				<column name="position" />
			</index>
			<index name="fk_ipos_state" unique="NORMAL" >
				<column name="state" />
			</index>
			<index name="fk_ipos_position" unique="NORMAL" >
				<column name="position" />
			</index>
			<index name="fk_ipos_instrument" unique="NORMAL" >
				<column name="instrument" />
			</index>
			<fk name="fk_ipos_account" to_schema="devel" to_table="account" options="" >
				<fk_column name="account" pk="account" />
			</fk>
			<fk name="fk_ipos_position" to_schema="devel" to_table="position" options="" >
				<fk_column name="position" pk="position" />
			</fk>
			<fk name="fk_ipos_state" to_schema="devel" to_table="state" options="" >
				<fk_column name="state" pk="state" />
			</fk>
			<fk name="fk_ipos_instrument" to_schema="devel" to_table="instrument" >
				<fk_column name="instrument" pk="instrument" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="instrument_type" row_count="0" spec="" >
			<column name="instrument_type" type="BINARY" length="3" mandatory="y" />
			<column name="source_ref" type="VARCHAR" length="10" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="description" type="VARCHAR" length="30" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_instrument_type" unique="PRIMARY_KEY" >
				<column name="instrument_type" />
			</index>
			<index name="ak_instrument_type" unique="UNIQUE_KEY" >
				<column name="source_ref" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="margin_mode" row_count="0" spec="" >
			<comment><![CDATA[Margin mode
cross
isolated]]></comment>
			<column name="margin_mode" type="VARCHAR" length="10" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="description" type="VARCHAR" length="30" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_margin_mode" unique="PRIMARY_KEY" >
				<column name="margin_mode" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="order_category" row_count="0" spec="" >
			<comment><![CDATA[normal
full_liquidation
partial_liquidation
adl
tp
sl]]></comment>
			<column name="order_category" type="BINARY" length="3" mandatory="y" />
			<column name="source_ref" type="VARCHAR" length="20" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="description" type="VARCHAR" length="30" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_order_category" unique="PRIMARY_KEY" >
				<column name="order_category" />
			</index>
			<index name="ak_category" unique="UNIQUE_KEY" >
				<column name="source_ref" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="order_state" row_count="0" spec="" >
			<comment><![CDATA[live, effective, canceled, order_failed, filled, partially_canceled, partially_filled]]></comment>
			<column name="order_state" type="BINARY" length="3" mandatory="y" />
			<column name="source_ref" type="VARCHAR" length="20" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="description" prior="status" type="VARCHAR" length="30" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="status" prior="map_ref" type="VARCHAR" length="10" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_order_state" unique="PRIMARY_KEY" >
				<column name="order_state" />
			</index>
			<index name="ak_order_state" unique="UNIQUE_KEY" >
				<column name="source_ref" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="orders" row_count="0" spec="" >
			<column name="request" type="BINARY" length="6" mandatory="y" />
			<column name="order_id" type="BIGINT" mandatory="y" />
			<column name="order_category" type="BINARY" length="3" mandatory="y" />
			<column name="order_state" type="BINARY" length="3" mandatory="y" />
			<column name="cancel_source" type="BINARY" length="3" mandatory="y" />
			<column name="filled_size" type="DOUBLE" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="filled_amount" type="DOUBLE" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="average_price" type="DOUBLE" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="fee" type="DOUBLE" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="pnl" type="DOUBLE" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="pk_orders" unique="PRIMARY_KEY" >
				<column name="request" />
			</index>
			<index name="ak_orders" unique="UNIQUE_KEY" >
				<column name="order_id" />
			</index>
			<index name="fk_o_order_state" unique="NORMAL" >
				<column name="order_state" />
			</index>
			<index name="fk_o_order_category" unique="NORMAL" >
				<column name="order_category" />
			</index>
			<index name="fk_o_cancel_source" unique="NORMAL" >
				<column name="cancel_source" />
			</index>
			<fk name="fk_o_cancel_source" to_schema="devel" to_table="cancel_source" options="" >
				<fk_column name="cancel_source" pk="cancel_source" />
			</fk>
			<fk name="fk_o_order_category" to_schema="devel" to_table="order_category" options="" >
				<fk_column name="order_category" pk="order_category" />
			</fk>
			<fk name="fk_o_order_state" to_schema="devel" to_table="order_state" options="" >
				<fk_column name="order_state" pk="order_state" />
			</fk>
			<fk name="fk_o_request" to_schema="devel" to_table="request" options="" >
				<fk_column name="request" pk="request" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="period" row_count="0" spec="" >
			<column name="period" type="BINARY" length="3" mandatory="y" />
			<column name="timeframe" type="VARCHAR" length="3" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="description" type="VARCHAR" length="30" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="timeframe_units" prior="units" type="INT" mandatory="y" />
			<index name="pk_period" unique="PRIMARY_KEY" >
				<column name="period" />
			</index>
			<index name="ak_period" unique="UNIQUE_KEY" >
				<column name="timeframe" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="point_type" row_count="0" spec="" >
			<comment><![CDATA[Origin
Base
Root
Expansion
Retrace
Recovery
Close]]></comment>
			<column name="point_type" type="CHAR" length="10" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_point_type" unique="PRIMARY_KEY" >
				<column name="point_type" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="position" row_count="0" spec="" >
			<column name="position" type="CHAR" length="5" mandatory="y" />
			<index name="pk_position" unique="PRIMARY_KEY" >
				<column name="position" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="positions" row_count="0" spec="" >
			<column name="positions" type="BINARY" length="6" mandatory="y" />
			<column name="instrument_position" type="BINARY" length="6" mandatory="y" />
			<column name="size" type="DOUBLE" mandatory="y" />
			<column name="size_available" type="DOUBLE" mandatory="y" />
			<column name="leverage" type="INT" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="margin_mode" type="VARCHAR" length="10" mandatory="y" >
				<column_options><![CDATA[COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="margin_used" type="DOUBLE" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="margin_ratio" type="DECIMAL" length="12" decimal="3" mandatory="y" />
			<column name="margin_initial" type="DOUBLE" mandatory="y" />
			<column name="margin_maint" type="DOUBLE" mandatory="y" />
			<column name="average_price" type="DOUBLE" mandatory="y" />
			<column name="mark_price" type="DOUBLE" mandatory="y" />
			<column name="liquidation_price" type="DOUBLE" mandatory="y" />
			<column name="unrealized_pnl" type="DOUBLE" mandatory="y" />
			<column name="unrealized_pnl_ratio" type="DECIMAL" length="12" decimal="3" mandatory="y" />
			<column name="adl" type="SMALLINT" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="create_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<column name="update_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<index name="pk_positions" unique="PRIMARY_KEY" >
				<column name="positions" />
			</index>
			<index name="fk_p_margin_mode" unique="NORMAL" >
				<column name="margin_mode" />
			</index>
			<index name="fk_p_instrument_position" unique="NORMAL" >
				<column name="instrument_position" />
			</index>
			<fk name="fk_p_instrument_position" to_schema="devel" to_table="instrument_position" options="" >
				<fk_column name="instrument_position" pk="instrument_position" />
			</fk>
			<fk name="fk_p_margin_mode" to_schema="devel" to_table="margin_mode" options="" >
				<fk_column name="margin_mode" pk="margin_mode" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="price_type" row_count="0" spec="" >
			<comment><![CDATA[Trigger price type.
last: last price
index: index price
mark: mark price]]></comment>
			<column name="price_type" type="CHAR" length="5" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="description" type="VARCHAR" length="16" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_price_type" unique="PRIMARY_KEY" >
				<column name="price_type" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="request" row_count="0" spec="" >
			<column name="request" type="BINARY" length="6" mandatory="y" />
			<column name="instrument_position" type="BINARY" length="6" mandatory="y" />
			<column name="action" type="CHAR" length="4" mandatory="y" >
				<column_options><![CDATA[COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="state" type="BINARY" length="3" mandatory="y" />
			<column name="price" type="DOUBLE" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="size" type="DOUBLE" mandatory="y" />
			<column name="leverage" type="INT" mandatory="y" />
			<column name="request_type" type="BINARY" length="3" mandatory="y" />
			<column name="margin_mode" type="VARCHAR" length="10" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="reduce_only" type="BOOLEAN" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="memo" type="VARCHAR" length="200" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="broker_id" type="VARCHAR" length="16" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="create_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<column name="expiry_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<column name="update_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<index name="pk_request" unique="PRIMARY_KEY" >
				<column name="request" />
			</index>
			<index name="fk_r_instrument_position" unique="NORMAL" >
				<column name="instrument_position" />
			</index>
			<index name="fk_r_request_type" unique="NORMAL" >
				<column name="request_type" />
			</index>
			<index name="fk_r_margin_mode" unique="NORMAL" >
				<column name="margin_mode" />
			</index>
			<index name="fk_r_state" unique="NORMAL" >
				<column name="state" />
			</index>
			<constraint name="ck_r_action" type="CHECK" options="" >
				<string><![CDATA[`action` in (_utf8mb4'buy',_utf8mb4'sell')]]></string>
			</constraint>
			<fk name="fk_r_instrument_position" to_schema="devel" to_table="instrument_position" options="" >
				<fk_column name="instrument_position" pk="instrument_position" />
			</fk>
			<fk name="fk_r_margin_mode" to_schema="devel" to_table="margin_mode" options="" >
				<fk_column name="margin_mode" pk="margin_mode" />
			</fk>
			<fk name="fk_r_request_type" to_schema="devel" to_table="request_type" options="" >
				<fk_column name="request_type" pk="request_type" />
			</fk>
			<fk name="fk_r_state" to_schema="devel" to_table="state" options="" >
				<fk_column name="state" pk="state" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="request_type" row_count="0" spec="" >
			<comment><![CDATA[market: market order
limit: limit order
post_only: Post-only order
fok: Fill-or-kill order
ioc: Immediate-or-cancel order]]></comment>
			<column name="request_type" type="BINARY" length="3" mandatory="y" />
			<column name="source_ref" type="VARCHAR" length="10" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="description" type="VARCHAR" length="30" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_request_type" unique="PRIMARY_KEY" >
				<column name="request_type" />
			</index>
			<index name="ak_request_type" unique="UNIQUE_KEY" >
				<column name="source_ref" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="role" row_count="0" spec="" >
			<column name="role" type="BINARY" length="3" mandatory="y" />
			<column name="title" type="VARCHAR" length="30" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="auth_rank" type="SMALLINT" mandatory="y" />
			<index name="pk_role" unique="PRIMARY_KEY" >
				<column name="role" />
			</index>
			<index name="ak_role" unique="UNIQUE_KEY" >
				<column name="title" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="role_authority" row_count="0" spec="" >
			<column name="role" type="BINARY" length="3" mandatory="y" />
			<column name="authority" type="BINARY" length="3" mandatory="y" />
			<column name="activity" type="BINARY" length="3" mandatory="y" />
			<column name="state" type="BINARY" length="3" mandatory="y" />
			<index name="fk_ra_role" unique="NORMAL" >
				<column name="role" />
			</index>
			<index name="fk_ra_authority" unique="NORMAL" >
				<column name="authority" />
			</index>
			<index name="fk_ra_state" unique="NORMAL" >
				<column name="state" />
			</index>
			<index name="pk_role_authority" unique="PRIMARY_KEY" >
				<column name="role" />
				<column name="authority" />
				<column name="activity" />
			</index>
			<index name="fk_ra_activity" unique="NORMAL" >
				<column name="activity" />
			</index>
			<fk name="fk_ra_authority" to_schema="devel" to_table="authority" options="" >
				<fk_column name="authority" pk="authority" />
			</fk>
			<fk name="fk_sra_role" to_schema="devel" to_table="role" options="" >
				<fk_column name="role" pk="role" />
			</fk>
			<fk name="fk_ra_state" to_schema="devel" to_table="state" >
				<fk_column name="state" pk="state" />
			</fk>
			<fk name="fk_ra_activity" to_schema="devel" to_table="activity" >
				<fk_column name="activity" pk="activity" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="state" row_count="0" spec="" >
			<column name="state" type="BINARY" length="3" mandatory="y" />
			<column name="status" type="VARCHAR" length="10" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="description" type="VARCHAR" length="60" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_state" unique="PRIMARY_KEY" >
				<column name="state" />
			</index>
			<index name="ak_state" unique="UNIQUE_KEY" >
				<column name="status" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="stop_order" row_count="0" spec="" >
			<column name="stop_request" type="BINARY" length="5" mandatory="y" />
			<column name="tpsl_id" type="BIGINT" mandatory="y" />
			<column name="order_state" type="BINARY" length="3" mandatory="y" />
			<column name="order_category" type="BINARY" length="3" />
			<column name="price_type" type="CHAR" length="5" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="actual_size" type="DOUBLE" />
			<index name="pk_stop_order" unique="PRIMARY_KEY" >
				<column name="stop_request" />
			</index>
			<index name="fk_so_order_state" unique="NORMAL" >
				<column name="order_state" />
			</index>
			<index name="fk_so_order_category" unique="NORMAL" >
				<column name="order_category" />
			</index>
			<index name="fk_so_price_type" unique="NORMAL" >
				<column name="price_type" />
			</index>
			<fk name="fk_so_order_state" to_schema="devel" to_table="order_state" options="" >
				<fk_column name="order_state" pk="order_state" />
			</fk>
			<fk name="fk_so_stop_request" to_schema="devel" to_table="stop_request" >
				<fk_column name="stop_request" pk="stop_request" />
			</fk>
			<fk name="fk_so_order_category" to_schema="devel" to_table="order_category" >
				<fk_column name="order_category" pk="order_category" />
			</fk>
			<fk name="fk_so_price_type" to_schema="devel" to_table="price_type" >
				<fk_column name="price_type" pk="price_type" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="stop_request" row_count="0" spec="" >
			<column name="stop_request" type="BINARY" length="5" mandatory="y" />
			<column name="instrument_position" type="BINARY" length="6" mandatory="y" />
			<column name="state" type="BINARY" length="3" mandatory="y" />
			<column name="stop_type" type="CHAR" length="2" mandatory="y" />
			<column name="action" type="CHAR" length="4" mandatory="y" />
			<column name="size" type="DOUBLE" />
			<column name="trigger_price" type="DOUBLE" mandatory="y" >
				<defo><![CDATA[_utf8mb4'0']]></defo>
			</column>
			<column name="order_price" type="DOUBLE" mandatory="y" >
				<defo><![CDATA[_utf8mb4'0']]></defo>
			</column>
			<column name="reduce_only" type="BOOLEAN" mandatory="y" >
				<defo><![CDATA[false]]></defo>
			</column>
			<column name="broker_id" type="VARCHAR" length="16" />
			<column name="memo" type="VARCHAR" length="100" />
			<column name="create_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<column name="update_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now()]]></defo>
			</column>
			<index name="pk_stop_request" unique="PRIMARY_KEY" >
				<column name="stop_request" />
				<column name="stop_type" />
			</index>
			<index name="fk_sr_stop_type" unique="NORMAL" >
				<column name="stop_type" />
			</index>
			<index name="fk_sr_instrument_position" unique="NORMAL" >
				<column name="instrument_position" />
			</index>
			<index name="fk_sr_state" unique="NORMAL" >
				<column name="state" />
			</index>
			<fk name="fk_sr_instrument_position" to_schema="devel" to_table="instrument_position" options="" >
				<fk_column name="instrument_position" pk="instrument_position" />
			</fk>
			<fk name="fk_sr_state" to_schema="devel" to_table="state" options="" >
				<fk_column name="state" pk="state" />
			</fk>
			<fk name="fk_sr_stop_type" to_schema="devel" to_table="stop_type" options="" >
				<fk_column name="stop_type" pk="stop_type" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="stop_type" row_count="0" spec="" >
			<column name="stop_type" type="CHAR" length="2" mandatory="y" />
			<index name="pk_stop_type" unique="PRIMARY_KEY" >
				<column name="stop_type" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci]]></options>
		</table>
		<table name="subject_area" prior="subject" row_count="0" spec="" >
			<column name="subject_area" prior="subject" type="BINARY" length="3" mandatory="y" />
			<column name="title" type="VARCHAR" length="20" mandatory="y" />
			<column name="description" prior="area" type="VARCHAR" length="200" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_subject" unique="PRIMARY_KEY" >
				<column name="subject_area" />
			</index>
			<index name="ak_subject_area" unique="UNIQUE_KEY" >
				<column name="title" />
			</index>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="user" row_count="0" spec="" >
			<column name="user" type="BINARY" length="3" mandatory="y" />
			<column name="email" type="VARCHAR" length="80" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="role" type="BINARY" length="3" mandatory="y" />
			<column name="hash" type="BINARY" length="16" mandatory="y" />
			<column name="username" type="VARCHAR" length="30" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<column name="password" type="BINARY" length="32" mandatory="y" />
			<column name="state" type="BINARY" length="3" mandatory="y" />
			<column name="image_url" type="VARCHAR" length="60" mandatory="y" />
			<column name="create_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<column name="update_time" type="DATETIME" length="3" mandatory="y" >
				<defo><![CDATA[now(3)]]></defo>
			</column>
			<index name="pk_user" unique="PRIMARY_KEY" >
				<column name="user" />
			</index>
			<index name="ak_user" unique="UNIQUE_KEY" >
				<column name="username" />
				<column name="email" />
			</index>
			<index name="fk_u_role" unique="NORMAL" >
				<column name="role" />
			</index>
			<index name="fk_u_state" unique="NORMAL" >
				<column name="state" />
			</index>
			<fk name="fk_u_role" to_schema="devel" to_table="role" options="" >
				<fk_column name="role" pk="role" />
			</fk>
			<fk name="fk_u_state" to_schema="devel" to_table="state" options="" >
				<fk_column name="state" pk="state" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<table name="user_account" row_count="0" spec="" >
			<column name="user" type="BINARY" length="3" mandatory="y" />
			<column name="account" type="BINARY" length="3" mandatory="y" />
			<column name="nickname" prior="alias" type="VARCHAR" length="30" mandatory="y" >
				<column_options><![CDATA[CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs]]></column_options>
			</column>
			<index name="pk_user_account" unique="PRIMARY_KEY" >
				<column name="user" />
				<column name="account" />
			</index>
			<index name="fk_ua_account" unique="NORMAL" >
				<column name="account" />
			</index>
			<fk name="fk_ua_user" to_schema="devel" to_table="user" options="" >
				<fk_column name="user" pk="user" />
			</fk>
			<fk name="fk_ua_account" to_schema="devel" to_table="account" >
				<fk_column name="account" pk="account" />
			</fk>
			<options><![CDATA[ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs]]></options>
		</table>
		<view name="vw_accounts" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `a`.`account` AS `account`,`a`.`alias` AS `alias`,`a`.`broker` AS `broker`,`a`.`state` AS `state`,`s`.`status` AS `status`,`e`.`environment` AS `environment`,`e`.`environ` AS `environ`,`b`.`name` AS `broker_name`,`b`.`image_url` AS `broker_image_url`,`b`.`website_url` AS `broker_website_url`,`u`.`username` AS `owner_name`,`u`.`email` AS `owner_email`,`u`.`image_url` AS `owner_image_url`,`a`.`total_equity` AS `total_equity`,`a`.`isolated_equity` AS `isolated_equity`,`a`.`rest_api_url` AS `rest_api_url`,`a`.`private_wss_url` AS `private_wss_url`,`a`.`public_wss_url` AS `public_wss_url`,`c`.`currency` AS `currency`,`c`.`symbol` AS `symbol`,`c`.`image_url` AS `currency_image_url`,`c`.`state` AS `currency_state`,`cs`.`status` AS `currency_status`,`ad`.`balance` AS `balance`,`ad`.`currency_equity` AS `currency_equity`,`ad`.`currency_isolated_equity` AS `currency_isolated_equity`,`ad`.`available` AS `available`,`ad`.`available_equity` AS `available_equity`,`ad`.`equity_usd` AS `equity_usd`,`ad`.`frozen` AS `frozen`,`ad`.`order_frozen` AS `order_frozen`,`ad`.`borrow_frozen` AS `borrow_frozen`,`ad`.`unrealized_pnl` AS `unrealized_pnl`,`ad`.`isolated_unrealized_pnl` AS `isolated_unrealized_pnl`,`ad`.`coin_usd_price` AS `coin_usd_price`,`ad`.`margin_ratio` AS `margin_ratio`,`ad`.`spot_available` AS `spot_available`,`ad`.`liability` AS `liability`,`ad`.`update_time` AS `update_time` from (((((((`devel`.`account` `a` left join `devel`.`account_detail` `ad` on((`a`.`account` = `ad`.`account`))) left join `devel`.`currency` `c` on((`ad`.`currency` = `c`.`currency`))) left join `devel`.`state` `cs` on((`c`.`state` = `cs`.`state`))) join `devel`.`user` `u` on((`u`.`user` = `a`.`owner`))) join `devel`.`environment` `e` on((`a`.`environment` = `e`.`environment`))) join `devel`.`broker` `b` on((`a`.`broker` = `b`.`broker`))) join `devel`.`state` `s` on((`a`.`state` = `s`.`state`)))]]></view_script>
			<column name="account" type="BINARY" />
			<column name="broker" type="BINARY" />
			<column name="state" type="BINARY" />
			<column name="status" type="VARCHAR" />
			<column name="environment" type="BINARY" />
			<column name="environ" type="VARCHAR" />
			<column name="broker_name" type="VARCHAR" />
			<column name="broker_image_url" type="VARCHAR" />
			<column name="broker_website_url" type="VARCHAR" />
			<column name="owner_name" type="VARCHAR" />
			<column name="alias" type="VARCHAR" />
			<column name="owner_email" type="VARCHAR" />
			<column name="owner_image_url" type="VARCHAR" />
			<column name="total_equity" type="DECIMAL" />
			<column name="isolated_equity" type="DECIMAL" />
			<column name="rest_api_url" type="VARCHAR" />
			<column name="private_wss_url" type="VARCHAR" />
			<column name="public_wss_url" type="VARCHAR" />
			<column name="currency" type="BINARY" />
			<column name="symbol" type="VARCHAR" />
			<column name="currency_image_url" type="VARCHAR" />
			<column name="currency_state" type="BINARY" />
			<column name="currency_status" type="VARCHAR" />
			<column name="balance" type="DECIMAL" />
			<column name="available" type="DECIMAL" />
			<column name="currency_equity" type="DECIMAL" />
			<column name="currency_isolated_equity" type="DECIMAL" />
			<column name="available_equity" type="DECIMAL" />
			<column name="equity_usd" type="DECIMAL" />
			<column name="frozen" type="DECIMAL" />
			<column name="order_frozen" type="DECIMAL" />
			<column name="borrow_frozen" type="DECIMAL" />
			<column name="unrealized_pnl" type="DECIMAL" />
			<column name="isolated_unrealized_pnl" type="DECIMAL" />
			<column name="coin_usd_price" type="DECIMAL" />
			<column name="margin_ratio" type="DECIMAL" />
			<column name="spot_available" type="DECIMAL" />
			<column name="liability" type="DECIMAL" />
			<column name="update_time" type="DATETIME" />
		</view>
		<view name="vw_activity" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `sa`.`subject_area` AS `subject_area`,`sa`.`title` AS `title`,`sa`.`description` AS `description`,`a`.`activity` AS `activity`,`a`.`task` AS `task` from (`devel`.`subject_area` `sa` join `devel`.`activity` `a` on((`a`.`subject_area` = `sa`.`subject_area`)))]]></view_script>
			<column name="subject_area" type="BINARY" />
			<column name="title" type="VARCHAR" />
			<column name="description" type="VARCHAR" />
			<column name="activity" type="BINARY" />
			<column name="task" type="VARCHAR" />
		</view>
		<view name="vw_api_requests" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `ipos`.`account` AS `account`,if((`rs`.`status` = 'Queued'),'Queued',ifnull(`os`.`status`,`rs`.`status`)) AS `status`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `instId`,`r`.`margin_mode` AS `marginMode`,`ipos`.`position` AS `positionSide`,`r`.`action` AS `side`,`rt`.`source_ref` AS `orderType`,replace(format(`r`.`price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `price`,replace(format(`r`.`size`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `size`,cast(`r`.`leverage` as char charset utf8mb4) AS `leverage`,if((`r`.`reduce_only` = 0),'false','true') AS `reduceOnly`,`r`.`broker_id` AS `brokerId`,cast(hex(`r`.`request`) as char charset utf8mb4) AS `clientOrderId`,`r`.`memo` AS `memo`,`r`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`request` `r` left join `devel`.`orders` `o` on((`r`.`request` = `o`.`request`))) left join `devel`.`order_state` `os` on((`o`.`order_state` = `os`.`order_state`))) join `devel`.`instrument_position` `ipos` on((`ipos`.`instrument_position` = `r`.`instrument_position`))) join `devel`.`instrument` `i` on((`i`.`instrument` = `ipos`.`instrument`))) join `devel`.`instrument_detail` `id` on((`i`.`instrument` = `id`.`instrument`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`))) join `devel`.`request_type` `rt` on((`r`.`request_type` = `rt`.`request_type`))) join `devel`.`state` `rs` on((`r`.`state` = `rs`.`state`)))]]></view_script>
			<column name="account" type="BINARY" />
			<column name="status" type="VARCHAR" />
			<column name="instId" type="VARCHAR" />
			<column name="marginMode" type="VARCHAR" />
			<column name="positionSide" type="CHAR" />
			<column name="side" type="CHAR" />
			<column name="orderType" type="VARCHAR" />
			<column name="price" type="VARCHAR" />
			<column name="size" type="VARCHAR" />
			<column name="leverage" type="VARCHAR" />
			<column name="reduceOnly" type="VARCHAR" />
			<column name="brokerId" type="VARCHAR" />
			<column name="clientOrderId" type="VARCHAR" />
			<column name="memo" type="VARCHAR" />
			<column name="expiry_time" type="DATETIME" />
		</view>
		<view name="vw_api_stop_requests" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `s`.`status` AS `status`,`devel`.`vip`.`symbol` AS `instId`,`devel`.`vip`.`position` AS `positionSide`,`sr`.`action` AS `side`,`sr`.`size` AS `size`,if((`sr`.`stop_type` = 'tp'),replace(format(`sr`.`trigger_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `tpTriggerPrice`,if((`sr`.`stop_type` = 'tp'),replace(format(`sr`.`order_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `tpOrderPrice`,if((`sr`.`stop_type` = 'sl'),replace(format(`sr`.`trigger_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `slTriggerPrice`,if((`sr`.`stop_type` = 'sl'),replace(format(`sr`.`order_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `slOrderPrice`,`sr`.`reduce_only` AS `reduceOnly`,concat(lower(cast(hex(`sr`.`stop_request`) as char charset utf8mb4)),'-',`sr`.`stop_type`) AS `clientOrderId` from ((`devel`.`stop_request` `sr` join `devel`.`state` `s` on((`sr`.`state` = `s`.`state`))) join `devel`.`vw_instrument_positions` `vip` on((`sr`.`instrument_position` = `devel`.`vip`.`instrument_position`)))]]></view_script>
			<column name="status" type="VARCHAR" />
			<column name="instId" type="VARCHAR" />
			<column name="positionSide" type="CHAR" />
			<column name="side" type="CHAR" />
			<column name="size" type="DOUBLE" />
			<column name="tpTriggerPrice" type="VARCHAR" />
			<column name="tpOrderPrice" type="VARCHAR" />
			<column name="slTriggerPrice" type="VARCHAR" />
			<column name="slOrderPrice" type="VARCHAR" />
			<column name="reduceOnly" type="BIT" />
			<column name="clientOrderId" type="VARCHAR" />
		</view>
		<view name="vw_audit_candles" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `audit`.`instrument` AS `instrument`,`audit`.`symbol` AS `symbol`,`audit`.`period` AS `period`,`audit`.`timeframe` AS `timeframe`,`audit`.`hour` AS `hour`,`audit`.`entries` AS `entries` from ((select `devel`.`vc`.`instrument` AS `instrument`,`devel`.`vc`.`symbol` AS `symbol`,`devel`.`vc`.`period` AS `period`,`devel`.`vc`.`timeframe` AS `timeframe`,cast(date_format(`devel`.`vc`.`bar_time`,'%Y-%m-%d %k:00:00') as datetime) AS `hour`,count(0) AS `entries` from `devel`.`vw_candles` `vc` group by `devel`.`vc`.`instrument`,`devel`.`vc`.`symbol`,`devel`.`vc`.`period`,`devel`.`vc`.`timeframe`,cast(date_format(`devel`.`vc`.`bar_time`,'%Y-%m-%d %k:00:00') as datetime) having (`entries` < 4)) `audit` join (select `c`.`instrument` AS `instrument`,`c`.`period` AS `period`,min(cast(date_format(`c`.`bar_time`,'%Y-%m-%d %k:00:00') as datetime)) AS `hour` from `devel`.`candle` `c` group by `c`.`instrument`,`c`.`period`) `exclusions` on(((`audit`.`instrument` = `exclusions`.`instrument`) and (`audit`.`period` = `exclusions`.`period`)))) where (`audit`.`hour` > `exclusions`.`hour`) order by `audit`.`symbol`,`audit`.`timeframe`,`audit`.`hour` desc]]></view_script>
			<column name="instrument" type="BINARY" />
			<column name="symbol" type="VARCHAR" />
			<column name="period" type="BINARY" />
			<column name="timeframe" type="VARCHAR" />
			<column name="hour" type="DATETIME" />
			<column name="entries" type="BIGINT" />
		</view>
		<view name="vw_audit_instrument_periods" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `missing`.`instrument` AS `instrument`,`missing`.`period` AS `period` from ((select `i`.`instrument` AS `instrument`,`p`.`period` AS `period` from (`devel`.`instrument` `i` join `devel`.`period` `p`)) `missing` left join `devel`.`instrument_period` `ip` on(((`ip`.`instrument` = `missing`.`instrument`) and (`ip`.`period` = `missing`.`period`)))) where (`ip`.`period` is null)]]></view_script>
			<column name="instrument" type="BINARY" />
			<column name="period" type="BINARY" />
		</view>
		<view name="vw_audit_instrument_positions" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `a`.`account` AS `account`,`devel`.`i`.`instrument` AS `instrument`,`p`.`position` AS `position`,`devel`.`i`.`state` AS `auto_state` from ((`devel`.`vw_instruments` `i` join `devel`.`position` `p`) join `devel`.`account` `a`) where (`a`.`account`,`devel`.`i`.`instrument`,`p`.`position`) in (select `ipos`.`account`,`ipos`.`instrument`,`ipos`.`position` from `devel`.`instrument_position` `ipos`) is false]]></view_script>
			<column name="account" type="BINARY" />
			<column name="instrument" type="BINARY" />
			<column name="position" type="CHAR" />
			<column name="auto_state" type="VARBINARY" />
		</view>
		<view name="vw_audit_requests" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `ipos`.`account` AS `account`,`ipos`.`instrument_position` AS `instrument_position`,`ipos`.`instrument` AS `instrument`,`ipos`.`position` AS `position`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`currency` AS `base_currency`,`b`.`symbol` AS `base_symbol`,`q`.`currency` AS `quote_currency`,`q`.`symbol` AS `quote_symbol`,`summary`.`state` AS `state`,`summary`.`status` AS `status`,`summary`.`occurs` AS `occurs` from ((((`devel`.`instrument_position` `ipos` join `devel`.`instrument` `i` on((`i`.`instrument` = `ipos`.`instrument`))) join `devel`.`currency` `b` on((`b`.`currency` = `i`.`base_currency`))) join `devel`.`currency` `q` on((`q`.`currency` = `i`.`quote_currency`))) join (select `ipos`.`instrument_position` AS `instrument_position`,`r`.`state` AS `state`,`rs`.`status` AS `status`,count(`r`.`state`) AS `occurs` from ((`devel`.`instrument_position` `ipos` join `devel`.`request` `r` on((`r`.`instrument_position` = `ipos`.`instrument_position`))) join `devel`.`state` `rs` on((`rs`.`state` = `r`.`state`))) group by `ipos`.`instrument_position`,`r`.`state`,`rs`.`status`) `summary` on((`summary`.`instrument_position` = `ipos`.`instrument_position`)))]]></view_script>
			<column name="account" type="BINARY" />
			<column name="instrument_position" type="BINARY" />
			<column name="instrument" type="BINARY" />
			<column name="position" type="CHAR" />
			<column name="symbol" type="VARCHAR" />
			<column name="base_currency" type="BINARY" />
			<column name="base_symbol" type="VARCHAR" />
			<column name="quote_currency" type="BINARY" />
			<column name="quote_symbol" type="VARCHAR" />
			<column name="state" type="BINARY" />
			<column name="status" type="VARCHAR" />
			<column name="occurs" type="BIGINT" />
		</view>
		<view name="vw_audit_role_authority" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `r`.`role` AS `role`,`auth`.`authority` AS `authority`,`a`.`activity` AS `activity` from ((`devel`.`activity` `a` join `devel`.`role` `r`) join `devel`.`authority` `auth`) where (`r`.`role`,`auth`.`authority`,`a`.`activity`) in (select `devel`.`role_authority`.`role`,`devel`.`role_authority`.`authority`,`devel`.`role_authority`.`activity` from `devel`.`role_authority`) is false]]></view_script>
			<column name="role" type="BINARY" />
			<column name="authority" type="BINARY" />
			<column name="activity" type="BINARY" />
		</view>
		<view name="vw_audit_states" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `ipos`.`account` AS `account`,`r`.`request` AS `request`,`ipos`.`instrument_position` AS `instrument_position`,`ipos`.`instrument` AS `instrument`,`ipos`.`position` AS `position`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`currency` AS `base_currency`,`b`.`symbol` AS `base_symbol`,`q`.`currency` AS `quote_currency`,`q`.`symbol` AS `quote_symbol`,`os`.`state` AS `old_state`,`os`.`status` AS `status`,`ns`.`state` AS `new_state`,`ns`.`status` AS `new_status`,`ar`.`update_time` AS `update_time` from (((((((`devel`.`audit_request` `ar` join `devel`.`request` `r` on((`r`.`request` = `ar`.`request`))) join `devel`.`instrument_position` `ipos` on((`ipos`.`instrument_position` = `r`.`instrument_position`))) join `devel`.`instrument` `i` on((`i`.`instrument` = `ipos`.`instrument`))) join `devel`.`currency` `b` on((`b`.`currency` = `i`.`base_currency`))) join `devel`.`currency` `q` on((`q`.`currency` = `i`.`quote_currency`))) join `devel`.`state` `os` on((`os`.`state` = `ar`.`old_state`))) join `devel`.`state` `ns` on((`ns`.`state` = `ar`.`new_state`)))]]></view_script>
			<column name="account" type="BINARY" />
			<column name="request" type="BINARY" />
			<column name="instrument_position" type="BINARY" />
			<column name="instrument" type="BINARY" />
			<column name="position" type="CHAR" />
			<column name="symbol" type="VARCHAR" />
			<column name="base_currency" type="BINARY" />
			<column name="base_symbol" type="VARCHAR" />
			<column name="quote_currency" type="BINARY" />
			<column name="quote_symbol" type="VARCHAR" />
			<column name="old_state" type="BINARY" />
			<column name="status" type="VARCHAR" />
			<column name="new_state" type="BINARY" />
			<column name="new_status" type="VARCHAR" />
			<column name="update_time" type="DATETIME" />
		</view>
		<view name="vw_auth_trade_instruments" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select distinct `ipos`.`account` AS `account`,`ipos`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`i`.`trade_period` AS `trade_period`,`s`.`state` AS `auto_state`,`s`.`status` AS `auto_status`,`i`.`margin_mode` AS `margin_mode`,`i`.`leverage` AS `leverage`,`id`.`max_leverage` AS `max_leverage`,`i`.`lot_scale_factor` AS `lot_scale_factor`,`i`.`martingale_factor` AS `martingale_factor`,`id`.`lot_size` AS `lot_size`,`id`.`min_size` AS `min_size`,`id`.`max_limit_size` AS `max_limit_size`,`id`.`max_market_size` AS `max_market_size`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits` from (((((`devel`.`instrument_position` `ipos` join `devel`.`instrument` `i` on((`i`.`instrument` = `ipos`.`instrument`))) join `devel`.`instrument_detail` `id` on((`id`.`instrument` = `ipos`.`instrument`))) join `devel`.`currency` `b` on((`b`.`currency` = `i`.`base_currency`))) join `devel`.`currency` `q` on((`q`.`currency` = `i`.`quote_currency`))) join `devel`.`state` `s` on((`s`.`state` = `ipos`.`auto_state`)))]]></view_script>
			<column name="account" type="BINARY" />
			<column name="instrument" type="BINARY" />
			<column name="symbol" type="VARCHAR" />
			<column name="trade_period" type="BINARY" />
			<column name="auto_state" type="BINARY" />
			<column name="auto_status" type="VARCHAR" />
			<column name="margin_mode" type="VARCHAR" />
			<column name="leverage" type="SMALLINT" />
			<column name="max_leverage" type="INT" />
			<column name="lot_scale_factor" type="SMALLINT" />
			<column name="martingale_factor" type="SMALLINT" />
			<column name="lot_size" type="DECIMAL" />
			<column name="min_size" type="DECIMAL" />
			<column name="max_limit_size" type="DECIMAL" />
			<column name="max_market_size" type="DECIMAL" />
			<column name="digits" type="BIGINT" />
		</view>
		<view name="vw_candles" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `devel`.`vi`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`currency` AS `base_currency`,`b`.`symbol` AS `base_symbol`,`q`.`currency` AS `quote_currency`,`q`.`symbol` AS `quote_symbol`,`pt`.`period` AS `period`,`pt`.`timeframe` AS `timeframe`,`c`.`bar_time` AS `bar_time`,(unix_timestamp(`c`.`bar_time`) * 1000) AS `timestamp`,`c`.`open` AS `open`,`c`.`high` AS `high`,`c`.`low` AS `low`,`c`.`close` AS `close`,`c`.`volume` AS `volume`,`c`.`vol_currency` AS `vol_currency`,`c`.`vol_currency_quote` AS `vol_currency_quote`,`devel`.`vi`.`digits` AS `digits`,`c`.`completed` AS `completed` from (((((`devel`.`candle` `c` join `devel`.`vw_instruments` `vi` on((`c`.`instrument` = `devel`.`vi`.`instrument`))) join `devel`.`period` `pt` on((`c`.`period` = `pt`.`period`))) join `devel`.`instrument_period` `ip` on(((`devel`.`vi`.`instrument` = `ip`.`instrument`) and (`ip`.`period` = `pt`.`period`)))) join `devel`.`currency` `b` on((`devel`.`vi`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`devel`.`vi`.`quote_currency` = `q`.`currency`)))]]></view_script>
			<column name="instrument" type="BINARY" />
			<column name="symbol" type="VARCHAR" />
			<column name="base_currency" type="BINARY" />
			<column name="base_symbol" type="VARCHAR" />
			<column name="quote_currency" type="BINARY" />
			<column name="quote_symbol" type="VARCHAR" />
			<column name="period" type="BINARY" />
			<column name="timeframe" type="VARCHAR" />
			<column name="bar_time" type="DATETIME" />
			<column name="timestamp" type="BIGINT" />
			<column name="open" type="DOUBLE" />
			<column name="high" type="DOUBLE" />
			<column name="low" type="DOUBLE" />
			<column name="close" type="DOUBLE" />
			<column name="volume" type="INT" />
			<column name="vol_currency" type="DECIMAL" />
			<column name="vol_currency_quote" type="DECIMAL" />
			<column name="digits" type="BIGINT" />
			<column name="completed" type="BIT" />
		</view>
		<view name="vw_currency" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `c`.`currency` AS `currency`,`c`.`symbol` AS `symbol`,`s`.`state` AS `state`,`s`.`status` AS `status`,`c`.`image_url` AS `image_url` from (`devel`.`currency` `c` join `devel`.`state` `s` on((`c`.`state` = `s`.`state`)))]]></view_script>
			<column name="currency" type="BINARY" />
			<column name="symbol" type="VARCHAR" />
			<column name="state" type="BINARY" />
			<column name="status" type="VARCHAR" />
			<column name="image_url" type="VARCHAR" />
		</view>
		<view name="vw_instrument_periods" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `i`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`symbol` AS `base_symbol`,`b`.`currency` AS `base_currency`,`q`.`symbol` AS `quote_symbol`,`q`.`currency` AS `quote_currency`,`p`.`period` AS `period`,`p`.`timeframe` AS `timeframe`,`p`.`timeframe_units` AS `timeframe_units`,`ip`.`bulk_collection_rate` AS `bulk_collection_rate`,if((`ip`.`bulk_collection_rate` = 0),0,if((`ip`.`interval_collection_rate` > 4),`ip`.`interval_collection_rate`,4)) AS `interval_collection_rate`,`ip`.`sma_factor` AS `sma_factor`,`ip`.`active_collection` AS `active_collection`,if((`qs`.`status` = 'Suspended'),`qs`.`state`,`bs`.`state`) AS `state`,if((`qs`.`status` = 'Suspended'),`qs`.`status`,`bs`.`status`) AS `status` from (((((((`devel`.`instrument` `i` join `devel`.`instrument_period` `ip` on((`ip`.`instrument` = `i`.`instrument`))) join `devel`.`period` `p` on((`ip`.`period` = `p`.`period`))) join `devel`.`instrument_detail` `id` on((`i`.`instrument` = `id`.`instrument`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`state` `bs` on((`b`.`state` = `bs`.`state`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`))) join `devel`.`state` `qs` on((`q`.`state` = `qs`.`state`)))]]></view_script>
			<column name="instrument" type="BINARY" />
			<column name="symbol" type="VARCHAR" />
			<column name="base_symbol" type="VARCHAR" />
			<column name="base_currency" type="BINARY" />
			<column name="quote_symbol" type="VARCHAR" />
			<column name="quote_currency" type="BINARY" />
			<column name="period" type="BINARY" />
			<column name="timeframe" type="VARCHAR" />
			<column name="timeframe_units" type="INT" />
			<column name="bulk_collection_rate" type="SMALLINT" />
			<column name="interval_collection_rate" type="INT" />
			<column name="sma_factor" type="SMALLINT" />
			<column name="active_collection" type="BIT" />
			<column name="state" type="VARBINARY" />
			<column name="status" type="VARCHAR" />
		</view>
		<view name="vw_instrument_positions" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `ipos`.`instrument_position` AS `instrument_position`,`ipos`.`account` AS `account`,`ipos`.`instrument` AS `instrument`,`ipos`.`position` AS `position`,`devel`.`vi`.`symbol` AS `symbol`,`ipos`.`state` AS `state`,`s`.`status` AS `status`,`ipos`.`auto_state` AS `auto_state`,`auto`.`status` AS `auto_status`,`ipos`.`strict_stops` AS `strict_stops`,`ipos`.`strict_targets` AS `strict_targets`,`id`.`digits` AS `digits`,ifnull(`r`.`open_request`,0) AS `open_request`,ifnull(`tp`.`open_take_profit`,0) AS `open_take_profit`,ifnull(`sl`.`open_stop_loss`,0) AS `open_stop_loss`,`ipos`.`update_time` AS `update_time`,`ipos`.`close_time` AS `close_time`,`r`.`create_time` AS `create_time` from (((((((`devel`.`instrument_position` `ipos` join `devel`.`vw_instruments` `vi` on((`ipos`.`instrument` = `devel`.`vi`.`instrument`))) join `devel`.`state` `s` on((`ipos`.`state` = `s`.`state`))) join `devel`.`state` `auto` on((`auto`.`state` = `ipos`.`auto_state`))) join (select `id`.`instrument` AS `instrument`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits` from `devel`.`instrument_detail` `id`) `id` on((`id`.`instrument` = `ipos`.`instrument`))) left join (select `r`.`instrument_position` AS `instrument_position`,max(`r`.`create_time`) AS `create_time`,count(0) AS `open_request` from (`devel`.`state` `s` join `devel`.`request` `r` on(((`r`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued'))))) group by `r`.`instrument_position`) `r` on((`r`.`instrument_position` = `ipos`.`instrument_position`))) left join (select `sr`.`instrument_position` AS `instrument_position`,count(0) AS `open_take_profit` from (`devel`.`state` `s` join `devel`.`stop_request` `sr` on(((`sr`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued')) and (`sr`.`stop_type` = 'tp')))) group by `sr`.`instrument_position`) `tp` on((`tp`.`instrument_position` = `ipos`.`instrument_position`))) left join (select `sr`.`instrument_position` AS `instrument_position`,count(0) AS `open_stop_loss` from (`devel`.`state` `s` join `devel`.`stop_request` `sr` on(((`sr`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued')) and (`sr`.`stop_type` = 'sl')))) group by `sr`.`instrument_position`) `sl` on((`sl`.`instrument_position` = `ipos`.`instrument_position`)))]]></view_script>
			<column name="account" type="BINARY" />
			<column name="instrument_position" type="BINARY" />
			<column name="instrument" type="BINARY" />
			<column name="position" type="CHAR" />
			<column name="symbol" type="VARCHAR" />
			<column name="state" type="BINARY" />
			<column name="status" type="VARCHAR" />
			<column name="auto_state" type="BINARY" />
			<column name="auto_status" type="VARCHAR" />
			<column name="strict_stops" type="BIT" />
			<column name="strict_targets" type="BIT" />
			<column name="digits" type="BIGINT" />
			<column name="open_request" type="BIGINT" />
			<column name="open_take_profit" type="BIGINT" />
			<column name="open_stop_loss" type="BIGINT" />
			<column name="create_time" type="DATETIME" />
			<column name="update_time" type="DATETIME" />
			<column name="close_time" type="DATETIME" />
		</view>
		<view name="vw_instruments" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `i`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`currency` AS `base_currency`,`b`.`symbol` AS `base_symbol`,`q`.`currency` AS `quote_currency`,`q`.`symbol` AS `quote_symbol`,`it`.`source_ref` AS `instrument_type`,`ct`.`source_ref` AS `contract_type`,`id`.`contract_value` AS `contract_value`,`i`.`margin_mode` AS `margin_mode`,`i`.`leverage` AS `leverage`,`id`.`max_leverage` AS `max_leverage`,`id`.`min_size` AS `min_size`,`id`.`max_limit_size` AS `max_limit_size`,`id`.`max_market_size` AS `max_market_size`,`id`.`lot_size` AS `lot_size`,`i`.`lot_scale_factor` AS `lot_scale_factor`,`id`.`tick_size` AS `tick_size`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits`,`i`.`martingale_factor` AS `martingale_factor`,`ip`.`bulk_collection_rate` AS `bulk_collection_rate`,if(((`ip`.`bulk_collection_rate` = 0) or (`ip`.`bulk_collection_rate` is null)),NULL,if((`ip`.`interval_collection_rate` > 4),`ip`.`interval_collection_rate`,4)) AS `interval_collection_rate`,`ip`.`sma_factor` AS `sma_factor`,`p`.`period` AS `trade_period`,`p`.`timeframe` AS `trade_timeframe`,`p`.`timeframe_units` AS `timeframe_units`,if((`qs`.`status` = 'Suspended'),`qs`.`state`,`bs`.`state`) AS `state`,if((`qs`.`status` = 'Suspended'),`qs`.`status`,`bs`.`status`) AS `status`,`id`.`list_time` AS `list_time`,`id`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`instrument` `i` join `devel`.`currency` `b` on((`b`.`currency` = `i`.`base_currency`))) join `devel`.`currency` `q` on((`q`.`currency` = `i`.`quote_currency`))) join `devel`.`state` `bs` on((`bs`.`state` = `b`.`state`))) join `devel`.`state` `qs` on((`qs`.`state` = `q`.`state`))) left join `devel`.`instrument_period` `ip` on(((`ip`.`period` = `i`.`trade_period`) and (`ip`.`instrument` = `i`.`instrument`)))) left join `devel`.`instrument_detail` `id` on((`id`.`instrument` = `i`.`instrument`))) left join `devel`.`instrument_type` `it` on((`it`.`instrument_type` = `id`.`instrument_type`))) left join `devel`.`contract_type` `ct` on((`ct`.`contract_type` = `id`.`contract_type`))) left join `devel`.`period` `p` on((`p`.`period` = `i`.`trade_period`)))]]></view_script>
			<column name="instrument" type="BINARY" />
			<column name="symbol" type="VARCHAR" />
			<column name="base_currency" type="BINARY" />
			<column name="base_symbol" type="VARCHAR" />
			<column name="quote_currency" type="BINARY" />
			<column name="quote_symbol" type="VARCHAR" />
			<column name="instrument_type" type="VARCHAR" />
			<column name="contract_type" type="VARCHAR" />
			<column name="contract_value" type="DECIMAL" />
			<column name="margin_mode" type="VARCHAR" />
			<column name="leverage" type="SMALLINT" />
			<column name="max_leverage" type="INT" />
			<column name="min_size" type="DECIMAL" />
			<column name="max_limit_size" type="DECIMAL" />
			<column name="max_market_size" type="DECIMAL" />
			<column name="lot_size" type="DECIMAL" />
			<column name="lot_scale_factor" type="SMALLINT" />
			<column name="tick_size" type="DOUBLE" />
			<column name="digits" type="BIGINT" />
			<column name="martingale_factor" type="SMALLINT" />
			<column name="bulk_collection_rate" type="SMALLINT" />
			<column name="interval_collection_rate" type="INT" />
			<column name="sma_factor" type="SMALLINT" />
			<column name="trade_period" type="BINARY" />
			<column name="trade_timeframe" type="VARCHAR" />
			<column name="timeframe_units" type="INT" />
			<column name="state" type="VARBINARY" />
			<column name="status" type="VARCHAR" />
			<column name="list_time" type="DATETIME" />
			<column name="expiry_time" type="DATETIME" />
		</view>
		<view name="vw_order_states" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `os`.`order_state` AS `order_state`,`os`.`source_ref` AS `source_ref`,`os`.`description` AS `description`,`s`.`state` AS `state`,`s`.`status` AS `status` from (`devel`.`order_state` `os` join `devel`.`state` `s` on((`s`.`status` = `os`.`status`)))]]></view_script>
			<column name="order_state" type="BINARY" />
			<column name="source_ref" type="VARCHAR" />
			<column name="description" type="VARCHAR" />
			<column name="state" type="BINARY" />
			<column name="status" type="VARCHAR" />
		</view>
		<view name="vw_orders" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `ipos`.`account` AS `account`,`r`.`request` AS `request`,`o`.`order_id` AS `order_id`,cast(hex(`r`.`request`) as char charset utf8mb4) AS `client_order_id`,`ipos`.`instrument_position` AS `instrument_position`,`ipos`.`instrument` AS `instrument`,`devel`.`vi`.`symbol` AS `symbol`,`devel`.`vi`.`base_currency` AS `base_currency`,`devel`.`vi`.`base_symbol` AS `base_symbol`,`devel`.`vi`.`quote_currency` AS `quote_currency`,`devel`.`vi`.`quote_symbol` AS `quote_symbol`,`s`.`state` AS `state`,`s`.`status` AS `status`,ifnull(`rs`.`state`,`s`.`state`) AS `request_state`,ifnull(`os`.`status`,`s`.`status`) AS `request_status`,`os`.`order_state` AS `order_state`,`os`.`source_ref` AS `order_status`,`ipos`.`position` AS `position`,`r`.`action` AS `action`,`r`.`request_type` AS `request_type`,`rt`.`source_ref` AS `order_type`,`r`.`margin_mode` AS `margin_mode`,`r`.`price` AS `price`,`r`.`size` AS `size`,`r`.`leverage` AS `leverage`,`o`.`filled_size` AS `filled_size`,`o`.`filled_amount` AS `filled_amount`,`o`.`average_price` AS `average_price`,`o`.`fee` AS `fee`,`o`.`pnl` AS `pnl`,`devel`.`vi`.`digits` AS `digits`,`cat`.`order_category` AS `order_category`,`cat`.`source_ref` AS `category`,`can`.`cancel_source` AS `cancel_source`,`can`.`source_ref` AS `canceled_by`,`devel`.`vi`.`contract_type` AS `contract_type`,`devel`.`vi`.`instrument_type` AS `instrument_type`,`r`.`reduce_only` AS `reduce_only`,`r`.`broker_id` AS `broker_id`,`devel`.`vi`.`trade_period` AS `trade_period`,`devel`.`vi`.`trade_timeframe` AS `trade_timeframe`,`devel`.`vi`.`timeframe_units` AS `timeframe_units`,`devel`.`vi`.`state` AS `trade_state`,`devel`.`vi`.`status` AS `trade_status`,`r`.`memo` AS `memo`,`r`.`create_time` AS `create_time`,`r`.`expiry_time` AS `expiry_time`,`r`.`update_time` AS `update_time` from (((((((((`devel`.`request` `r` join `devel`.`instrument_position` `ipos` on((`ipos`.`instrument_position` = `r`.`instrument_position`))) join `devel`.`vw_instruments` `vi` on((`devel`.`vi`.`instrument` = `ipos`.`instrument`))) join `devel`.`state` `s` on((`r`.`state` = `s`.`state`))) join `devel`.`request_type` `rt` on((`r`.`request_type` = `rt`.`request_type`))) left join `devel`.`orders` `o` on((`r`.`request` = `o`.`request`))) left join `devel`.`order_state` `os` on((`o`.`order_state` = `os`.`order_state`))) left join `devel`.`state` `rs` on((`os`.`status` = `rs`.`status`))) left join `devel`.`cancel_source` `can` on((`o`.`cancel_source` = `can`.`cancel_source`))) left join `devel`.`order_category` `cat` on((`o`.`order_category` = `cat`.`order_category`)))]]></view_script>
			<column name="account" type="BINARY" />
			<column name="request" type="BINARY" />
			<column name="order_id" type="BIGINT" />
			<column name="client_order_id" type="VARCHAR" />
			<column name="instrument_position" type="BINARY" />
			<column name="instrument" type="BINARY" />
			<column name="symbol" type="VARCHAR" />
			<column name="base_currency" type="BINARY" />
			<column name="base_symbol" type="VARCHAR" />
			<column name="quote_currency" type="BINARY" />
			<column name="quote_symbol" type="VARCHAR" />
			<column name="state" type="BINARY" />
			<column name="status" type="VARCHAR" />
			<column name="request_state" type="VARBINARY" />
			<column name="request_status" type="VARCHAR" />
			<column name="order_state" type="BINARY" />
			<column name="order_status" type="VARCHAR" />
			<column name="position" type="CHAR" />
			<column name="action" type="CHAR" />
			<column name="request_type" type="BINARY" />
			<column name="order_type" type="VARCHAR" />
			<column name="margin_mode" type="VARCHAR" />
			<column name="price" type="DOUBLE" />
			<column name="size" type="DOUBLE" />
			<column name="leverage" type="INT" />
			<column name="filled_size" type="DOUBLE" />
			<column name="filled_amount" type="DOUBLE" />
			<column name="average_price" type="DOUBLE" />
			<column name="fee" type="DOUBLE" />
			<column name="pnl" type="DOUBLE" />
			<column name="digits" type="BIGINT" />
			<column name="order_category" type="BINARY" />
			<column name="category" type="VARCHAR" />
			<column name="cancel_source" type="BINARY" />
			<column name="canceled_by" type="VARCHAR" />
			<column name="contract_type" type="VARCHAR" />
			<column name="instrument_type" type="VARCHAR" />
			<column name="reduce_only" type="BIT" />
			<column name="broker_id" type="VARCHAR" />
			<column name="trade_period" type="BINARY" />
			<column name="trade_timeframe" type="VARCHAR" />
			<column name="timeframe_units" type="INT" />
			<column name="trade_state" type="VARBINARY" />
			<column name="trade_status" type="VARCHAR" />
			<column name="memo" type="VARCHAR" />
			<column name="create_time" type="DATETIME" />
			<column name="update_time" type="DATETIME" />
			<column name="expiry_time" type="DATETIME" />
		</view>
		<view name="vw_positions" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `ipos`.`account` AS `account`,`p`.`positions` AS `positions`,`ipos`.`instrument_position` AS `instrument_position`,`ipos`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`ipos`.`position` AS `position`,`it`.`source_ref` AS `instrument_type`,if((`p`.`size` > 0),'buy','sell') AS `action`,if((`p`.`size` < 0),'buy','sell') AS `counter_action`,`p`.`size` AS `size`,`p`.`size_available` AS `size_available`,`p`.`leverage` AS `leverage`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits`,`p`.`margin_mode` AS `margin_mode`,`p`.`margin_ratio` AS `margin_ratio`,replace(format(`p`.`margin_initial`,3),',','') AS `margin_initial`,replace(format(`p`.`margin_maint`,3),',','') AS `margin_maint`,replace(format(`p`.`average_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `average_price`,replace(format(`p`.`liquidation_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `liquidation_price`,replace(format(`p`.`mark_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `mark_price`,replace(format(`p`.`unrealized_pnl`,3),',','') AS `unrealized_pnl`,`p`.`unrealized_pnl_ratio` AS `unrealized_pnl_ratio`,`p`.`adl` AS `adl`,`s`.`state` AS `state`,`s`.`status` AS `status`,`p`.`create_time` AS `create_time`,`p`.`update_time` AS `update_time` from (((((((`devel`.`positions` `p` join `devel`.`instrument_position` `ipos` on((`ipos`.`instrument_position` = `p`.`instrument_position`))) join `devel`.`instrument` `i` on((`i`.`instrument` = `ipos`.`instrument`))) join `devel`.`instrument_detail` `id` on((`id`.`instrument` = `ipos`.`instrument`))) join `devel`.`instrument_type` `it` on((`it`.`instrument_type` = `id`.`instrument_type`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`))) join `devel`.`state` `s` on((`ipos`.`state` = `s`.`state`)))]]></view_script>
			<column name="positions" type="BINARY" />
			<column name="instrument_position" type="BINARY" />
			<column name="account" type="BINARY" />
			<column name="instrument" type="BINARY" />
			<column name="symbol" type="VARCHAR" />
			<column name="position" type="CHAR" />
			<column name="instrument_type" type="VARCHAR" />
			<column name="action" type="VARCHAR" />
			<column name="counter_action" type="VARCHAR" />
			<column name="size" type="DOUBLE" />
			<column name="size_available" type="DOUBLE" />
			<column name="leverage" type="INT" />
			<column name="digits" type="BIGINT" />
			<column name="margin_mode" type="VARCHAR" />
			<column name="margin_ratio" type="DECIMAL" />
			<column name="margin_initial" type="VARCHAR" />
			<column name="margin_maint" type="VARCHAR" />
			<column name="average_price" type="VARCHAR" />
			<column name="liquidation_price" type="VARCHAR" />
			<column name="mark_price" type="VARCHAR" />
			<column name="unrealized_pnl" type="VARCHAR" />
			<column name="unrealized_pnl_ratio" type="DECIMAL" />
			<column name="adl" type="SMALLINT" />
			<column name="state" type="BINARY" />
			<column name="status" type="VARCHAR" />
			<column name="create_time" type="DATETIME" />
			<column name="update_time" type="DATETIME" />
		</view>
		<view name="vw_role_authority" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `r`.`role` AS `role`,`r`.`title` AS `title`,`sa`.`subject_area` AS `subject_area`,`sa`.`title` AS `subject_area_title`,`sa`.`description` AS `description`,`a`.`activity` AS `activity`,`a`.`task` AS `task`,`auth`.`authority` AS `authority`,`auth`.`privilege` AS `privilege`,`auth`.`priority` AS `priority`,`s`.`state` AS `state`,`s`.`status` AS `status` from (((((`devel`.`role_authority` `ra` join `devel`.`role` `r` on((`r`.`role` = `ra`.`role`))) join `devel`.`activity` `a` on((`a`.`activity` = `ra`.`activity`))) join `devel`.`subject_area` `sa` on((`sa`.`subject_area` = `a`.`subject_area`))) join `devel`.`authority` `auth` on((`auth`.`authority` = `ra`.`authority`))) join `devel`.`state` `s` on((`s`.`state` = `ra`.`state`)))]]></view_script>
			<column name="role" type="BINARY" />
			<column name="title" type="VARCHAR" />
			<column name="subject_area" type="BINARY" />
			<column name="description" type="VARCHAR" />
			<column name="activity" type="BINARY" />
			<column name="task" type="VARCHAR" />
			<column name="authority" type="BINARY" />
			<column name="privilege" type="VARCHAR" />
			<column name="priority" type="SMALLINT" />
			<column name="state" type="BINARY" />
			<column name="status" type="VARCHAR" />
			<column name="subject_area_title" type="VARCHAR" />
		</view>
		<view name="vw_role_subject_areas" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `ra`.`role` AS `role`,`ra`.`authority` AS `authority`,`ra`.`activity` AS `activity`,`ra`.`state` AS `state`,`rsa`.`title` AS `subject_area_title` from (`devel`.`role_authority` `ra` join (select `a`.`activity` AS `activity`,`sa`.`subject_area` AS `subject_area`,`sa`.`title` AS `title` from (`devel`.`activity` `a` join `devel`.`subject_area` `sa`) group by `a`.`activity`,`sa`.`subject_area`) `rsa` on((`ra`.`activity` = `rsa`.`activity`)))]]></view_script>
			<column name="role" type="BINARY" />
			<column name="authority" type="BINARY" />
			<column name="activity" type="BINARY" />
			<column name="state" type="BINARY" />
			<column name="subject_area_title" type="VARCHAR" />
		</view>
		<view name="vw_stop_orders" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `devel`.`vip`.`account` AS `account`,`sr`.`stop_request` AS `stop_request`,`sr`.`stop_type` AS `stop_type`,`so`.`tpsl_id` AS `tpsl_id`,lower(cast(hex(`sr`.`stop_request`) as char charset utf8mb4)) AS `client_order_id`,`devel`.`vip`.`instrument_position` AS `instrument_position`,`devel`.`vip`.`instrument` AS `instrument`,`devel`.`vip`.`symbol` AS `symbol`,`devel`.`vip`.`position` AS `position`,`devel`.`vip`.`state` AS `position_state`,`devel`.`vip`.`status` AS `position_status`,`s`.`state` AS `state`,`s`.`status` AS `status`,coalesce(if((`s`.`status` = 'Expired'),`s`.`state`,NULL),`rs`.`state`,`s`.`state`) AS `request_state`,coalesce(if((`s`.`status` = 'Expired'),`s`.`status`,NULL),`rs`.`status`,`s`.`status`) AS `request_status`,`os`.`order_state` AS `order_state`,`os`.`source_ref` AS `order_status`,`sr`.`action` AS `action`,`sr`.`size` AS `size`,`so`.`actual_size` AS `actual_size`,`sr`.`trigger_price` AS `trigger_price`,`sr`.`order_price` AS `order_price`,`sr`.`reduce_only` AS `reduce_only`,`sr`.`memo` AS `memo`,`sr`.`broker_id` AS `broker_id`,`sr`.`create_time` AS `create_time`,`sr`.`update_time` AS `update_time` from (((((`devel`.`stop_request` `sr` left join `devel`.`stop_order` `so` on((`so`.`stop_request` = `sr`.`stop_request`))) left join `devel`.`order_state` `os` on((`os`.`order_state` = `so`.`order_state`))) left join `devel`.`state` `rs` on((`rs`.`status` = `os`.`status`))) join `devel`.`vw_instrument_positions` `vip` on((`sr`.`instrument_position` = `devel`.`vip`.`instrument_position`))) join `devel`.`state` `s` on((`s`.`state` = `sr`.`state`)))]]></view_script>
			<column name="stop_request" type="BINARY" />
			<column name="stop_type" type="CHAR" />
			<column name="tpsl_id" type="BIGINT" />
			<column name="client_order_id" type="VARCHAR" />
			<column name="instrument_position" type="BINARY" />
			<column name="instrument" type="BINARY" />
			<column name="symbol" type="VARCHAR" />
			<column name="position" type="CHAR" />
			<column name="position_state" type="BINARY" />
			<column name="position_status" type="VARCHAR" />
			<column name="state" type="BINARY" />
			<column name="status" type="VARCHAR" />
			<column name="request_state" type="VARBINARY" />
			<column name="request_status" type="VARCHAR" />
			<column name="order_state" type="BINARY" />
			<column name="order_status" type="VARCHAR" />
			<column name="action" type="CHAR" />
			<column name="size" type="DOUBLE" />
			<column name="actual_size" type="DOUBLE" />
			<column name="trigger_price" type="DOUBLE" />
			<column name="order_price" type="DOUBLE" />
			<column name="reduce_only" type="BIT" />
			<column name="memo" type="VARCHAR" />
			<column name="broker_id" type="VARCHAR" />
			<column name="create_time" type="DATETIME" />
			<column name="update_time" type="DATETIME" />
			<column name="account" type="BINARY" />
		</view>
		<view name="vw_users" >
			<comment><![CDATA[VIEW]]></comment>
			<view_script><![CDATA[CREATE VIEW ${nameWithSchemaName} AS select `u`.`user` AS `user`,`u`.`username` AS `username`,`u`.`email` AS `email`,`u`.`role` AS `role`,`r`.`title` AS `title`,`u`.`state` AS `state`,`s`.`status` AS `status`,`u`.`image_url` AS `image_url`,`u`.`password` AS `password`,`u`.`hash` AS `hash`,`rc`.`similar_roles` AS `similar_roles`,`uc`.`total_users` AS `total_users`,`u`.`create_time` AS `create_time`,`u`.`update_time` AS `update_time` from ((((`devel`.`user` `u` join `devel`.`role` `r` on((`r`.`role` = `u`.`role`))) join (select `devel`.`user`.`role` AS `role`,count(0) AS `similar_roles` from `devel`.`user` group by `devel`.`user`.`role`) `rc` on((`rc`.`role` = `u`.`role`))) join (select count(0) AS `total_users` from `devel`.`user`) `uc`) join `devel`.`state` `s` on((`s`.`state` = `u`.`state`)))]]></view_script>
			<column name="user" type="BINARY" />
			<column name="username" type="VARCHAR" />
			<column name="email" type="VARCHAR" />
			<column name="role" type="BINARY" />
			<column name="title" type="VARCHAR" />
			<column name="state" type="BINARY" />
			<column name="status" type="VARCHAR" />
			<column name="image_url" type="VARCHAR" />
			<column name="password" type="BINARY" />
			<column name="hash" type="BINARY" />
			<column name="similar_roles" type="BIGINT" />
			<column name="total_users" type="BIGINT" />
			<column name="create_time" type="DATETIME" />
			<column name="update_time" type="DATETIME" />
		</view>
		<trigger name="trig_audit_request" table="request" id="0de80e54-cbdb-476d-87e2-d3193ceffec7" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER ${nameWithSchemaName} AFTER UPDATE ON request FOR EACH ROW BEGIN
	if (old.state != new.state) then
    INSERT INTO devel.audit_request VALUES (NEW.request, OLD.state, NEW.state, NEW.update_time);
end if;
  END]]></string>
		</trigger>
	</schema>
	<layout name="Main Diagram" id="8ebd5325-da29-41a9-b71d-52356bcda289" show_relation="fk_name" >
		<entity schema="devel" name="vw_instruments" color="ECF0F7" x="2755" y="95" />
		<entity schema="devel" name="contract_type" color="F0ECF7" x="1748" y="1159" />
		<entity schema="devel" name="instrument_period" color="F0ECF7" x="1045" y="1273" />
		<entity schema="devel" name="currency" color="F0ECF7" x="1558" y="836" />
		<entity schema="devel" name="audit_request" color="00FFFF" x="2356" y="152" />
		<entity schema="devel" name="broker" color="F4DDBE" x="2356" y="1140" />
		<entity schema="devel" name="user" color="C7F4BE" x="1767" y="380" />
		<entity schema="devel" name="instrument" color="F0ECF7" x="1520" y="1121" />
		<entity schema="devel" name="vw_candles" color="ECF0F7" x="2983" y="95" />
		<entity schema="devel" name="vw_orders" color="ECF0F7" x="3192" y="95" />
		<entity schema="devel" name="vw_audit_candles" color="ECF0F7" x="2755" y="741" />
		<entity schema="devel" name="role" color="C7F4BE" x="1463" y="418" />
		<entity schema="devel" name="user_account" color="F4DDBE" x="2318" y="380" />
		<entity schema="devel" name="instrument_type" color="F0ECF7" x="1691" y="988" />
		<entity schema="devel" name="vw_instrument_periods" color="ECF0F7" x="3401" y="513" />
		<entity schema="devel" name="vw_instrument_positions" color="ECF0F7" x="3401" y="95" />
		<entity schema="devel" name="vw_audit_instrument_positions" color="ECF0F7" x="2698" y="931" />
		<entity schema="devel" name="vw_accounts" color="ECF0F7" x="2527" y="95" />
		<entity schema="devel" name="account_detail" color="F4DDBE" x="1938" y="817" />
		<entity schema="devel" name="account" color="F4DDBE" x="2299" y="608" />
		<entity schema="devel" name="environment" color="F4DDBE" x="2185" y="1045" />
		<entity schema="devel" name="vw_stop_orders" color="ECF0F7" x="2983" y="513" />
		<entity schema="devel" name="positions" color="FFFF00" x="817" y="817" />
		<entity schema="devel" name="margin_mode" color="FFFF00" x="513" y="1159" />
		<entity schema="devel" name="activity" color="C7F4BE" x="1045" y="95" />
		<entity schema="devel" name="role_authority" color="C7F4BE" x="1368" y="95" />
		<entity schema="devel" name="authority" color="C7F4BE" x="1672" y="95" />
		<entity schema="devel" name="api_error" color="00FFFF" x="1938" y="95" />
		<entity schema="devel" name="order_state" color="FFFF00" x="57" y="114" />
		<entity schema="devel" name="stop_request" color="FFFF00" x="817" y="285" />
		<entity schema="devel" name="subject_area" color="C7F4BE" x="1045" y="380" />
		<entity schema="devel" name="request" color="FFFF00" x="570" y="608" />
		<entity schema="devel" name="orders" color="FFFF00" x="76" y="551" />
		<entity schema="devel" name="order_category" color="FFFF00" x="171" y="266" />
		<entity schema="devel" name="stop_type" color="FFFF00" x="855" y="95" />
		<entity schema="devel" name="cancel_source" color="FFFF00" x="76" y="988" />
		<entity schema="devel" name="stop_order" color="FFFF00" x="513" y="152" />
		<entity schema="devel" name="price_type" color="FFFF00" x="532" y="456" />
		<entity schema="devel" name="candle" color="F0ECF7" x="1387" y="1463" />
		<entity schema="devel" name="period" color="F0ECF7" x="1064" y="1634" />
		<entity schema="devel" name="instrument_detail" color="F0ECF7" x="1653" y="1482" />
		<entity schema="devel" name="state" color="F4BECD" x="1292" y="551" />
		<entity schema="devel" name="instrument_position" color="F0ECF7" x="1197" y="760" />
		<entity schema="devel" name="position" color="F0ECF7" x="1159" y="1140" />
		<entity schema="devel" name="request_type" color="FFFF00" x="266" y="836" />
		<entity schema="devel" name="vw_role_subject_areas" color="ECF0F7" x="2527" y="1254" />
		<entity schema="devel" name="vw_audit_role_authority" color="ECF0F7" x="3401" y="874" />
		<entity schema="devel" name="vw_auth_trade_instruments" color="ECF0F7" x="3401" y="1007" />
		<entity schema="devel" name="vw_order_states" color="ECF0F7" x="3249" y="1083" />
		<entity schema="devel" name="vw_currency" color="ECF0F7" x="3097" y="1102" />
		<entity schema="devel" name="vw_role_authority" color="ECF0F7" x="3439" y="1387" />
		<entity schema="devel" name="vw_activity" color="ECF0F7" x="2945" y="1102" />
		<entity schema="devel" name="vw_positions" color="ECF0F7" x="2736" y="1083" />
		<entity schema="devel" name="vw_audit_requests" color="ECF0F7" x="2527" y="1425" />
		<entity schema="devel" name="vw_users" color="ECF0F7" x="2546" y="912" />
		<entity schema="devel" name="vw_api_stop_requests" color="ECF0F7" x="3116" y="1387" />
		<entity schema="devel" name="vw_api_requests" color="ECF0F7" x="2945" y="1273" />
		<entity schema="devel" name="vw_audit_instrument_periods" color="ECF0F7" x="3116" y="1273" />
		<entity schema="devel" name="vw_audit_states" color="3986C1" x="817" y="1368" />
		<group name="views" color="ECF0F7" >
			<entity schema="devel" name="vw_instruments" />
			<entity schema="devel" name="vw_candles" />
			<entity schema="devel" name="vw_orders" />
			<entity schema="devel" name="vw_audit_candles" />
			<entity schema="devel" name="vw_instrument_periods" />
			<entity schema="devel" name="vw_instrument_positions" />
			<entity schema="devel" name="vw_audit_instrument_positions" />
			<entity schema="devel" name="vw_accounts" />
			<entity schema="devel" name="vw_stop_orders" />
			<entity schema="devel" name="vw_role_subject_areas" />
			<entity schema="devel" name="vw_audit_role_authority" />
			<entity schema="devel" name="vw_auth_trade_instruments" />
			<entity schema="devel" name="vw_order_states" />
			<entity schema="devel" name="vw_currency" />
			<entity schema="devel" name="vw_role_authority" />
			<entity schema="devel" name="vw_activity" />
			<entity schema="devel" name="vw_positions" />
			<entity schema="devel" name="vw_audit_requests" />
			<entity schema="devel" name="vw_users" />
			<entity schema="devel" name="vw_api_stop_requests" />
			<entity schema="devel" name="vw_api_requests" />
			<entity schema="devel" name="vw_audit_instrument_periods" />
		</group>
		<group name="broker" color="F7F2EC" >
			<entity schema="devel" name="broker" />
			<entity schema="devel" name="user_account" />
			<entity schema="devel" name="account_detail" />
			<entity schema="devel" name="account" />
			<entity schema="devel" name="environment" />
		</group>
		<group name="activity" color="EEF7EC" >
			<entity schema="devel" name="user" />
			<entity schema="devel" name="role" />
			<entity schema="devel" name="activity" />
			<entity schema="devel" name="role_authority" />
			<entity schema="devel" name="authority" />
			<entity schema="devel" name="subject_area" />
		</group>
		<group name="instruments" color="F0ECF7" >
			<entity schema="devel" name="contract_type" />
			<entity schema="devel" name="instrument_period" />
			<entity schema="devel" name="currency" />
			<entity schema="devel" name="instrument" />
			<entity schema="devel" name="instrument_type" />
			<entity schema="devel" name="candle" />
			<entity schema="devel" name="period" />
			<entity schema="devel" name="instrument_detail" />
			<entity schema="devel" name="instrument_position" />
			<entity schema="devel" name="position" />
		</group>
		<group name="orders" color="FFFF00" >
			<entity schema="devel" name="positions" />
			<entity schema="devel" name="margin_mode" />
			<entity schema="devel" name="order_state" />
			<entity schema="devel" name="stop_request" />
			<entity schema="devel" name="request" />
			<entity schema="devel" name="orders" />
			<entity schema="devel" name="order_category" />
			<entity schema="devel" name="stop_type" />
			<entity schema="devel" name="cancel_source" />
			<entity schema="devel" name="stop_order" />
			<entity schema="devel" name="price_type" />
			<entity schema="devel" name="request_type" />
		</group>
		<group name="auxiliary" color="00FFFF" >
			<entity schema="devel" name="audit_request" />
			<entity schema="devel" name="api_error" />
		</group>
		<script name="SQL_Editor" id="25b8aec0-7f4f-4f16-8e29-834a98e001f7" language="SQL" >
			<string><![CDATA[CREATE SCHEMA devel;

CREATE  TABLE devel.activity ( 
	activity             BINARY(3)    NOT NULL   PRIMARY KEY,
	task                 VARCHAR(60)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_activity UNIQUE ( task ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.api_error ( 
	error_code           INT    NOT NULL   PRIMARY KEY,
	http_status_code     SMALLINT    NOT NULL   ,
	error_message        VARCHAR(200)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.audit_request ( 
	request              BINARY(6)       ,
	old_state            BINARY(3)       ,
	new_state            BINARY(3)       ,
	update_time          DATETIME(6)       
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.authority ( 
	authority            BINARY(3)    NOT NULL   PRIMARY KEY,
	privilege            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	priority             SMALLINT  DEFAULT (0)  NOT NULL   ,
	CONSTRAINT ak_authority UNIQUE ( privilege ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.broker ( 
	broker               BINARY(3)    NOT NULL   PRIMARY KEY,
	name                 VARCHAR(30)    NOT NULL   ,
	image_url            VARCHAR(60)  DEFAULT ('_utf8mb4'./images/broker/no-image'')  NOT NULL   ,
	website_url          VARCHAR(60)    NOT NULL   ,
	CONSTRAINT ak_broker UNIQUE ( name ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.cancel_source ( 
	cancel_source        BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(15)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	source               VARCHAR(12)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_cancel UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.contract_type ( 
	contract_type        BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_contract_type UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.environment ( 
	environment          BINARY(3)    NOT NULL   PRIMARY KEY,
	environ              VARCHAR(15)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.fibonacci ( 
	fibonacci            BINARY(3)    NOT NULL   PRIMARY KEY,
	level                TINYINT    NOT NULL   ,
	percent              DECIMAL(5,3)    NOT NULL   ,
	alias                VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.fractal_state ( 
	fractal_state        CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.instrument_type ( 
	instrument_type      BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_instrument_type UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.margin_mode ( 
	margin_mode          VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.order_category ( 
	order_category       BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(20)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_category UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.order_state ( 
	order_state          BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(20)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	`status`             VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	map_ref              VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	CONSTRAINT ak_order_state UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.period ( 
	period               BINARY(3)    NOT NULL   PRIMARY KEY,
	timeframe            VARCHAR(3)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	timeframe_units      INT    NOT NULL   ,
	CONSTRAINT ak_period UNIQUE ( timeframe ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.point_type ( 
	point_type           CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.position ( 
	position             CHAR(5)    NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE  TABLE devel.price_type ( 
	price_type           CHAR(5)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY,
	description          VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.request_type ( 
	request_type         BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	CONSTRAINT ak_request_type UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.role ( 
	role                 BINARY(3)    NOT NULL   PRIMARY KEY,
	title                VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	auth_rank            SMALLINT    NOT NULL   ,
	CONSTRAINT ak_role UNIQUE ( title ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.state ( 
	state                BINARY(3)    NOT NULL   PRIMARY KEY,
	`status`             VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(60)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_trade_state UNIQUE ( `status` ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.stop_type ( 
	stop_type            CHAR(2)    NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE  TABLE devel.subject ( 
	subject              BINARY(3)    NOT NULL   PRIMARY KEY,
	area                 VARCHAR(60)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.`user` ( 
	`user`               BINARY(3)    NOT NULL   PRIMARY KEY,
	email                VARCHAR(80)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	role                 BINARY(3)    NOT NULL   ,
	hash                 BINARY(16)    NOT NULL   ,
	username             VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	password             BINARY(32)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	image_url            VARCHAR(60)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_user UNIQUE ( username, email ) ,
	CONSTRAINT fk_u_role FOREIGN KEY ( role ) REFERENCES devel.role( role ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_u_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_u_role ON devel.`user` ( role );

CREATE INDEX fk_u_state ON devel.`user` ( state );

CREATE  TABLE devel.account ( 
	account              BINARY(3)    NOT NULL   PRIMARY KEY,
	broker               BINARY(3)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	environment          BINARY(3)    NOT NULL   ,
	total_equity         DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	isolated_equity      DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	wss_url              VARCHAR(100)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	rest_api_url         VARCHAR(100)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	wss_public_url       VARCHAR(100)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT fk_a_broker FOREIGN KEY ( broker ) REFERENCES devel.broker( broker ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_a_environment FOREIGN KEY ( environment ) REFERENCES devel.environment( environment ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_a_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_a_state ON devel.account ( state );

CREATE INDEX fk_a_broker ON devel.account ( broker );

CREATE INDEX fk_a_environment ON devel.account ( environment );

CREATE  TABLE devel.currency ( 
	currency             BINARY(3)    NOT NULL   PRIMARY KEY,
	state                BINARY(3)    NOT NULL   ,
	symbol               VARCHAR(20)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	image_url            VARCHAR(300)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	suspense             BOOLEAN       ,
	CONSTRAINT ak_currency UNIQUE ( symbol ) ,
	CONSTRAINT unq_currency_state UNIQUE ( state ) ,
	CONSTRAINT fk_c_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.instrument ( 
	instrument           BINARY(3)    NOT NULL   PRIMARY KEY,
	period               BINARY(3)    NOT NULL   ,
	base_currency        BINARY(3)    NOT NULL   ,
	quote_currency       BINARY(3)    NOT NULL   ,
	margin_mode          VARCHAR(10)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	leverage             SMALLINT  DEFAULT (10)  NOT NULL   ,
	lot_scale_factor     SMALLINT UNSIGNED DEFAULT (1)     ,
	martingale_factor    SMALLINT  DEFAULT (1)  NOT NULL   ,
	CONSTRAINT ak_instrument UNIQUE ( base_currency, quote_currency ) ,
	CONSTRAINT fk_i_base_currency FOREIGN KEY ( base_currency ) REFERENCES devel.currency( currency ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_i_margin_mode FOREIGN KEY ( margin_mode ) REFERENCES devel.margin_mode( margin_mode ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_i_period FOREIGN KEY ( period ) REFERENCES devel.period( period ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_i_quote_currency FOREIGN KEY ( quote_currency ) REFERENCES devel.currency( currency ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_i_quote_currency ON devel.instrument ( quote_currency );

CREATE INDEX fk_i_trade_period ON devel.instrument ( period );

CREATE INDEX fk_i_margin_mode ON devel.instrument ( margin_mode );

CREATE  TABLE devel.instrument_detail ( 
	instrument           BINARY(3)    NOT NULL   PRIMARY KEY,
	instrument_type      BINARY(3)    NOT NULL   ,
	contract_type        BINARY(3)    NOT NULL   ,
	contract_value       DECIMAL(17,5)    NOT NULL   ,
	max_leverage         INT    NOT NULL   ,
	min_size             DECIMAL(5,3)    NOT NULL   ,
	lot_size             DECIMAL(5,3)    NOT NULL   ,
	tick_size            DOUBLE    NOT NULL   ,
	max_limit_size       DECIMAL(13,2)    NOT NULL   ,
	max_market_size      DECIMAL(13,2)    NOT NULL   ,
	list_time            DATETIME(3)    NOT NULL   ,
	expiry_time          DATETIME(3)    NOT NULL   ,
	CONSTRAINT fk_id_contract_type FOREIGN KEY ( contract_type ) REFERENCES devel.contract_type( contract_type ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_id_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_id_instrument_type FOREIGN KEY ( instrument_type ) REFERENCES devel.instrument_type( instrument_type ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_id_instrument_type ON devel.instrument_detail ( instrument_type );

CREATE INDEX fk_id_contract_type ON devel.instrument_detail ( contract_type );

CREATE  TABLE devel.instrument_period ( 
	instrument           BINARY(3)    NOT NULL   ,
	period               BINARY(3)    NOT NULL   ,
	sma_factor           SMALLINT  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	bulk_collection_rate SMALLINT  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	interval_collection_rate SMALLINT  DEFAULT (0)  NOT NULL   ,
	strict_stops         BOOLEAN  DEFAULT (false)  NOT NULL   ,
	CONSTRAINT pk_instrument_period PRIMARY KEY ( instrument, period ),
	CONSTRAINT fk_ip_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ip_period FOREIGN KEY ( period ) REFERENCES devel.period( period ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ip_period ON devel.instrument_period ( period );

CREATE  TABLE devel.instrument_position ( 
	instrument_position  BINARY(3)    NOT NULL   PRIMARY KEY,
	account              BINARY(3)    NOT NULL   ,
	instrument           BINARY(3)    NOT NULL   ,
	position             CHAR(5)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	auto_state           BINARY(3)    NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	close_time           DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_instrument_position UNIQUE ( account, instrument, position ) ,
	CONSTRAINT fk_ipos_account FOREIGN KEY ( account ) REFERENCES devel.account( account ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ipos_position FOREIGN KEY ( position ) REFERENCES devel.position( position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ipos_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ipos_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE INDEX fk_ipos_state ON devel.instrument_position ( state );

CREATE INDEX fk_ipos_position ON devel.instrument_position ( position );

CREATE INDEX fk_ipos_instrument ON devel.instrument_position ( instrument );

CREATE  TABLE devel.positions ( 
	positions            BINARY(6)    NOT NULL   PRIMARY KEY,
	instrument_position  BINARY(3)    NOT NULL   ,
	size                 DOUBLE    NOT NULL   ,
	size_available       DOUBLE    NOT NULL   ,
	leverage             INT  DEFAULT (0)  NOT NULL   ,
	margin_mode          VARCHAR(10)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	margin_used          DOUBLE  DEFAULT (0)  NOT NULL   ,
	margin_ratio         DECIMAL(12,3)    NOT NULL   ,
	margin_initial       DOUBLE    NOT NULL   ,
	margin_maint         DOUBLE    NOT NULL   ,
	average_price        DOUBLE    NOT NULL   ,
	mark_price           DOUBLE    NOT NULL   ,
	liquidation_price    DOUBLE    NOT NULL   ,
	unrealized_pnl       DOUBLE    NOT NULL   ,
	unrealized_pnl_ratio DECIMAL(12,3)    NOT NULL   ,
	adl                  SMALLINT  DEFAULT (0)  NOT NULL   ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT fk_p_instrument_position FOREIGN KEY ( instrument_position ) REFERENCES devel.instrument_position( instrument_position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_p_margin_mode FOREIGN KEY ( margin_mode ) REFERENCES devel.margin_mode( margin_mode ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_p_margin_mode ON devel.positions ( margin_mode );

CREATE INDEX fk_p_instrument_position ON devel.positions ( instrument_position );

CREATE  TABLE devel.request ( 
	request              BINARY(6)    NOT NULL   PRIMARY KEY,
	instrument_position  BINARY(3)    NOT NULL   ,
	action               CHAR(4)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	price                DOUBLE  DEFAULT (0)  NOT NULL   ,
	size                 DOUBLE    NOT NULL   ,
	leverage             INT    NOT NULL   ,
	request_type         BINARY(3)    NOT NULL   ,
	margin_mode          VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	reduce_only          BOOLEAN  DEFAULT (false)  NOT NULL   ,
	memo                 VARCHAR(200)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	broker_id            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	expiry_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT fk_r_instrument_position FOREIGN KEY ( instrument_position ) REFERENCES devel.instrument_position( instrument_position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_r_margin_mode FOREIGN KEY ( margin_mode ) REFERENCES devel.margin_mode( margin_mode ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_r_request_type FOREIGN KEY ( request_type ) REFERENCES devel.request_type( request_type ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_r_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

ALTER TABLE devel.request ADD CONSTRAINT ck_r_action CHECK ( `action` in (_utf8mb4'buy',_utf8mb4'sell') );

CREATE INDEX fk_r_instrument_position ON devel.request ( instrument_position );

CREATE INDEX fk_r_request_type ON devel.request ( request_type );

CREATE INDEX fk_r_margin_mode ON devel.request ( margin_mode );

CREATE INDEX fk_r_state ON devel.request ( state );

CREATE  TABLE devel.role_authority ( 
	role_authority       BINARY(3)    NOT NULL   PRIMARY KEY,
	role                 BINARY(3)    NOT NULL   ,
	authority            BINARY(3)    NOT NULL   ,
	subject              BINARY(3)    NOT NULL   ,
	enabled              BOOLEAN  DEFAULT (true)  NOT NULL   ,
	CONSTRAINT ak_role_authority UNIQUE ( role, authority, subject ) ,
	CONSTRAINT fk_sra_authority FOREIGN KEY ( authority ) REFERENCES devel.authority( authority ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_sra_role FOREIGN KEY ( role ) REFERENCES devel.role( role ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_sra_subject FOREIGN KEY ( subject ) REFERENCES devel.subject( subject ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ra_subject ON devel.role_authority ( subject );

CREATE INDEX fk_ra_role ON devel.role_authority ( role );

CREATE INDEX fk_ra_authority ON devel.role_authority ( authority );

CREATE  TABLE devel.stop_request ( 
	stop_request         BINARY(4)    NOT NULL   ,
	instrument_position  BINARY(3)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	stop_type            CHAR(2)    NOT NULL   ,
	action               CHAR(4)    NOT NULL   ,
	size                 DOUBLE       ,
	trigger_price        DOUBLE  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	order_price          DOUBLE  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	reduce_only          BOOLEAN  DEFAULT (false)  NOT NULL   ,
	memo                 VARCHAR(100)       ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT pk_stop_request PRIMARY KEY ( stop_request, stop_type ),
	CONSTRAINT fk_sr_instrument_position FOREIGN KEY ( instrument_position ) REFERENCES devel.instrument_position( instrument_position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_sr_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_sr_stop_type FOREIGN KEY ( stop_type ) REFERENCES devel.stop_type( stop_type ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE INDEX fk_sr_stop_type ON devel.stop_request ( stop_type );

CREATE INDEX fk_sr_instrument_position ON devel.stop_request ( instrument_position );

CREATE INDEX fk_sr_state ON devel.stop_request ( state );

CREATE  TABLE devel.task_authority ( 
	role_authority       BINARY(3)    NOT NULL   ,
	activity             BINARY(3)    NOT NULL   ,
	CONSTRAINT pk_task_authority PRIMARY KEY ( role_authority, activity ),
	CONSTRAINT fk_ta_activity FOREIGN KEY ( activity ) REFERENCES devel.activity( activity ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ta_role_authority FOREIGN KEY ( role_authority ) REFERENCES devel.role_authority( role_authority ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ta_activity ON devel.task_authority ( activity );

CREATE  TABLE devel.user_account ( 
	`user`               BINARY(3)    NOT NULL   ,
	account              BINARY(3)    NOT NULL   ,
	owner                BINARY(3)    NOT NULL   ,
	alias                VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT pk_user_account PRIMARY KEY ( `user`, account ),
	CONSTRAINT ak_account_owner UNIQUE ( account, owner ) ,
	CONSTRAINT fk_ua_account FOREIGN KEY ( account ) REFERENCES devel.account( account ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ua_owner FOREIGN KEY ( owner ) REFERENCES devel.`user`( `user` ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ua_user FOREIGN KEY ( `user` ) REFERENCES devel.`user`( `user` ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ua_owner ON devel.user_account ( owner );

CREATE INDEX fk_ua_account ON devel.user_account ( account );

CREATE  TABLE devel.account_detail ( 
	account              BINARY(3)    NOT NULL   ,
	currency             BINARY(3)    NOT NULL   ,
	balance              DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	equity               DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	isolated_equity      DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	available            DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	available_equity     DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	equity_usd           DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	frozen               DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	order_frozen         DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	borrow_frozen        DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	unrealized_pnl       DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	isolated_unrealized_pnl DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	coin_usd_price       DECIMAL(10,6)  DEFAULT (0)  NOT NULL   ,
	margin_ratio         DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	spot_available       DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	liability            DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT pk_account_detail PRIMARY KEY ( account, currency ),
	CONSTRAINT fk_ad_account FOREIGN KEY ( account ) REFERENCES devel.account( account ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ad_currency FOREIGN KEY ( currency ) REFERENCES devel.currency( currency ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ad_currency ON devel.account_detail ( currency );

CREATE  TABLE devel.candle ( 
	instrument           BINARY(3)    NOT NULL   ,
	period               BINARY(3)    NOT NULL   ,
	bar_time             DATETIME    NOT NULL   ,
	open                 DOUBLE    NOT NULL   ,
	high                 DOUBLE    NOT NULL   ,
	low                  DOUBLE    NOT NULL   ,
	close                DOUBLE    NOT NULL   ,
	volume               INT    NOT NULL   ,
	vol_currency         DECIMAL(15,6)    NOT NULL   ,
	vol_currency_quote   DECIMAL(15,6)    NOT NULL   ,
	completed            BOOLEAN    NOT NULL   ,
	CONSTRAINT pk_candle PRIMARY KEY ( instrument, period, bar_time ),
	CONSTRAINT fk_c_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_c_period FOREIGN KEY ( period ) REFERENCES devel.period( period ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_c_period ON devel.candle ( period );

CREATE  TABLE devel.fractal ( 
	fractal              BINARY(3)    NOT NULL   PRIMARY KEY,
	instrument           BINARY(3)    NOT NULL   ,
	period               BINARY(3)    NOT NULL   ,
	position             CHAR(5)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	fibonacci            BINARY(3)       ,
	CONSTRAINT ak_fractal UNIQUE ( instrument, period, position ) ,
	CONSTRAINT fk_f_instrument_period FOREIGN KEY ( instrument, period ) REFERENCES devel.instrument_period( instrument, period ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.fractal_fibonacci ( 
	fractal              BINARY(3)    NOT NULL   ,
	fractal_type         CHAR(10)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	fibonacci            BINARY(3)    NOT NULL   ,
	fractal_state        CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	price                DOUBLE    NOT NULL   ,
	CONSTRAINT pk_fractal_fibonacci PRIMARY KEY ( fractal, fractal_type, fibonacci ),
	CONSTRAINT fk_ff_fibonacci FOREIGN KEY ( fibonacci ) REFERENCES devel.fibonacci( fibonacci ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ff_fractal FOREIGN KEY ( fractal ) REFERENCES devel.fractal( fractal ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ff_fractal_state FOREIGN KEY ( fractal_state ) REFERENCES devel.fractal_state( fractal_state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

ALTER TABLE devel.fractal_fibonacci ADD CONSTRAINT ck_ff_fractal_type CHECK ( `fractal_type` in (_utf8mb4'extension',_utf8mb4'retrace') );

CREATE INDEX fk_ff_fibonacci ON devel.fractal_fibonacci ( fibonacci );

CREATE INDEX fk_ff_fractal_state ON devel.fractal_fibonacci ( fractal_state );

CREATE  TABLE devel.fractal_point ( 
	fractal              BINARY(3)    NOT NULL   ,
	point_type           CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	price                DOUBLE    NOT NULL   ,
	create_time          DATETIME    NOT NULL   ,
	CONSTRAINT pk_fractal_point PRIMARY KEY ( fractal, point_type ),
	CONSTRAINT fk_p_point_type FOREIGN KEY ( point_type ) REFERENCES devel.point_type( point_type ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_point_fractal FOREIGN KEY ( fractal ) REFERENCES devel.fractal( fractal ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_fp_point_type ON devel.fractal_point ( point_type );

CREATE  TABLE devel.orders ( 
	request              BINARY(6)    NOT NULL   PRIMARY KEY,
	order_id             BIGINT    NOT NULL   ,
	order_category       BINARY(3)    NOT NULL   ,
	order_state          BINARY(3)    NOT NULL   ,
	cancel_source        BINARY(3)    NOT NULL   ,
	filled_size          DOUBLE  DEFAULT (0)  NOT NULL   ,
	filled_amount        DOUBLE  DEFAULT (0)  NOT NULL   ,
	average_price        DOUBLE  DEFAULT (0)  NOT NULL   ,
	fee                  DOUBLE  DEFAULT (0)  NOT NULL   ,
	pnl                  DOUBLE  DEFAULT (0)  NOT NULL   ,
	broker_id            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_orders UNIQUE ( order_id ) ,
	CONSTRAINT fk_o_cancel_source FOREIGN KEY ( cancel_source ) REFERENCES devel.cancel_source( cancel_source ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_o_order_category FOREIGN KEY ( order_category ) REFERENCES devel.order_category( order_category ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_o_order_state FOREIGN KEY ( order_state ) REFERENCES devel.order_state( order_state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_o_request FOREIGN KEY ( request ) REFERENCES devel.request( request ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_o_order_state ON devel.orders ( order_state );

CREATE INDEX fk_o_order_category ON devel.orders ( order_category );

CREATE INDEX fk_o_cancel_source ON devel.orders ( cancel_source );

CREATE  TABLE devel.stop_order ( 
	stop_request         BINARY(4)    NOT NULL   PRIMARY KEY,
	tpsl_id              BIGINT    NOT NULL   ,
	order_state          BINARY(3)    NOT NULL   ,
	actual_size          DOUBLE    NOT NULL   ,
	broker_id            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_stop_order UNIQUE ( tpsl_id ) ,
	CONSTRAINT fk_so_order_state FOREIGN KEY ( order_state ) REFERENCES devel.order_state( order_state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_so_stop_request FOREIGN KEY ( stop_request ) REFERENCES devel.stop_request( stop_request ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_so_order_state ON devel.stop_order ( order_state );

CREATE VIEW devel.vw_accounts AS select `a`.`account` AS `account`,`a`.`broker` AS `broker`,`a`.`state` AS `state`,`s`.`status` AS `status`,`e`.`environment` AS `environment`,`e`.`environ` AS `environ`,`b`.`name` AS `broker_name`,`b`.`image_url` AS `broker_image_url`,`b`.`website_url` AS `broker_website_url`,`u`.`username` AS `owner_name`,`ua`.`alias` AS `alias`,`u`.`email` AS `owner_email`,`u`.`image_url` AS `owner_image_url`,`a`.`total_equity` AS `total_equity`,`a`.`isolated_equity` AS `isolated_equity`,`a`.`wss_url` AS `wss_url`,`a`.`rest_api_url` AS `rest_api_url`,`c`.`currency` AS `currency`,`c`.`symbol` AS `symbol`,`c`.`image_url` AS `currency_image_url`,`c`.`suspense` AS `currency_suspended`,`ad`.`balance` AS `balance`,`ad`.`equity` AS `currency_equity`,`ad`.`isolated_equity` AS `currency_isolated_equity`,`ad`.`equity` AS `equity`,`ad`.`available` AS `available`,`ad`.`available_equity` AS `available_equity`,`ad`.`equity_usd` AS `equity_usd`,`ad`.`frozen` AS `frozen`,`ad`.`order_frozen` AS `order_frozen`,`ad`.`borrow_frozen` AS `borrow_frozen`,`ad`.`unrealized_pnl` AS `unrealized_pnl`,`ad`.`isolated_unrealized_pnl` AS `isolated_unrealized_pnl`,`ad`.`coin_usd_price` AS `coin_usd_price`,`ad`.`margin_ratio` AS `margin_ratio`,`ad`.`spot_available` AS `spot_available`,`ad`.`liability` AS `liability`,`ad`.`update_time` AS `update_time` from (((((((`devel`.`account` `a` left join `devel`.`account_detail` `ad` on((`a`.`account` = `ad`.`account`))) left join `devel`.`currency` `c` on((`ad`.`currency` = `c`.`currency`))) left join `devel`.`user_account` `ua` on((`a`.`account` = `ua`.`account`))) left join `devel`.`user` `u` on((`u`.`user` = `ua`.`owner`))) join `devel`.`environment` `e`) join `devel`.`broker` `b`) join `devel`.`state` `s`) where ((`a`.`broker` = `b`.`broker`) and (`a`.`environment` = `e`.`environment`) and (`a`.`state` = `s`.`state`));

CREATE VIEW devel.vw_api_requests AS select `ip`.`account` AS `account`,ifnull(`os`.`map_ref`,`rs`.`status`) AS `status`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `instId`,`r`.`margin_mode` AS `marginMode`,`ip`.`position` AS `positionSide`,`r`.`action` AS `side`,`rt`.`source_ref` AS `orderType`,replace(format(`r`.`price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `price`,replace(format(`r`.`size`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `size`,cast(`r`.`leverage` as char charset utf8mb4) AS `leverage`,if((`r`.`reduce_only` = 0),'false','true') AS `reduceOnly`,`r`.`broker_id` AS `brokerId`,cast(hex(`r`.`request`) as char charset utf8mb4) AS `clientOrderId`,`r`.`memo` AS `memo`,`r`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`request` `r` left join `devel`.`orders` `o` on((`r`.`request` = `o`.`request`))) left join `devel`.`order_state` `os` on((`o`.`order_state` = `os`.`order_state`))) join `devel`.`instrument_position` `ip` on((`r`.`instrument_position` = `ip`.`instrument_position`))) join `devel`.`instrument` `i` on((`ip`.`instrument` = `i`.`instrument`))) join `devel`.`instrument_detail` `id` on((`i`.`instrument` = `id`.`instrument`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`))) join `devel`.`request_type` `rt` on((`r`.`request_type` = `rt`.`request_type`))) join `devel`.`state` `rs` on((`r`.`state` = `rs`.`state`)));

CREATE VIEW devel.vw_instrument_periods AS select concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`i`.`instrument` AS `instrument`,`b`.`symbol` AS `base_symbol`,`b`.`currency` AS `base_currency`,`q`.`symbol` AS `quote_symbol`,`q`.`currency` AS `quote_currency`,`p`.`period` AS `period`,`p`.`timeframe` AS `timeframe`,`p`.`timeframe_units` AS `timeframe_units`,`ip`.`bulk_collection_rate` AS `bulk_collection_rate`,if((`ip`.`bulk_collection_rate` = 0),0,if((`ip`.`interval_collection_rate` > 4),`ip`.`interval_collection_rate`,4)) AS `interval_collection_rate`,`ip`.`sma_factor` AS `sma_factor`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits`,`ip`.`strict_stops` AS `strict_stops`,if((`ip`.`bulk_collection_rate` > 0),true,false) AS `active_collection`,`b`.`suspense` AS `suspense` from (((((`devel`.`instrument` `i` join `devel`.`instrument_period` `ip` on((`ip`.`instrument` = `i`.`instrument`))) join `devel`.`period` `p` on((`ip`.`period` = `p`.`period`))) join `devel`.`instrument_detail` `id` on((`i`.`instrument` = `id`.`instrument`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`)));

CREATE VIEW devel.vw_instruments AS select `i`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`currency` AS `base_currency`,`b`.`symbol` AS `base_symbol`,`q`.`currency` AS `quote_currency`,`q`.`symbol` AS `quote_symbol`,`it`.`source_ref` AS `instrument_type`,`ct`.`source_ref` AS `contract_type`,`id`.`contract_value` AS `contract_value`,`id`.`max_leverage` AS `max_leverage`,`id`.`min_size` AS `min_size`,`id`.`lot_size` AS `lot_size`,`id`.`tick_size` AS `tick_size`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits`,`id`.`max_limit_size` AS `max_limit_size`,`id`.`max_market_size` AS `max_market_size`,`i`.`leverage` AS `leverage`,`i`.`margin_mode` AS `margin_mode`,`i`.`martingale_factor` AS `martingale_factor`,`ip`.`bulk_collection_rate` AS `bulk_collection_rate`,if(((`ip`.`bulk_collection_rate` = 0) or (`ip`.`bulk_collection_rate` is null)),NULL,if((`ip`.`interval_collection_rate` > 4),`ip`.`interval_collection_rate`,4)) AS `interval_collection_rate`,`ip`.`sma_factor` AS `sma_factor`,`p`.`period` AS `trade_period`,`p`.`timeframe` AS `trade_timeframe`,`p`.`timeframe_units` AS `timeframe_units`,if((`b`.`state` = `q`.`state`),`b`.`state`,if((`bs`.`status` = 'Suspended'),`b`.`state`,if((`qs`.`status` = 'Suspended'),`qs`.`state`,`bs`.`state`))) AS `state`,if((`b`.`state` = `q`.`state`),`bs`.`status`,if((`bs`.`status` = 'Suspended'),`bs`.`status`,if((`qs`.`status` = 'Suspended'),`qs`.`status`,`bs`.`status`))) AS `status`,`id`.`list_time` AS `list_time`,`id`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`instrument` `i` join `devel`.`currency` `b` on((`b`.`currency` = `i`.`base_currency`))) join `devel`.`currency` `q` on((`q`.`currency` = `i`.`quote_currency`))) join `devel`.`state` `bs` on((`bs`.`state` = `b`.`state`))) join `devel`.`state` `qs` on((`qs`.`state` = `q`.`state`))) left join `devel`.`instrument_period` `ip` on(((`ip`.`period` = `i`.`period`) and (`ip`.`instrument` = `i`.`instrument`)))) left join `devel`.`instrument_detail` `id` on((`id`.`instrument` = `i`.`instrument`))) left join `devel`.`instrument_type` `it` on((`it`.`instrument_type` = `id`.`instrument_type`))) left join `devel`.`contract_type` `ct` on((`ct`.`contract_type` = `id`.`contract_type`))) left join `devel`.`period` `p` on((`p`.`period` = `i`.`period`)));

CREATE VIEW devel.vw_orders AS select `ipos`.`account` AS `account`,`r`.`request` AS `request`,`o`.`order_id` AS `order_id`,cast(hex(`r`.`request`) as char charset utf8mb4) AS `client_order_id`,`ipos`.`instrument_position` AS `instrument_position`,`ipos`.`instrument` AS `instrument`,`devel`.`vi`.`symbol` AS `symbol`,`devel`.`vi`.`base_currency` AS `base_currency`,`devel`.`vi`.`base_symbol` AS `base_symbol`,`devel`.`vi`.`quote_currency` AS `quote_currency`,`devel`.`vi`.`quote_symbol` AS `quote_symbol`,`s`.`state` AS `state`,`s`.`status` AS `status`,ifnull(`rs`.`state`,`s`.`state`) AS `request_state`,ifnull(`os`.`map_ref`,`s`.`status`) AS `request_status`,`os`.`order_state` AS `order_state`,`os`.`source_ref` AS `order_status`,`ipos`.`position` AS `position`,`r`.`action` AS `action`,`r`.`request_type` AS `request_type`,`rt`.`source_ref` AS `order_type`,`r`.`margin_mode` AS `margin_mode`,`r`.`price` AS `price`,`r`.`size` AS `size`,`r`.`leverage` AS `leverage`,`o`.`filled_size` AS `filled_size`,`o`.`filled_amount` AS `filled_amount`,`o`.`average_price` AS `average_price`,`o`.`fee` AS `fee`,`o`.`pnl` AS `pnl`,`devel`.`vi`.`digits` AS `digits`,`cat`.`order_category` AS `order_category`,`cat`.`source_ref` AS `category`,`can`.`cancel_source` AS `cancel_source`,`can`.`source_ref` AS `canceled_by`,`devel`.`vi`.`contract_type` AS `contract_type`,`devel`.`vi`.`instrument_type` AS `instrument_type`,`r`.`reduce_only` AS `reduce_only`,`r`.`broker_id` AS `broker_id`,`devel`.`vi`.`trade_period` AS `trade_period`,`devel`.`vi`.`trade_timeframe` AS `trade_timeframe`,`devel`.`vi`.`timeframe_units` AS `timeframe_units`,`devel`.`vi`.`state` AS `trade_state`,`devel`.`vi`.`status` AS `trade_status`,`r`.`memo` AS `memo`,ifnull(`o`.`create_time`,`r`.`create_time`) AS `create_time`,ifnull(`o`.`update_time`,`r`.`update_time`) AS `update_time`,`r`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`request` `r` join `devel`.`instrument_position` `ipos` on((`ipos`.`instrument_position` = `r`.`instrument_position`))) join `devel`.`vw_instruments` `vi` on((`devel`.`vi`.`instrument` = `ipos`.`instrument`))) join `devel`.`state` `s` on((`r`.`state` = `s`.`state`))) join `devel`.`request_type` `rt` on((`r`.`request_type` = `rt`.`request_type`))) left join `devel`.`orders` `o` on((`r`.`request` = `o`.`request`))) left join `devel`.`order_state` `os` on((`o`.`order_state` = `os`.`order_state`))) left join `devel`.`state` `rs` on((`os`.`map_ref` = `rs`.`status`))) left join `devel`.`cancel_source` `can` on((`o`.`cancel_source` = `can`.`cancel_source`))) left join `devel`.`order_category` `cat` on((`o`.`order_category` = `cat`.`order_category`)));

CREATE VIEW devel.vw_positions AS select `ipos`.`account` AS `account`,`p`.`positions` AS `positions`,`ipos`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`ipos`.`position` AS `position`,`it`.`source_ref` AS `instrument_type`,if((`p`.`size` > 0),'buy','sell') AS `action`,if((`p`.`size` < 0),'buy','sell') AS `counter_action`,`p`.`size` AS `size`,`p`.`size_available` AS `size_available`,`p`.`leverage` AS `leverage`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits`,`p`.`margin_mode` AS `margin_mode`,`p`.`margin_ratio` AS `margin_ratio`,replace(format(`p`.`margin_initial`,3),',','') AS `margin_initial`,replace(format(`p`.`margin_maint`,3),',','') AS `margin_maint`,replace(format(`p`.`average_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `average_price`,replace(format(`p`.`liquidation_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `liquidation_price`,replace(format(`p`.`mark_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `mark_price`,replace(format(`p`.`unrealized_pnl`,3),',','') AS `unrealized_pnl`,`p`.`unrealized_pnl_ratio` AS `unrealized_pnl_ratio`,`p`.`adl` AS `adl`,`s`.`state` AS `state`,`s`.`status` AS `status`,`p`.`create_time` AS `create_time`,`p`.`update_time` AS `update_time` from (((((((`devel`.`positions` `p` join `devel`.`instrument_position` `ipos` on((`ipos`.`instrument_position` = `p`.`instrument_position`))) join `devel`.`instrument` `i` on((`i`.`instrument` = `ipos`.`instrument`))) join `devel`.`instrument_detail` `id` on((`id`.`instrument` = `ipos`.`instrument`))) join `devel`.`instrument_type` `it` on((`it`.`instrument_type` = `id`.`instrument_type`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`))) join `devel`.`state` `s` on((`ipos`.`state` = `s`.`state`)));

CREATE VIEW devel.vw_role_privileges AS select `ra`.`role_authority` AS `role_authority`,`r`.`role` AS `role`,`r`.`title` AS `title`,`s`.`subject` AS `subject`,`s`.`area` AS `area`,`auth`.`authority` AS `authority`,`auth`.`privilege` AS `privilege`,`auth`.`priority` AS `priority`,`ra`.`enabled` AS `enabled` from (((`devel`.`role_authority` `ra` join `devel`.`role` `r` on((`r`.`role` = `ra`.`role`))) join `devel`.`subject` `s` on((`s`.`subject` = `ra`.`subject`))) join `devel`.`authority` `auth` on((`auth`.`authority` = `ra`.`authority`)));

CREATE VIEW devel.vw_role_subjects AS select `r`.`role` AS `role`,`r`.`title` AS `title`,`s`.`subject` AS `subject`,`s`.`area` AS `area` from (((`devel`.`role_authority` `ra` join `devel`.`subject` `s` on((`s`.`subject` = `ra`.`subject`))) join `devel`.`role` `r` on((`r`.`role` = `ra`.`role`))) join `devel`.`authority` `auth` on((`auth`.`authority` = `ra`.`authority`))) group by `r`.`role`,`r`.`title`,`s`.`subject`,`s`.`area` order by `s`.`area`;

CREATE VIEW devel.vw_users AS select `u`.`user` AS `user`,`u`.`username` AS `username`,`u`.`email` AS `email`,`u`.`role` AS `role`,`r`.`title` AS `title`,`u`.`state` AS `state`,`s`.`status` AS `status`,`u`.`image_url` AS `image_url`,`u`.`password` AS `password`,`u`.`hash` AS `hash`,`u`.`create_time` AS `create_time`,`u`.`update_time` AS `update_time` from ((`devel`.`user` `u` join `devel`.`role` `r` on((`r`.`role` = `u`.`role`))) join `devel`.`state` `s` on((`s`.`state` = `u`.`state`)));

CREATE VIEW devel.vw_candles AS select `devel`.`vi`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`currency` AS `base_currency`,`b`.`symbol` AS `base_symbol`,`q`.`currency` AS `quote_currency`,`q`.`symbol` AS `quote_symbol`,`pt`.`period` AS `period`,`pt`.`timeframe` AS `timeframe`,`c`.`bar_time` AS `bar_time`,(unix_timestamp(`c`.`bar_time`) * 1000) AS `timestamp`,`c`.`open` AS `open`,`c`.`high` AS `high`,`c`.`low` AS `low`,`c`.`close` AS `close`,`c`.`volume` AS `volume`,`c`.`vol_currency` AS `vol_currency`,`c`.`vol_currency_quote` AS `vol_currency_quote`,`devel`.`vi`.`digits` AS `digits`,`c`.`completed` AS `completed` from (((((`devel`.`candle` `c` join `devel`.`vw_instruments` `vi` on((`c`.`instrument` = `devel`.`vi`.`instrument`))) join `devel`.`period` `pt` on((`c`.`period` = `pt`.`period`))) join `devel`.`instrument_period` `ip` on(((`devel`.`vi`.`instrument` = `ip`.`instrument`) and (`ip`.`period` = `pt`.`period`)))) join `devel`.`currency` `b` on((`devel`.`vi`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`devel`.`vi`.`quote_currency` = `q`.`currency`)));

CREATE VIEW devel.vw_instrument_positions AS select `ipos`.`account` AS `account`,`ipos`.`instrument_position` AS `instrument_position`,`ipos`.`instrument` AS `instrument`,`ipos`.`position` AS `position`,`devel`.`vi`.`symbol` AS `symbol`,`ipos`.`state` AS `state`,`s`.`status` AS `status`,`ipos`.`auto_state` AS `auto_state`,`auto`.`status` AS `auto_status`,`id`.`digits` AS `digits`,ifnull(`r`.`open_request`,0) AS `open_request`,ifnull(`tp`.`open_take_profit`,0) AS `open_take_profit`,ifnull(`sl`.`open_stop_loss`,0) AS `open_stop_loss`,`ipos`.`update_time` AS `update_time`,`ipos`.`close_time` AS `close_time`,`r`.`create_time` AS `create_time` from (((((((`devel`.`instrument_position` `ipos` join `devel`.`vw_instruments` `vi` on((`ipos`.`instrument` = `devel`.`vi`.`instrument`))) join `devel`.`state` `s` on((`ipos`.`state` = `s`.`state`))) join `devel`.`state` `auto` on((`auto`.`state` = `ipos`.`auto_state`))) join (select `id`.`instrument` AS `instrument`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits` from `devel`.`instrument_detail` `id`) `id` on((`id`.`instrument` = `ipos`.`instrument`))) left join (select `r`.`instrument_position` AS `instrument_position`,max(`r`.`create_time`) AS `create_time`,count(0) AS `open_request` from (`devel`.`state` `s` join `devel`.`request` `r` on(((`r`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued'))))) group by `r`.`instrument_position`) `r` on((`r`.`instrument_position` = `ipos`.`instrument_position`))) left join (select `sr`.`instrument_position` AS `instrument_position`,count(0) AS `open_take_profit` from (`devel`.`state` `s` join `devel`.`stop_request` `sr` on(((`sr`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued')) and (`sr`.`stop_type` = 'tp')))) group by `sr`.`instrument_position`) `tp` on((`tp`.`instrument_position` = `ipos`.`instrument_position`))) left join (select `sr`.`instrument_position` AS `instrument_position`,count(0) AS `open_stop_loss` from (`devel`.`state` `s` join `devel`.`stop_request` `sr` on(((`sr`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued')) and (`sr`.`stop_type` = 'sl')))) group by `sr`.`instrument_position`) `sl` on((`sl`.`instrument_position` = `ipos`.`instrument_position`)));

CREATE VIEW devel.vw_stop_orders AS select `sr`.`stop_request` AS `stop_request`,`sr`.`stop_type` AS `stop_type`,`so`.`tpsl_id` AS `tpsl_id`,concat(lower(cast(hex(`sr`.`stop_request`) as char charset utf8mb4)),'-',`sr`.`stop_type`) AS `client_order_id`,`devel`.`vip`.`instrument_position` AS `instrument_position`,`devel`.`vip`.`instrument` AS `instrument`,`devel`.`vip`.`symbol` AS `symbol`,`devel`.`vip`.`position` AS `position`,`devel`.`vip`.`state` AS `position_state`,`devel`.`vip`.`status` AS `position_status`,`rs`.`state` AS `state`,`rs`.`status` AS `status`,ifnull(`rs`.`state`,`s`.`state`) AS `request_state`,ifnull(`os`.`map_ref`,`s`.`status`) AS `request_status`,`os`.`order_state` AS `order_state`,`os`.`source_ref` AS `order_status`,`sr`.`action` AS `action`,`sr`.`size` AS `size`,`so`.`actual_size` AS `actual_size`,`sr`.`trigger_price` AS `trigger_price`,`sr`.`order_price` AS `order_price`,`sr`.`reduce_only` AS `reduce_only`,`sr`.`memo` AS `memo`,`so`.`broker_id` AS `broker_id`,ifnull(`so`.`create_time`,`sr`.`create_time`) AS `create_time` from (((((`devel`.`stop_request` `sr` left join `devel`.`stop_order` `so` on((`so`.`stop_request` = `sr`.`stop_request`))) left join `devel`.`order_state` `os` on((`so`.`order_state` = `os`.`order_state`))) left join `devel`.`state` `s` on((`s`.`state` = `os`.`map_ref`))) join `devel`.`vw_instrument_positions` `vip` on((`sr`.`instrument_position` = `devel`.`vip`.`instrument_position`))) join `devel`.`state` `rs` on((`sr`.`state` = `rs`.`state`)));

CREATE VIEW devel.vw_api_stop_requests AS select `s`.`status` AS `status`,`devel`.`vip`.`symbol` AS `instId`,`devel`.`vip`.`position` AS `positionSide`,`sr`.`action` AS `side`,`sr`.`size` AS `size`,if((`sr`.`stop_type` = 'tp'),replace(format(`sr`.`trigger_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `tpTriggerPrice`,if((`sr`.`stop_type` = 'tp'),replace(format(`sr`.`order_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `tpOrderPrice`,if((`sr`.`stop_type` = 'sl'),replace(format(`sr`.`trigger_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `slTriggerPrice`,if((`sr`.`stop_type` = 'sl'),replace(format(`sr`.`order_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `slOrderPrice`,`sr`.`reduce_only` AS `reduceOnly`,concat(lower(cast(hex(`sr`.`stop_request`) as char charset utf8mb4)),'-',`sr`.`stop_type`) AS `clientOrderId` from ((`devel`.`stop_request` `sr` join `devel`.`state` `s` on((`sr`.`state` = `s`.`state`))) join `devel`.`vw_instrument_positions` `vip` on((`sr`.`instrument_position` = `devel`.`vip`.`instrument_position`)));

ALTER TABLE devel.cancel_source COMMENT 'not_canceled
user_canceled
system_canceled';

ALTER TABLE devel.fractal_state COMMENT 'Rally
Pullback
Retrace
Correction
Recovery
Breakout
Reversal
Extension';

ALTER TABLE devel.margin_mode COMMENT 'Margin mode
cross
isolated';

ALTER TABLE devel.order_category COMMENT 'normal
full_liquidation
partial_liquidation
adl
tp
sl';

ALTER TABLE devel.order_state COMMENT 'live, effective, canceled, order_failed, filled, partially_canceled, partially_filled';

ALTER TABLE devel.point_type COMMENT 'Origin
Base
Root
Expansion
Retrace
Recovery
Close';

ALTER TABLE devel.price_type COMMENT 'Trigger price type.
last: last price
index: index price
mark: mark price';

ALTER TABLE devel.request_type COMMENT 'market: market order
limit: limit order
post_only: Post-only order
fok: Fill-or-kill order
ioc: Immediate-or-cancel order';

ALTER TABLE devel.fractal_fibonacci MODIFY fractal_type CHAR(10)  NOT NULL   COMMENT 'Retrace
Extension';

]]></string>
		</script>
		<script name="SQL_Editor_001" id="23f5f9f2-99ff-4ab2-916c-9995f7369827" language="SQL" >
			<string><![CDATA[ALTER TABLE devel.currency DROP constraint unq_currency_state;
ALTER TABLE devel.currency DROP INDEX unq_currency_state;]]></string>
		</script>
		<script name="SQL_Editor_002" id="4342da6d-a810-4e0d-affe-c2546d15c184" language="SQL" >
			<string><![CDATA[ALTER TABLE devel.currency DROP INDEX unq_currency_state;

]]></string>
		</script>
		<script name="SQL_Editor_003" id="ee6937d1-0d84-4d44-a491-7fb63ba97432" language="SQL" >
			<string><![CDATA[CREATE SCHEMA devel;

CREATE  TABLE devel.api_error ( 
	error_code           INT    NOT NULL   PRIMARY KEY,
	http_status_code     SMALLINT    NOT NULL   ,
	error_message        VARCHAR(200)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.audit_request ( 
	request              BINARY(6)       ,
	old_state            BINARY(3)       ,
	new_state            BINARY(3)       ,
	update_time          DATETIME(6)       
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.authority ( 
	authority            BINARY(3)    NOT NULL   PRIMARY KEY,
	privilege            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	priority             SMALLINT  DEFAULT (0)  NOT NULL   ,
	CONSTRAINT ak_authority UNIQUE ( privilege ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.broker ( 
	broker               BINARY(3)    NOT NULL   PRIMARY KEY,
	name                 VARCHAR(30)    NOT NULL   ,
	image_url            VARCHAR(60)  DEFAULT ("./images/broker/no-image.png")  NOT NULL   ,
	website_url          VARCHAR(60)    NOT NULL   ,
	CONSTRAINT ak_broker UNIQUE ( name ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.cancel_source ( 
	cancel_source        BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(15)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	source               VARCHAR(12)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_cancel UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.contract_type ( 
	contract_type        BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_contract_type UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.environment ( 
	environment          BINARY(3)    NOT NULL   PRIMARY KEY,
	environ              VARCHAR(15)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.fibonacci ( 
	fibonacci            BINARY(3)    NOT NULL   PRIMARY KEY,
	level                TINYINT    NOT NULL   ,
	percent              DECIMAL(5,3)    NOT NULL   ,
	alias                VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.fractal_state ( 
	fractal_state        CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.instrument_type ( 
	instrument_type      BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_instrument_type UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.margin_mode ( 
	margin_mode          VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.order_category ( 
	order_category       BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(20)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_category UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.order_state ( 
	order_state          BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(20)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	`status`             VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	map_ref              VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	CONSTRAINT ak_order_state UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.period ( 
	period               BINARY(3)    NOT NULL   PRIMARY KEY,
	timeframe            VARCHAR(3)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	timeframe_units      INT    NOT NULL   ,
	CONSTRAINT ak_period UNIQUE ( timeframe ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.point_type ( 
	point_type           CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.position ( 
	position             CHAR(5)    NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE  TABLE devel.price_type ( 
	price_type           CHAR(5)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY,
	description          VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.request_type ( 
	request_type         BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	CONSTRAINT ak_request_type UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.role ( 
	role                 BINARY(3)    NOT NULL   PRIMARY KEY,
	title                VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	auth_rank            SMALLINT    NOT NULL   ,
	CONSTRAINT ak_role UNIQUE ( title ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.state ( 
	state                BINARY(3)    NOT NULL   PRIMARY KEY,
	`status`             VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(60)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_state UNIQUE ( `status` ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.stop_type ( 
	stop_type            CHAR(2)    NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE  TABLE devel.subject_area ( 
	subject_area         BINARY(3)    NOT NULL   PRIMARY KEY,
	title                VARCHAR(20)    NOT NULL   ,
	description          VARCHAR(200)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_subject_area UNIQUE ( title ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.`user` ( 
	`user`               BINARY(3)    NOT NULL   PRIMARY KEY,
	email                VARCHAR(80)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	role                 BINARY(3)    NOT NULL   ,
	hash                 BINARY(16)    NOT NULL   ,
	username             VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	password             BINARY(32)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	image_url            VARCHAR(60)  DEFAULT ("./images/user/no-image.png") CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_user UNIQUE ( username, email ) ,
	CONSTRAINT fk_u_role FOREIGN KEY ( role ) REFERENCES devel.role( role ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_u_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_u_role ON devel.`user` ( role );

CREATE INDEX fk_u_state ON devel.`user` ( state );

CREATE  TABLE devel.account ( 
	account              BINARY(3)    NOT NULL   PRIMARY KEY,
	broker               BINARY(3)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	environment          BINARY(3)    NOT NULL   ,
	total_equity         DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	isolated_equity      DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	wss_url              VARCHAR(100)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	rest_api_url         VARCHAR(100)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	wss_public_url       VARCHAR(100)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT fk_a_broker FOREIGN KEY ( broker ) REFERENCES devel.broker( broker ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_a_environment FOREIGN KEY ( environment ) REFERENCES devel.environment( environment ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_a_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_a_state ON devel.account ( state );

CREATE INDEX fk_a_broker ON devel.account ( broker );

CREATE INDEX fk_a_environment ON devel.account ( environment );

CREATE  TABLE devel.activity ( 
	activity             BINARY(3)    NOT NULL   PRIMARY KEY,
	subject_area         BINARY(3)    NOT NULL   ,
	task                 VARCHAR(60)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_activity UNIQUE ( task ) ,
	CONSTRAINT fk_a_subject FOREIGN KEY ( subject_area ) REFERENCES devel.subject_area( subject_area ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_a_subject ON devel.activity ( subject_area );

CREATE  TABLE devel.currency ( 
	currency             BINARY(3)    NOT NULL   PRIMARY KEY,
	symbol               VARCHAR(20)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	image_url            VARCHAR(300)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	CONSTRAINT ak_currency UNIQUE ( symbol ) ,
	CONSTRAINT fk_c_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_c_state ON devel.currency ( state );

CREATE  TABLE devel.instrument ( 
	instrument           BINARY(3)    NOT NULL   PRIMARY KEY,
	trade_period         BINARY(3)    NOT NULL   ,
	base_currency        BINARY(3)    NOT NULL   ,
	quote_currency       BINARY(3)    NOT NULL   ,
	margin_mode          VARCHAR(10)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	leverage             SMALLINT  DEFAULT (10)  NOT NULL   ,
	lot_scale_factor     SMALLINT UNSIGNED DEFAULT (1)     ,
	martingale_factor    SMALLINT  DEFAULT (1)  NOT NULL   ,
	CONSTRAINT ak_instrument UNIQUE ( base_currency, quote_currency ) ,
	CONSTRAINT fk_i_base_currency FOREIGN KEY ( base_currency ) REFERENCES devel.currency( currency ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_i_margin_mode FOREIGN KEY ( margin_mode ) REFERENCES devel.margin_mode( margin_mode ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_i_trade_period FOREIGN KEY ( trade_period ) REFERENCES devel.period( period ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_i_quote_currency FOREIGN KEY ( quote_currency ) REFERENCES devel.currency( currency ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_i_quote_currency ON devel.instrument ( quote_currency );

CREATE INDEX fk_i_trade_period ON devel.instrument ( trade_period );

CREATE INDEX fk_i_margin_mode ON devel.instrument ( margin_mode );

CREATE  TABLE devel.instrument_detail ( 
	instrument           BINARY(3)    NOT NULL   PRIMARY KEY,
	instrument_type      BINARY(3)    NOT NULL   ,
	contract_type        BINARY(3)    NOT NULL   ,
	contract_value       DECIMAL(17,5)    NOT NULL   ,
	max_leverage         INT    NOT NULL   ,
	min_size             DECIMAL(5,3)    NOT NULL   ,
	lot_size             DECIMAL(5,3)    NOT NULL   ,
	tick_size            DOUBLE    NOT NULL   ,
	max_limit_size       DECIMAL(13,2)    NOT NULL   ,
	max_market_size      DECIMAL(13,2)    NOT NULL   ,
	list_time            DATETIME(3)    NOT NULL   ,
	expiry_time          DATETIME(3)    NOT NULL   ,
	CONSTRAINT fk_id_contract_type FOREIGN KEY ( contract_type ) REFERENCES devel.contract_type( contract_type ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_id_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_id_instrument_type FOREIGN KEY ( instrument_type ) REFERENCES devel.instrument_type( instrument_type ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_id_instrument_type ON devel.instrument_detail ( instrument_type );

CREATE INDEX fk_id_contract_type ON devel.instrument_detail ( contract_type );

CREATE  TABLE devel.instrument_period ( 
	instrument           BINARY(3)    NOT NULL   ,
	period               BINARY(3)    NOT NULL   ,
	sma_factor           SMALLINT  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	bulk_collection_rate SMALLINT  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	interval_collection_rate SMALLINT  DEFAULT (0)  NOT NULL   ,
	active_collection    BOOLEAN  DEFAULT (false)  NOT NULL   ,
	CONSTRAINT pk_instrument_period PRIMARY KEY ( instrument, period ),
	CONSTRAINT fk_ip_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ip_period FOREIGN KEY ( period ) REFERENCES devel.period( period ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ip_period ON devel.instrument_period ( period );

CREATE  TABLE devel.instrument_position ( 
	instrument_position  BINARY(3)    NOT NULL   PRIMARY KEY,
	account              BINARY(3)    NOT NULL   ,
	instrument           BINARY(3)    NOT NULL   ,
	position             CHAR(5)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	auto_state           BINARY(3)    NOT NULL   ,
	strict_stops         BOOLEAN  DEFAULT (false)  NOT NULL   ,
	strict_targets       BOOLEAN  DEFAULT (false)  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	close_time           DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_instrument_position UNIQUE ( account, instrument, position ) ,
	CONSTRAINT fk_ipos_account FOREIGN KEY ( account ) REFERENCES devel.account( account ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ipos_position FOREIGN KEY ( position ) REFERENCES devel.position( position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ipos_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ipos_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE INDEX fk_ipos_state ON devel.instrument_position ( state );

CREATE INDEX fk_ipos_position ON devel.instrument_position ( position );

CREATE INDEX fk_ipos_instrument ON devel.instrument_position ( instrument );

CREATE  TABLE devel.positions ( 
	positions            BINARY(6)    NOT NULL   PRIMARY KEY,
	instrument_position  BINARY(3)    NOT NULL   ,
	size                 DOUBLE    NOT NULL   ,
	size_available       DOUBLE    NOT NULL   ,
	leverage             INT  DEFAULT (0)  NOT NULL   ,
	margin_mode          VARCHAR(10)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	margin_used          DOUBLE  DEFAULT (0)  NOT NULL   ,
	margin_ratio         DECIMAL(12,3)    NOT NULL   ,
	margin_initial       DOUBLE    NOT NULL   ,
	margin_maint         DOUBLE    NOT NULL   ,
	average_price        DOUBLE    NOT NULL   ,
	mark_price           DOUBLE    NOT NULL   ,
	liquidation_price    DOUBLE    NOT NULL   ,
	unrealized_pnl       DOUBLE    NOT NULL   ,
	unrealized_pnl_ratio DECIMAL(12,3)    NOT NULL   ,
	adl                  SMALLINT  DEFAULT (0)  NOT NULL   ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT fk_p_instrument_position FOREIGN KEY ( instrument_position ) REFERENCES devel.instrument_position( instrument_position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_p_margin_mode FOREIGN KEY ( margin_mode ) REFERENCES devel.margin_mode( margin_mode ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_p_margin_mode ON devel.positions ( margin_mode );

CREATE INDEX fk_p_instrument_position ON devel.positions ( instrument_position );

CREATE  TABLE devel.request ( 
	request              BINARY(6)    NOT NULL   PRIMARY KEY,
	instrument_position  BINARY(3)    NOT NULL   ,
	action               CHAR(4)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	price                DOUBLE  DEFAULT (0)  NOT NULL   ,
	size                 DOUBLE    NOT NULL   ,
	leverage             INT    NOT NULL   ,
	request_type         BINARY(3)    NOT NULL   ,
	margin_mode          VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	reduce_only          BOOLEAN  DEFAULT (false)  NOT NULL   ,
	memo                 VARCHAR(200)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	broker_id            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	expiry_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT fk_r_instrument_position FOREIGN KEY ( instrument_position ) REFERENCES devel.instrument_position( instrument_position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_r_margin_mode FOREIGN KEY ( margin_mode ) REFERENCES devel.margin_mode( margin_mode ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_r_request_type FOREIGN KEY ( request_type ) REFERENCES devel.request_type( request_type ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_r_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

ALTER TABLE devel.request ADD CONSTRAINT ck_r_action CHECK ( `action` in (_utf8mb4'buy',_utf8mb4'sell') );

CREATE INDEX fk_r_instrument_position ON devel.request ( instrument_position );

CREATE INDEX fk_r_request_type ON devel.request ( request_type );

CREATE INDEX fk_r_margin_mode ON devel.request ( margin_mode );

CREATE INDEX fk_r_state ON devel.request ( state );

CREATE  TABLE devel.role_authority ( 
	role                 BINARY(3)    NOT NULL   ,
	authority            BINARY(3)    NOT NULL   ,
	activity             BINARY(3)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	CONSTRAINT pk_role_authority PRIMARY KEY ( role, authority, activity ),
	CONSTRAINT fk_ra_authority FOREIGN KEY ( authority ) REFERENCES devel.authority( authority ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_sra_role FOREIGN KEY ( role ) REFERENCES devel.role( role ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ra_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ra_activity FOREIGN KEY ( activity ) REFERENCES devel.activity( activity ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ra_role ON devel.role_authority ( role );

CREATE INDEX fk_ra_authority ON devel.role_authority ( authority );

CREATE INDEX fk_ra_state ON devel.role_authority ( state );

CREATE INDEX fk_ra_activity ON devel.role_authority ( activity );

CREATE  TABLE devel.stop_request ( 
	stop_request         BINARY(4)    NOT NULL   ,
	instrument_position  BINARY(3)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	stop_type            CHAR(2)    NOT NULL   ,
	action               CHAR(4)    NOT NULL   ,
	size                 DOUBLE       ,
	trigger_price        DOUBLE  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	order_price          DOUBLE  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	reduce_only          BOOLEAN  DEFAULT (false)  NOT NULL   ,
	memo                 VARCHAR(100)       ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT pk_stop_request PRIMARY KEY ( stop_request, stop_type ),
	CONSTRAINT fk_sr_instrument_position FOREIGN KEY ( instrument_position ) REFERENCES devel.instrument_position( instrument_position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_sr_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_sr_stop_type FOREIGN KEY ( stop_type ) REFERENCES devel.stop_type( stop_type ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE INDEX fk_sr_stop_type ON devel.stop_request ( stop_type );

CREATE INDEX fk_sr_instrument_position ON devel.stop_request ( instrument_position );

CREATE INDEX fk_sr_state ON devel.stop_request ( state );

CREATE  TABLE devel.user_account ( 
	`user`               BINARY(3)    NOT NULL   ,
	account              BINARY(3)    NOT NULL   ,
	owner                BINARY(3)    NOT NULL   ,
	alias                VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT pk_user_account PRIMARY KEY ( `user`, account ),
	CONSTRAINT ak_account_owner UNIQUE ( account, owner ) ,
	CONSTRAINT fk_ua_account FOREIGN KEY ( account ) REFERENCES devel.account( account ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ua_owner FOREIGN KEY ( owner ) REFERENCES devel.`user`( `user` ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ua_user FOREIGN KEY ( `user` ) REFERENCES devel.`user`( `user` ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ua_owner ON devel.user_account ( owner );

CREATE INDEX fk_ua_account ON devel.user_account ( account );

CREATE  TABLE devel.account_detail ( 
	account              BINARY(3)    NOT NULL   ,
	currency             BINARY(3)    NOT NULL   ,
	balance              DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	equity               DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	isolated_equity      DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	available            DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	available_equity     DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	equity_usd           DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	frozen               DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	order_frozen         DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	borrow_frozen        DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	unrealized_pnl       DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	isolated_unrealized_pnl DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	coin_usd_price       DECIMAL(10,6)  DEFAULT (0)  NOT NULL   ,
	margin_ratio         DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	spot_available       DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	liability            DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT pk_account_detail PRIMARY KEY ( account, currency ),
	CONSTRAINT fk_ad_account FOREIGN KEY ( account ) REFERENCES devel.account( account ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ad_currency FOREIGN KEY ( currency ) REFERENCES devel.currency( currency ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ad_currency ON devel.account_detail ( currency );

CREATE  TABLE devel.candle ( 
	instrument           BINARY(3)    NOT NULL   ,
	period               BINARY(3)    NOT NULL   ,
	bar_time             DATETIME    NOT NULL   ,
	open                 DOUBLE    NOT NULL   ,
	high                 DOUBLE    NOT NULL   ,
	low                  DOUBLE    NOT NULL   ,
	close                DOUBLE    NOT NULL   ,
	volume               INT    NOT NULL   ,
	vol_currency         DECIMAL(15,6)    NOT NULL   ,
	vol_currency_quote   DECIMAL(15,6)    NOT NULL   ,
	completed            BOOLEAN    NOT NULL   ,
	CONSTRAINT pk_candle PRIMARY KEY ( instrument, period, bar_time ),
	CONSTRAINT fk_c_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_c_period FOREIGN KEY ( period ) REFERENCES devel.period( period ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_c_period ON devel.candle ( period );

CREATE  TABLE devel.fractal ( 
	fractal              BINARY(3)    NOT NULL   PRIMARY KEY,
	instrument           BINARY(3)    NOT NULL   ,
	period               BINARY(3)    NOT NULL   ,
	position             CHAR(5)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	fibonacci            BINARY(3)       ,
	CONSTRAINT ak_fractal UNIQUE ( instrument, period, position ) ,
	CONSTRAINT fk_f_instrument_period FOREIGN KEY ( instrument, period ) REFERENCES devel.instrument_period( instrument, period ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.fractal_fibonacci ( 
	fractal              BINARY(3)    NOT NULL   ,
	fractal_type         CHAR(10)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	fibonacci            BINARY(3)    NOT NULL   ,
	fractal_state        CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	price                DOUBLE    NOT NULL   ,
	CONSTRAINT pk_fractal_fibonacci PRIMARY KEY ( fractal, fractal_type, fibonacci ),
	CONSTRAINT fk_ff_fibonacci FOREIGN KEY ( fibonacci ) REFERENCES devel.fibonacci( fibonacci ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ff_fractal FOREIGN KEY ( fractal ) REFERENCES devel.fractal( fractal ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ff_fractal_state FOREIGN KEY ( fractal_state ) REFERENCES devel.fractal_state( fractal_state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

ALTER TABLE devel.fractal_fibonacci ADD CONSTRAINT ck_ff_fractal_type CHECK ( `fractal_type` in (_utf8mb4'extension',_utf8mb4'retrace') );

CREATE INDEX fk_ff_fibonacci ON devel.fractal_fibonacci ( fibonacci );

CREATE INDEX fk_ff_fractal_state ON devel.fractal_fibonacci ( fractal_state );

CREATE  TABLE devel.fractal_point ( 
	fractal              BINARY(3)    NOT NULL   ,
	point_type           CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	price                DOUBLE    NOT NULL   ,
	create_time          DATETIME    NOT NULL   ,
	CONSTRAINT pk_fractal_point PRIMARY KEY ( fractal, point_type ),
	CONSTRAINT fk_p_point_type FOREIGN KEY ( point_type ) REFERENCES devel.point_type( point_type ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_point_fractal FOREIGN KEY ( fractal ) REFERENCES devel.fractal( fractal ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_fp_point_type ON devel.fractal_point ( point_type );

CREATE  TABLE devel.orders ( 
	request              BINARY(6)    NOT NULL   PRIMARY KEY,
	order_id             BIGINT    NOT NULL   ,
	order_category       BINARY(3)    NOT NULL   ,
	order_state          BINARY(3)    NOT NULL   ,
	cancel_source        BINARY(3)    NOT NULL   ,
	filled_size          DOUBLE  DEFAULT (0)  NOT NULL   ,
	filled_amount        DOUBLE  DEFAULT (0)  NOT NULL   ,
	average_price        DOUBLE  DEFAULT (0)  NOT NULL   ,
	fee                  DOUBLE  DEFAULT (0)  NOT NULL   ,
	pnl                  DOUBLE  DEFAULT (0)  NOT NULL   ,
	broker_id            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_orders UNIQUE ( order_id ) ,
	CONSTRAINT fk_o_cancel_source FOREIGN KEY ( cancel_source ) REFERENCES devel.cancel_source( cancel_source ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_o_order_category FOREIGN KEY ( order_category ) REFERENCES devel.order_category( order_category ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_o_order_state FOREIGN KEY ( order_state ) REFERENCES devel.order_state( order_state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_o_request FOREIGN KEY ( request ) REFERENCES devel.request( request ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_o_order_state ON devel.orders ( order_state );

CREATE INDEX fk_o_order_category ON devel.orders ( order_category );

CREATE INDEX fk_o_cancel_source ON devel.orders ( cancel_source );

CREATE  TABLE devel.stop_order ( 
	stop_request         BINARY(4)    NOT NULL   PRIMARY KEY,
	tpsl_id              BIGINT    NOT NULL   ,
	order_state          BINARY(3)    NOT NULL   ,
	actual_size          DOUBLE    NOT NULL   ,
	broker_id            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_stop_order UNIQUE ( tpsl_id ) ,
	CONSTRAINT fk_so_order_state FOREIGN KEY ( order_state ) REFERENCES devel.order_state( order_state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_so_stop_request FOREIGN KEY ( stop_request ) REFERENCES devel.stop_request( stop_request ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_so_order_state ON devel.stop_order ( order_state );

CREATE VIEW devel.vw_accounts AS select `a`.`account` AS `account`,`a`.`broker` AS `broker`,`a`.`state` AS `state`,`s`.`status` AS `status`,`e`.`environment` AS `environment`,`e`.`environ` AS `environ`,`b`.`name` AS `broker_name`,`b`.`image_url` AS `broker_image_url`,`b`.`website_url` AS `broker_website_url`,`u`.`username` AS `owner_name`,`ua`.`alias` AS `alias`,`u`.`email` AS `owner_email`,`u`.`image_url` AS `owner_image_url`,`a`.`total_equity` AS `total_equity`,`a`.`isolated_equity` AS `isolated_equity`,`a`.`wss_url` AS `wss_url`,`a`.`rest_api_url` AS `rest_api_url`,`c`.`currency` AS `currency`,`c`.`symbol` AS `symbol`,`c`.`image_url` AS `currency_image_url`,`c`.`state` AS `currency_state`,`cs`.`status` AS `currency_status`,`ad`.`balance` AS `balance`,`ad`.`equity` AS `currency_equity`,`ad`.`isolated_equity` AS `currency_isolated_equity`,`ad`.`equity` AS `equity`,`ad`.`available` AS `available`,`ad`.`available_equity` AS `available_equity`,`ad`.`equity_usd` AS `equity_usd`,`ad`.`frozen` AS `frozen`,`ad`.`order_frozen` AS `order_frozen`,`ad`.`borrow_frozen` AS `borrow_frozen`,`ad`.`unrealized_pnl` AS `unrealized_pnl`,`ad`.`isolated_unrealized_pnl` AS `isolated_unrealized_pnl`,`ad`.`coin_usd_price` AS `coin_usd_price`,`ad`.`margin_ratio` AS `margin_ratio`,`ad`.`spot_available` AS `spot_available`,`ad`.`liability` AS `liability`,`ad`.`update_time` AS `update_time` from ((((((((`devel`.`account` `a` left join `devel`.`account_detail` `ad` on((`a`.`account` = `ad`.`account`))) left join `devel`.`currency` `c` on((`ad`.`currency` = `c`.`currency`))) left join `devel`.`state` `cs` on((`c`.`state` = `cs`.`state`))) left join `devel`.`user_account` `ua` on((`a`.`account` = `ua`.`account`))) left join `devel`.`user` `u` on((`u`.`user` = `ua`.`owner`))) join `devel`.`environment` `e` on((`a`.`environment` = `e`.`environment`))) join `devel`.`broker` `b` on((`a`.`broker` = `b`.`broker`))) join `devel`.`state` `s` on((`a`.`state` = `s`.`state`)));

CREATE VIEW devel.vw_api_requests AS select `ip`.`account` AS `account`,ifnull(`os`.`map_ref`,`rs`.`status`) AS `status`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `instId`,`r`.`margin_mode` AS `marginMode`,`ip`.`position` AS `positionSide`,`r`.`action` AS `side`,`rt`.`source_ref` AS `orderType`,replace(format(`r`.`price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `price`,replace(format(`r`.`size`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `size`,cast(`r`.`leverage` as char charset utf8mb4) AS `leverage`,if((`r`.`reduce_only` = 0),'false','true') AS `reduceOnly`,`r`.`broker_id` AS `brokerId`,cast(hex(`r`.`request`) as char charset utf8mb4) AS `clientOrderId`,`r`.`memo` AS `memo`,`r`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`request` `r` left join `devel`.`orders` `o` on((`r`.`request` = `o`.`request`))) left join `devel`.`order_state` `os` on((`o`.`order_state` = `os`.`order_state`))) join `devel`.`instrument_position` `ip` on((`r`.`instrument_position` = `ip`.`instrument_position`))) join `devel`.`instrument` `i` on((`ip`.`instrument` = `i`.`instrument`))) join `devel`.`instrument_detail` `id` on((`i`.`instrument` = `id`.`instrument`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`))) join `devel`.`request_type` `rt` on((`r`.`request_type` = `rt`.`request_type`))) join `devel`.`state` `rs` on((`r`.`state` = `rs`.`state`)));

CREATE VIEW devel.vw_audit_instrument_periods AS select `missing`.`instrument` AS `instrument`,`missing`.`period` AS `period` from ((select `i`.`instrument` AS `instrument`,`p`.`period` AS `period` from (`devel`.`instrument` `i` join `devel`.`period` `p`)) `missing` left join `devel`.`instrument_period` `ip` on(((`ip`.`instrument` = `missing`.`instrument`) and (`ip`.`period` = `missing`.`period`)))) where (`ip`.`period` is null);

CREATE VIEW devel.vw_audit_role_authority AS select `sa`.`subject_area` AS `subject_area`,`r`.`role` AS `role`,`a`.`authority` AS `authority` from ((`devel`.`subject_area` `sa` join `devel`.`role` `r`) join `devel`.`authority` `a`) where (`sa`.`subject_area`,`r`.`role`,`a`.`authority`) in (select `sa`.`subject_area`,`devel`.`role_authority`.`role`,`devel`.`role_authority`.`authority` from `devel`.`role_authority`) is false;

CREATE VIEW devel.vw_instrument_periods AS select `i`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`symbol` AS `base_symbol`,`b`.`currency` AS `base_currency`,`q`.`symbol` AS `quote_symbol`,`q`.`currency` AS `quote_currency`,`p`.`period` AS `period`,`p`.`timeframe` AS `timeframe`,`p`.`timeframe_units` AS `timeframe_units`,`ip`.`bulk_collection_rate` AS `bulk_collection_rate`,if((`ip`.`bulk_collection_rate` = 0),0,if((`ip`.`interval_collection_rate` > 4),`ip`.`interval_collection_rate`,4)) AS `interval_collection_rate`,`ip`.`sma_factor` AS `sma_factor`,`ip`.`active_collection` AS `active_collection`,if((`qs`.`status` = 'Suspended'),`qs`.`state`,`bs`.`state`) AS `state`,if((`qs`.`status` = 'Suspended'),`qs`.`status`,`bs`.`status`) AS `status` from (((((((`devel`.`instrument` `i` join `devel`.`instrument_period` `ip` on((`ip`.`instrument` = `i`.`instrument`))) join `devel`.`period` `p` on((`ip`.`period` = `p`.`period`))) join `devel`.`instrument_detail` `id` on((`i`.`instrument` = `id`.`instrument`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`state` `bs` on((`b`.`state` = `bs`.`state`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`))) join `devel`.`state` `qs` on((`q`.`state` = `qs`.`state`)));

CREATE VIEW devel.vw_instruments AS select `i`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`currency` AS `base_currency`,`b`.`symbol` AS `base_symbol`,`q`.`currency` AS `quote_currency`,`q`.`symbol` AS `quote_symbol`,`it`.`source_ref` AS `instrument_type`,`ct`.`source_ref` AS `contract_type`,`id`.`contract_value` AS `contract_value`,`i`.`margin_mode` AS `margin_mode`,`i`.`leverage` AS `leverage`,`id`.`max_leverage` AS `max_leverage`,`id`.`min_size` AS `min_size`,`id`.`max_limit_size` AS `max_limit_size`,`id`.`max_market_size` AS `max_market_size`,`id`.`lot_size` AS `lot_size`,`i`.`lot_scale_factor` AS `lot_scale_factor`,`id`.`tick_size` AS `tick_size`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits`,`i`.`martingale_factor` AS `martingale_factor`,`ip`.`bulk_collection_rate` AS `bulk_collection_rate`,if(((`ip`.`bulk_collection_rate` = 0) or (`ip`.`bulk_collection_rate` is null)),NULL,if((`ip`.`interval_collection_rate` > 4),`ip`.`interval_collection_rate`,4)) AS `interval_collection_rate`,`ip`.`sma_factor` AS `sma_factor`,`p`.`period` AS `trade_period`,`p`.`timeframe` AS `trade_timeframe`,`p`.`timeframe_units` AS `timeframe_units`,if((`qs`.`status` = 'Suspended'),`qs`.`state`,`bs`.`state`) AS `state`,if((`qs`.`status` = 'Suspended'),`qs`.`status`,`bs`.`status`) AS `status`,`id`.`list_time` AS `list_time`,`id`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`instrument` `i` join `devel`.`currency` `b` on((`b`.`currency` = `i`.`base_currency`))) join `devel`.`currency` `q` on((`q`.`currency` = `i`.`quote_currency`))) join `devel`.`state` `bs` on((`bs`.`state` = `b`.`state`))) join `devel`.`state` `qs` on((`qs`.`state` = `q`.`state`))) left join `devel`.`instrument_period` `ip` on(((`ip`.`period` = `i`.`trade_period`) and (`ip`.`instrument` = `i`.`instrument`)))) left join `devel`.`instrument_detail` `id` on((`id`.`instrument` = `i`.`instrument`))) left join `devel`.`instrument_type` `it` on((`it`.`instrument_type` = `id`.`instrument_type`))) left join `devel`.`contract_type` `ct` on((`ct`.`contract_type` = `id`.`contract_type`))) left join `devel`.`period` `p` on((`p`.`period` = `i`.`trade_period`)));

CREATE VIEW devel.vw_orders AS select `ipos`.`account` AS `account`,`r`.`request` AS `request`,`o`.`order_id` AS `order_id`,cast(hex(`r`.`request`) as char charset utf8mb4) AS `client_order_id`,`ipos`.`instrument_position` AS `instrument_position`,`ipos`.`instrument` AS `instrument`,`devel`.`vi`.`symbol` AS `symbol`,`devel`.`vi`.`base_currency` AS `base_currency`,`devel`.`vi`.`base_symbol` AS `base_symbol`,`devel`.`vi`.`quote_currency` AS `quote_currency`,`devel`.`vi`.`quote_symbol` AS `quote_symbol`,`s`.`state` AS `state`,`s`.`status` AS `status`,ifnull(`rs`.`state`,`s`.`state`) AS `request_state`,ifnull(`os`.`map_ref`,`s`.`status`) AS `request_status`,`os`.`order_state` AS `order_state`,`os`.`source_ref` AS `order_status`,`ipos`.`position` AS `position`,`r`.`action` AS `action`,`r`.`request_type` AS `request_type`,`rt`.`source_ref` AS `order_type`,`r`.`margin_mode` AS `margin_mode`,`r`.`price` AS `price`,`r`.`size` AS `size`,`r`.`leverage` AS `leverage`,`o`.`filled_size` AS `filled_size`,`o`.`filled_amount` AS `filled_amount`,`o`.`average_price` AS `average_price`,`o`.`fee` AS `fee`,`o`.`pnl` AS `pnl`,`devel`.`vi`.`digits` AS `digits`,`cat`.`order_category` AS `order_category`,`cat`.`source_ref` AS `category`,`can`.`cancel_source` AS `cancel_source`,`can`.`source_ref` AS `canceled_by`,`devel`.`vi`.`contract_type` AS `contract_type`,`devel`.`vi`.`instrument_type` AS `instrument_type`,`r`.`reduce_only` AS `reduce_only`,`r`.`broker_id` AS `broker_id`,`devel`.`vi`.`trade_period` AS `trade_period`,`devel`.`vi`.`trade_timeframe` AS `trade_timeframe`,`devel`.`vi`.`timeframe_units` AS `timeframe_units`,`devel`.`vi`.`state` AS `trade_state`,`devel`.`vi`.`status` AS `trade_status`,`r`.`memo` AS `memo`,ifnull(`o`.`create_time`,`r`.`create_time`) AS `create_time`,ifnull(`o`.`update_time`,`r`.`update_time`) AS `update_time`,`r`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`request` `r` join `devel`.`instrument_position` `ipos` on((`ipos`.`instrument_position` = `r`.`instrument_position`))) join `devel`.`vw_instruments` `vi` on((`devel`.`vi`.`instrument` = `ipos`.`instrument`))) join `devel`.`state` `s` on((`r`.`state` = `s`.`state`))) join `devel`.`request_type` `rt` on((`r`.`request_type` = `rt`.`request_type`))) left join `devel`.`orders` `o` on((`r`.`request` = `o`.`request`))) left join `devel`.`order_state` `os` on((`o`.`order_state` = `os`.`order_state`))) left join `devel`.`state` `rs` on((`os`.`map_ref` = `rs`.`status`))) left join `devel`.`cancel_source` `can` on((`o`.`cancel_source` = `can`.`cancel_source`))) left join `devel`.`order_category` `cat` on((`o`.`order_category` = `cat`.`order_category`)));

CREATE VIEW devel.vw_positions AS select `ipos`.`account` AS `account`,`p`.`positions` AS `positions`,`ipos`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`ipos`.`position` AS `position`,`it`.`source_ref` AS `instrument_type`,if((`p`.`size` > 0),'buy','sell') AS `action`,if((`p`.`size` < 0),'buy','sell') AS `counter_action`,`p`.`size` AS `size`,`p`.`size_available` AS `size_available`,`p`.`leverage` AS `leverage`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits`,`p`.`margin_mode` AS `margin_mode`,`p`.`margin_ratio` AS `margin_ratio`,replace(format(`p`.`margin_initial`,3),',','') AS `margin_initial`,replace(format(`p`.`margin_maint`,3),',','') AS `margin_maint`,replace(format(`p`.`average_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `average_price`,replace(format(`p`.`liquidation_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `liquidation_price`,replace(format(`p`.`mark_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `mark_price`,replace(format(`p`.`unrealized_pnl`,3),',','') AS `unrealized_pnl`,`p`.`unrealized_pnl_ratio` AS `unrealized_pnl_ratio`,`p`.`adl` AS `adl`,`s`.`state` AS `state`,`s`.`status` AS `status`,`p`.`create_time` AS `create_time`,`p`.`update_time` AS `update_time` from (((((((`devel`.`positions` `p` join `devel`.`instrument_position` `ipos` on((`ipos`.`instrument_position` = `p`.`instrument_position`))) join `devel`.`instrument` `i` on((`i`.`instrument` = `ipos`.`instrument`))) join `devel`.`instrument_detail` `id` on((`id`.`instrument` = `ipos`.`instrument`))) join `devel`.`instrument_type` `it` on((`it`.`instrument_type` = `id`.`instrument_type`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`))) join `devel`.`state` `s` on((`ipos`.`state` = `s`.`state`)));

CREATE VIEW devel.vw_role_authority AS select `r`.`role` AS `role`,`r`.`title` AS `title`,`sa`.`subject_area` AS `subject_area`,`sa`.`description` AS `description`,`a`.`activity` AS `activity`,`a`.`task` AS `task`,`auth`.`authority` AS `authority`,`auth`.`privilege` AS `privilege`,`auth`.`priority` AS `priority`,`s`.`state` AS `state`,`s`.`status` AS `status` from (((((`devel`.`role_authority` `ra` join `devel`.`role` `r` on((`r`.`role` = `ra`.`role`))) join `devel`.`activity` `a` on((`a`.`activity` = `ra`.`activity`))) join `devel`.`subject_area` `sa` on((`sa`.`subject_area` = `a`.`subject_area`))) join `devel`.`authority` `auth` on((`auth`.`authority` = `ra`.`authority`))) join `devel`.`state` `s` on((`s`.`state` = `ra`.`state`)));

CREATE VIEW devel.vw_role_subject_areas AS select `ra`.`role` AS `role`,`ra`.`authority` AS `authority`,`ra`.`activity` AS `activity`,`ra`.`state` AS `state`,`rsa`.`title` AS `title` from (`devel`.`role_authority` `ra` join (select `a`.`activity` AS `activity`,`sa`.`subject_area` AS `subject_area`,`sa`.`title` AS `title` from `devel`.`activity` `a` join `devel`.`subject_area` `sa` group by `a`.`activity`,`sa`.`subject_area`) `rsa` on((`ra`.`activity` = `rsa`.`activity`)));

CREATE VIEW devel.vw_users AS select `u`.`user` AS `user`,`u`.`username` AS `username`,`u`.`email` AS `email`,`u`.`role` AS `role`,`r`.`title` AS `title`,`u`.`state` AS `state`,`s`.`status` AS `status`,`u`.`image_url` AS `image_url`,`u`.`password` AS `password`,`u`.`hash` AS `hash`,`u`.`create_time` AS `create_time`,`u`.`update_time` AS `update_time` from ((`devel`.`user` `u` join `devel`.`role` `r` on((`r`.`role` = `u`.`role`))) join `devel`.`state` `s` on((`s`.`state` = `u`.`state`)));

CREATE VIEW devel.vw_candles AS select `devel`.`vi`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`currency` AS `base_currency`,`b`.`symbol` AS `base_symbol`,`q`.`currency` AS `quote_currency`,`q`.`symbol` AS `quote_symbol`,`pt`.`period` AS `period`,`pt`.`timeframe` AS `timeframe`,`c`.`bar_time` AS `bar_time`,(unix_timestamp(`c`.`bar_time`) * 1000) AS `timestamp`,`c`.`open` AS `open`,`c`.`high` AS `high`,`c`.`low` AS `low`,`c`.`close` AS `close`,`c`.`volume` AS `volume`,`c`.`vol_currency` AS `vol_currency`,`c`.`vol_currency_quote` AS `vol_currency_quote`,`devel`.`vi`.`digits` AS `digits`,`c`.`completed` AS `completed` from (((((`devel`.`candle` `c` join `devel`.`vw_instruments` `vi` on((`c`.`instrument` = `devel`.`vi`.`instrument`))) join `devel`.`period` `pt` on((`c`.`period` = `pt`.`period`))) join `devel`.`instrument_period` `ip` on(((`devel`.`vi`.`instrument` = `ip`.`instrument`) and (`ip`.`period` = `pt`.`period`)))) join `devel`.`currency` `b` on((`devel`.`vi`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`devel`.`vi`.`quote_currency` = `q`.`currency`)));

CREATE VIEW devel.vw_instrument_positions AS select `ipos`.`account` AS `account`,`ipos`.`instrument_position` AS `instrument_position`,`ipos`.`instrument` AS `instrument`,`ipos`.`position` AS `position`,`devel`.`vi`.`symbol` AS `symbol`,`ipos`.`state` AS `state`,`s`.`status` AS `status`,`ipos`.`auto_state` AS `auto_state`,`auto`.`status` AS `auto_status`,`id`.`digits` AS `digits`,ifnull(`r`.`open_request`,0) AS `open_request`,ifnull(`tp`.`open_take_profit`,0) AS `open_take_profit`,ifnull(`sl`.`open_stop_loss`,0) AS `open_stop_loss`,`ipos`.`update_time` AS `update_time`,`ipos`.`close_time` AS `close_time`,`r`.`create_time` AS `create_time` from (((((((`devel`.`instrument_position` `ipos` join `devel`.`vw_instruments` `vi` on((`ipos`.`instrument` = `devel`.`vi`.`instrument`))) join `devel`.`state` `s` on((`ipos`.`state` = `s`.`state`))) join `devel`.`state` `auto` on((`auto`.`state` = `ipos`.`auto_state`))) join (select `id`.`instrument` AS `instrument`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits` from `devel`.`instrument_detail` `id`) `id` on((`id`.`instrument` = `ipos`.`instrument`))) left join (select `r`.`instrument_position` AS `instrument_position`,max(`r`.`create_time`) AS `create_time`,count(0) AS `open_request` from (`devel`.`state` `s` join `devel`.`request` `r` on(((`r`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued'))))) group by `r`.`instrument_position`) `r` on((`r`.`instrument_position` = `ipos`.`instrument_position`))) left join (select `sr`.`instrument_position` AS `instrument_position`,count(0) AS `open_take_profit` from (`devel`.`state` `s` join `devel`.`stop_request` `sr` on(((`sr`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued')) and (`sr`.`stop_type` = 'tp')))) group by `sr`.`instrument_position`) `tp` on((`tp`.`instrument_position` = `ipos`.`instrument_position`))) left join (select `sr`.`instrument_position` AS `instrument_position`,count(0) AS `open_stop_loss` from (`devel`.`state` `s` join `devel`.`stop_request` `sr` on(((`sr`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued')) and (`sr`.`stop_type` = 'sl')))) group by `sr`.`instrument_position`) `sl` on((`sl`.`instrument_position` = `ipos`.`instrument_position`)));

CREATE VIEW devel.vw_stop_orders AS select `sr`.`stop_request` AS `stop_request`,`sr`.`stop_type` AS `stop_type`,`so`.`tpsl_id` AS `tpsl_id`,concat(lower(cast(hex(`sr`.`stop_request`) as char charset utf8mb4)),'-',`sr`.`stop_type`) AS `client_order_id`,`devel`.`vip`.`instrument_position` AS `instrument_position`,`devel`.`vip`.`instrument` AS `instrument`,`devel`.`vip`.`symbol` AS `symbol`,`devel`.`vip`.`position` AS `position`,`devel`.`vip`.`state` AS `position_state`,`devel`.`vip`.`status` AS `position_status`,`rs`.`state` AS `state`,`rs`.`status` AS `status`,ifnull(`rs`.`state`,`s`.`state`) AS `request_state`,ifnull(`os`.`map_ref`,`s`.`status`) AS `request_status`,`os`.`order_state` AS `order_state`,`os`.`source_ref` AS `order_status`,`sr`.`action` AS `action`,`sr`.`size` AS `size`,`so`.`actual_size` AS `actual_size`,`sr`.`trigger_price` AS `trigger_price`,`sr`.`order_price` AS `order_price`,`sr`.`reduce_only` AS `reduce_only`,`sr`.`memo` AS `memo`,`so`.`broker_id` AS `broker_id`,ifnull(`so`.`create_time`,`sr`.`create_time`) AS `create_time` from (((((`devel`.`stop_request` `sr` left join `devel`.`stop_order` `so` on((`so`.`stop_request` = `sr`.`stop_request`))) left join `devel`.`order_state` `os` on((`so`.`order_state` = `os`.`order_state`))) left join `devel`.`state` `s` on((`s`.`state` = `os`.`map_ref`))) join `devel`.`vw_instrument_positions` `vip` on((`sr`.`instrument_position` = `devel`.`vip`.`instrument_position`))) join `devel`.`state` `rs` on((`sr`.`state` = `rs`.`state`)));

CREATE VIEW devel.vw_api_stop_requests AS select `s`.`status` AS `status`,`devel`.`vip`.`symbol` AS `instId`,`devel`.`vip`.`position` AS `positionSide`,`sr`.`action` AS `side`,`sr`.`size` AS `size`,if((`sr`.`stop_type` = 'tp'),replace(format(`sr`.`trigger_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `tpTriggerPrice`,if((`sr`.`stop_type` = 'tp'),replace(format(`sr`.`order_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `tpOrderPrice`,if((`sr`.`stop_type` = 'sl'),replace(format(`sr`.`trigger_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `slTriggerPrice`,if((`sr`.`stop_type` = 'sl'),replace(format(`sr`.`order_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `slOrderPrice`,`sr`.`reduce_only` AS `reduceOnly`,concat(lower(cast(hex(`sr`.`stop_request`) as char charset utf8mb4)),'-',`sr`.`stop_type`) AS `clientOrderId` from ((`devel`.`stop_request` `sr` join `devel`.`state` `s` on((`sr`.`state` = `s`.`state`))) join `devel`.`vw_instrument_positions` `vip` on((`sr`.`instrument_position` = `devel`.`vip`.`instrument_position`)));

CREATE VIEW devel.vw_audit_candles AS select `audit`.`instrument` AS `instrument`,`audit`.`symbol` AS `symbol`,`audit`.`period` AS `period`,`audit`.`timeframe` AS `timeframe`,`audit`.`hour` AS `hour`,`audit`.`entries` AS `entries` from ((select `devel`.`vc`.`instrument` AS `instrument`,`devel`.`vc`.`symbol` AS `symbol`,`devel`.`vc`.`period` AS `period`,`devel`.`vc`.`timeframe` AS `timeframe`,cast(date_format(`devel`.`vc`.`bar_time`,'%Y-%m-%d %k:00:00') as datetime) AS `hour`,count(0) AS `entries` from `devel`.`vw_candles` `vc` group by `devel`.`vc`.`instrument`,`devel`.`vc`.`symbol`,`devel`.`vc`.`period`,`devel`.`vc`.`timeframe`,cast(date_format(`devel`.`vc`.`bar_time`,'%Y-%m-%d %k:00:00') as datetime) having (`entries` < 4)) `audit` join (select `c`.`instrument` AS `instrument`,`c`.`period` AS `period`,min(cast(date_format(`c`.`bar_time`,'%Y-%m-%d %k:00:00') as datetime)) AS `hour` from `devel`.`candle` `c` group by `c`.`instrument`,`c`.`period`) `exclusions` on(((`audit`.`instrument` = `exclusions`.`instrument`) and (`audit`.`period` = `exclusions`.`period`)))) where (`audit`.`hour` > `exclusions`.`hour`) order by `audit`.`symbol`,`audit`.`timeframe`,`audit`.`hour` desc;

ALTER TABLE devel.cancel_source COMMENT 'not_canceled
user_canceled
system_canceled';

ALTER TABLE devel.fractal_state COMMENT 'Rally
Pullback
Retrace
Correction
Recovery
Breakout
Reversal
Extension';

ALTER TABLE devel.margin_mode COMMENT 'Margin mode
cross
isolated';

ALTER TABLE devel.order_category COMMENT 'normal
full_liquidation
partial_liquidation
adl
tp
sl';

ALTER TABLE devel.order_state COMMENT 'live, effective, canceled, order_failed, filled, partially_canceled, partially_filled';

ALTER TABLE devel.point_type COMMENT 'Origin
Base
Root
Expansion
Retrace
Recovery
Close';

ALTER TABLE devel.price_type COMMENT 'Trigger price type.
last: last price
index: index price
mark: mark price';

ALTER TABLE devel.request_type COMMENT 'market: market order
limit: limit order
post_only: Post-only order
fok: Fill-or-kill order
ioc: Immediate-or-cancel order';

ALTER TABLE devel.fractal_fibonacci MODIFY fractal_type CHAR(10)  NOT NULL   COMMENT 'Retrace
Extension';

]]></string>
		</script>
		<script name="SQL_Editor_004" id="9f13d6a6-bd81-467f-98e7-29cf5d955df3" language="SQL" >
			<string><![CDATA[CREATE SCHEMA devel;

CREATE  TABLE devel.api_error ( 
	error_code           INT    NOT NULL   PRIMARY KEY,
	http_status_code     SMALLINT    NOT NULL   ,
	error_message        VARCHAR(200)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.audit_request ( 
	request              BINARY(6)       ,
	old_state            BINARY(3)       ,
	new_state            BINARY(3)       ,
	update_time          DATETIME(6)       
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.authority ( 
	authority            BINARY(3)    NOT NULL   PRIMARY KEY,
	privilege            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	priority             SMALLINT  DEFAULT (0)  NOT NULL   ,
	CONSTRAINT ak_authority UNIQUE ( privilege ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.broker ( 
	broker               BINARY(3)    NOT NULL   PRIMARY KEY,
	name                 VARCHAR(30)    NOT NULL   ,
	image_url            VARCHAR(60)    NOT NULL   ,
	website_url          VARCHAR(60)    NOT NULL   ,
	CONSTRAINT ak_broker UNIQUE ( name ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.cancel_source ( 
	cancel_source        BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(15)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	source               VARCHAR(12)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_cancel UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.contract_type ( 
	contract_type        BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_contract_type UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.environment ( 
	environment          BINARY(3)    NOT NULL   PRIMARY KEY,
	environ              VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_environment UNIQUE ( environ ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.fibonacci ( 
	fibonacci            BINARY(3)    NOT NULL   PRIMARY KEY,
	level                TINYINT    NOT NULL   ,
	percent              DECIMAL(5,3)    NOT NULL   ,
	alias                VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.fractal_state ( 
	fractal_state        CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.instrument_type ( 
	instrument_type      BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_instrument_type UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.margin_mode ( 
	margin_mode          VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.order_category ( 
	order_category       BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(20)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_category UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.order_state ( 
	order_state          BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(20)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	`status`             VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	map_ref              VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	CONSTRAINT ak_order_state UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.period ( 
	period               BINARY(3)    NOT NULL   PRIMARY KEY,
	timeframe            VARCHAR(3)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	timeframe_units      INT    NOT NULL   ,
	CONSTRAINT ak_period UNIQUE ( timeframe ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.point_type ( 
	point_type           CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.position ( 
	position             CHAR(5)    NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE  TABLE devel.price_type ( 
	price_type           CHAR(5)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   PRIMARY KEY,
	description          VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.request_type ( 
	request_type         BINARY(3)    NOT NULL   PRIMARY KEY,
	source_ref           VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	CONSTRAINT ak_request_type UNIQUE ( source_ref ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.role ( 
	role                 BINARY(3)    NOT NULL   PRIMARY KEY,
	title                VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	auth_rank            SMALLINT    NOT NULL   ,
	CONSTRAINT ak_role UNIQUE ( title ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.state ( 
	state                BINARY(3)    NOT NULL   PRIMARY KEY,
	`status`             VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	description          VARCHAR(60)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_state UNIQUE ( `status` ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.stop_type ( 
	stop_type            CHAR(2)    NOT NULL   PRIMARY KEY
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE  TABLE devel.subject_area ( 
	subject_area         BINARY(3)    NOT NULL   PRIMARY KEY,
	title                VARCHAR(20)    NOT NULL   ,
	description          VARCHAR(200)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_subject_area UNIQUE ( title ) 
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.`user` ( 
	`user`               BINARY(3)    NOT NULL   PRIMARY KEY,
	email                VARCHAR(80)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	role                 BINARY(3)    NOT NULL   ,
	hash                 BINARY(16)    NOT NULL   ,
	username             VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	password             BINARY(32)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	image_url            VARCHAR(60)    NOT NULL   ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_user UNIQUE ( username, email ) ,
	CONSTRAINT fk_u_role FOREIGN KEY ( role ) REFERENCES devel.role( role ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_u_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_u_role ON devel.`user` ( role );

CREATE INDEX fk_u_state ON devel.`user` ( state );

CREATE  TABLE devel.account ( 
	account              BINARY(3)    NOT NULL   PRIMARY KEY,
	alias                VARCHAR(100)    NOT NULL   ,
	owner                BINARY(3)    NOT NULL   ,
	broker               BINARY(3)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	environment          BINARY(3)    NOT NULL   ,
	total_equity         DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	isolated_equity      DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	rest_api_url         VARCHAR(100)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	private_wss_url      VARCHAR(100)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	public_wss_url       VARCHAR(100)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	create_time          DATETIME(3)  DEFAULT (now())  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT fk_a_broker FOREIGN KEY ( broker ) REFERENCES devel.broker( broker ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_a_environment FOREIGN KEY ( environment ) REFERENCES devel.environment( environment ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_a_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_a_owner FOREIGN KEY ( owner ) REFERENCES devel.`user`( `user` ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_a_state ON devel.account ( state );

CREATE INDEX fk_a_broker ON devel.account ( broker );

CREATE INDEX fk_a_environment ON devel.account ( environment );

CREATE INDEX fk_a_owner ON devel.account ( owner );

CREATE  TABLE devel.activity ( 
	activity             BINARY(3)    NOT NULL   PRIMARY KEY,
	subject_area         BINARY(3)    NOT NULL   ,
	task                 VARCHAR(60)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT ak_activity UNIQUE ( task ) ,
	CONSTRAINT fk_a_subject FOREIGN KEY ( subject_area ) REFERENCES devel.subject_area( subject_area ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_a_subject ON devel.activity ( subject_area );

CREATE  TABLE devel.currency ( 
	currency             BINARY(3)    NOT NULL   PRIMARY KEY,
	symbol               VARCHAR(20)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	image_url            VARCHAR(300)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	CONSTRAINT ak_currency UNIQUE ( symbol ) ,
	CONSTRAINT fk_c_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_c_state ON devel.currency ( state );

CREATE  TABLE devel.instrument ( 
	instrument           BINARY(3)    NOT NULL   PRIMARY KEY,
	trade_period         BINARY(3)    NOT NULL   ,
	base_currency        BINARY(3)    NOT NULL   ,
	quote_currency       BINARY(3)    NOT NULL   ,
	margin_mode          VARCHAR(10)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	leverage             SMALLINT  DEFAULT (10)  NOT NULL   ,
	lot_scale_factor     SMALLINT UNSIGNED DEFAULT (1)     ,
	martingale_factor    SMALLINT  DEFAULT (1)  NOT NULL   ,
	CONSTRAINT ak_instrument UNIQUE ( base_currency, quote_currency ) ,
	CONSTRAINT fk_i_base_currency FOREIGN KEY ( base_currency ) REFERENCES devel.currency( currency ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_i_margin_mode FOREIGN KEY ( margin_mode ) REFERENCES devel.margin_mode( margin_mode ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_i_trade_period FOREIGN KEY ( trade_period ) REFERENCES devel.period( period ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_i_quote_currency FOREIGN KEY ( quote_currency ) REFERENCES devel.currency( currency ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_i_quote_currency ON devel.instrument ( quote_currency );

CREATE INDEX fk_i_trade_period ON devel.instrument ( trade_period );

CREATE INDEX fk_i_margin_mode ON devel.instrument ( margin_mode );

CREATE  TABLE devel.instrument_detail ( 
	instrument           BINARY(3)    NOT NULL   PRIMARY KEY,
	instrument_type      BINARY(3)    NOT NULL   ,
	contract_type        BINARY(3)    NOT NULL   ,
	contract_value       DECIMAL(17,5)    NOT NULL   ,
	max_leverage         INT    NOT NULL   ,
	min_size             DECIMAL(5,3)    NOT NULL   ,
	lot_size             DECIMAL(5,3)    NOT NULL   ,
	tick_size            DOUBLE    NOT NULL   ,
	max_limit_size       DECIMAL(13,2)    NOT NULL   ,
	max_market_size      DECIMAL(13,2)    NOT NULL   ,
	list_time            DATETIME(3)    NOT NULL   ,
	expiry_time          DATETIME(3)    NOT NULL   ,
	CONSTRAINT fk_id_contract_type FOREIGN KEY ( contract_type ) REFERENCES devel.contract_type( contract_type ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_id_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_id_instrument_type FOREIGN KEY ( instrument_type ) REFERENCES devel.instrument_type( instrument_type ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_id_instrument_type ON devel.instrument_detail ( instrument_type );

CREATE INDEX fk_id_contract_type ON devel.instrument_detail ( contract_type );

CREATE  TABLE devel.instrument_period ( 
	instrument           BINARY(3)    NOT NULL   ,
	period               BINARY(3)    NOT NULL   ,
	sma_factor           SMALLINT  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	bulk_collection_rate SMALLINT  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	interval_collection_rate SMALLINT  DEFAULT (0)  NOT NULL   ,
	active_collection    BOOLEAN  DEFAULT (false)  NOT NULL   ,
	CONSTRAINT pk_instrument_period PRIMARY KEY ( instrument, period ),
	CONSTRAINT fk_ip_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ip_period FOREIGN KEY ( period ) REFERENCES devel.period( period ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ip_period ON devel.instrument_period ( period );

CREATE  TABLE devel.instrument_position ( 
	instrument_position  BINARY(3)    NOT NULL   PRIMARY KEY,
	account              BINARY(3)    NOT NULL   ,
	instrument           BINARY(3)    NOT NULL   ,
	position             CHAR(5)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	auto_state           BINARY(3)    NOT NULL   ,
	strict_stops         BOOLEAN  DEFAULT (false)  NOT NULL   ,
	strict_targets       BOOLEAN  DEFAULT (false)  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	close_time           DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_instrument_position UNIQUE ( account, instrument, position ) ,
	CONSTRAINT fk_ipos_account FOREIGN KEY ( account ) REFERENCES devel.account( account ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ipos_position FOREIGN KEY ( position ) REFERENCES devel.position( position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ipos_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ipos_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE INDEX fk_ipos_state ON devel.instrument_position ( state );

CREATE INDEX fk_ipos_position ON devel.instrument_position ( position );

CREATE INDEX fk_ipos_instrument ON devel.instrument_position ( instrument );

CREATE  TABLE devel.positions ( 
	positions            BINARY(6)    NOT NULL   PRIMARY KEY,
	instrument_position  BINARY(3)    NOT NULL   ,
	size                 DOUBLE    NOT NULL   ,
	size_available       DOUBLE    NOT NULL   ,
	leverage             INT  DEFAULT (0)  NOT NULL   ,
	margin_mode          VARCHAR(10)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	margin_used          DOUBLE  DEFAULT (0)  NOT NULL   ,
	margin_ratio         DECIMAL(12,3)    NOT NULL   ,
	margin_initial       DOUBLE    NOT NULL   ,
	margin_maint         DOUBLE    NOT NULL   ,
	average_price        DOUBLE    NOT NULL   ,
	mark_price           DOUBLE    NOT NULL   ,
	liquidation_price    DOUBLE    NOT NULL   ,
	unrealized_pnl       DOUBLE    NOT NULL   ,
	unrealized_pnl_ratio DECIMAL(12,3)    NOT NULL   ,
	adl                  SMALLINT  DEFAULT (0)  NOT NULL   ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT fk_p_instrument_position FOREIGN KEY ( instrument_position ) REFERENCES devel.instrument_position( instrument_position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_p_margin_mode FOREIGN KEY ( margin_mode ) REFERENCES devel.margin_mode( margin_mode ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_p_margin_mode ON devel.positions ( margin_mode );

CREATE INDEX fk_p_instrument_position ON devel.positions ( instrument_position );

CREATE  TABLE devel.request ( 
	request              BINARY(6)    NOT NULL   PRIMARY KEY,
	instrument_position  BINARY(3)    NOT NULL   ,
	action               CHAR(4)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	price                DOUBLE  DEFAULT (0)  NOT NULL   ,
	size                 DOUBLE    NOT NULL   ,
	leverage             INT    NOT NULL   ,
	request_type         BINARY(3)    NOT NULL   ,
	margin_mode          VARCHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	reduce_only          BOOLEAN  DEFAULT (false)  NOT NULL   ,
	memo                 VARCHAR(200)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	broker_id            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	expiry_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT fk_r_instrument_position FOREIGN KEY ( instrument_position ) REFERENCES devel.instrument_position( instrument_position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_r_margin_mode FOREIGN KEY ( margin_mode ) REFERENCES devel.margin_mode( margin_mode ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_r_request_type FOREIGN KEY ( request_type ) REFERENCES devel.request_type( request_type ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_r_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

ALTER TABLE devel.request ADD CONSTRAINT ck_r_action CHECK ( `action` in (_utf8mb4'buy',_utf8mb4'sell') );

CREATE INDEX fk_r_instrument_position ON devel.request ( instrument_position );

CREATE INDEX fk_r_request_type ON devel.request ( request_type );

CREATE INDEX fk_r_margin_mode ON devel.request ( margin_mode );

CREATE INDEX fk_r_state ON devel.request ( state );

CREATE  TABLE devel.role_authority ( 
	role                 BINARY(3)    NOT NULL   ,
	authority            BINARY(3)    NOT NULL   ,
	activity             BINARY(3)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	CONSTRAINT pk_role_authority PRIMARY KEY ( role, authority, activity ),
	CONSTRAINT fk_ra_authority FOREIGN KEY ( authority ) REFERENCES devel.authority( authority ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_sra_role FOREIGN KEY ( role ) REFERENCES devel.role( role ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ra_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ra_activity FOREIGN KEY ( activity ) REFERENCES devel.activity( activity ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ra_role ON devel.role_authority ( role );

CREATE INDEX fk_ra_authority ON devel.role_authority ( authority );

CREATE INDEX fk_ra_state ON devel.role_authority ( state );

CREATE INDEX fk_ra_activity ON devel.role_authority ( activity );

CREATE  TABLE devel.stop_request ( 
	stop_request         BINARY(4)    NOT NULL   ,
	instrument_position  BINARY(3)    NOT NULL   ,
	state                BINARY(3)    NOT NULL   ,
	stop_type            CHAR(2)    NOT NULL   ,
	action               CHAR(4)    NOT NULL   ,
	size                 DOUBLE       ,
	trigger_price        DOUBLE  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	order_price          DOUBLE  DEFAULT (_utf8mb4'0')  NOT NULL   ,
	reduce_only          BOOLEAN  DEFAULT (false)  NOT NULL   ,
	memo                 VARCHAR(100)       ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT pk_stop_request PRIMARY KEY ( stop_request, stop_type ),
	CONSTRAINT fk_sr_instrument_position FOREIGN KEY ( instrument_position ) REFERENCES devel.instrument_position( instrument_position ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_sr_state FOREIGN KEY ( state ) REFERENCES devel.state( state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_sr_stop_type FOREIGN KEY ( stop_type ) REFERENCES devel.stop_type( stop_type ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE INDEX fk_sr_stop_type ON devel.stop_request ( stop_type );

CREATE INDEX fk_sr_instrument_position ON devel.stop_request ( instrument_position );

CREATE INDEX fk_sr_state ON devel.stop_request ( state );

CREATE  TABLE devel.user_account ( 
	`user`               BINARY(3)    NOT NULL   ,
	account              BINARY(3)    NOT NULL   ,
	nickname             VARCHAR(30)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	CONSTRAINT pk_user_account PRIMARY KEY ( `user`, account ),
	CONSTRAINT fk_ua_user FOREIGN KEY ( `user` ) REFERENCES devel.`user`( `user` ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ua_account FOREIGN KEY ( account ) REFERENCES devel.account( account ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ua_account ON devel.user_account ( account );

CREATE  TABLE devel.account_detail ( 
	account              BINARY(3)    NOT NULL   ,
	currency             BINARY(3)    NOT NULL   ,
	balance              DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	available            DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	currency_equity      DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	currency_isolated_equity DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	available_equity     DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	equity_usd           DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	frozen               DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	order_frozen         DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	borrow_frozen        DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	unrealized_pnl       DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	isolated_unrealized_pnl DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	coin_usd_price       DECIMAL(10,6)  DEFAULT (0)  NOT NULL   ,
	margin_ratio         DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	spot_available       DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	liability            DECIMAL(15,3)  DEFAULT (0)  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT pk_account_detail PRIMARY KEY ( account, currency ),
	CONSTRAINT fk_ad_account FOREIGN KEY ( account ) REFERENCES devel.account( account ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ad_currency FOREIGN KEY ( currency ) REFERENCES devel.currency( currency ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_ad_currency ON devel.account_detail ( currency );

CREATE  TABLE devel.candle ( 
	instrument           BINARY(3)    NOT NULL   ,
	period               BINARY(3)    NOT NULL   ,
	bar_time             DATETIME    NOT NULL   ,
	open                 DOUBLE    NOT NULL   ,
	high                 DOUBLE    NOT NULL   ,
	low                  DOUBLE    NOT NULL   ,
	close                DOUBLE    NOT NULL   ,
	volume               INT    NOT NULL   ,
	vol_currency         DECIMAL(15,6)    NOT NULL   ,
	vol_currency_quote   DECIMAL(15,6)    NOT NULL   ,
	completed            BOOLEAN    NOT NULL   ,
	CONSTRAINT pk_candle PRIMARY KEY ( instrument, period, bar_time ),
	CONSTRAINT fk_c_instrument FOREIGN KEY ( instrument ) REFERENCES devel.instrument( instrument ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_c_period FOREIGN KEY ( period ) REFERENCES devel.period( period ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_c_period ON devel.candle ( period );

CREATE  TABLE devel.fractal ( 
	fractal              BINARY(3)    NOT NULL   PRIMARY KEY,
	instrument           BINARY(3)    NOT NULL   ,
	period               BINARY(3)    NOT NULL   ,
	position             CHAR(5)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	fibonacci            BINARY(3)       ,
	CONSTRAINT ak_fractal UNIQUE ( instrument, period, position ) ,
	CONSTRAINT fk_f_instrument_period FOREIGN KEY ( instrument, period ) REFERENCES devel.instrument_period( instrument, period ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE  TABLE devel.fractal_fibonacci ( 
	fractal              BINARY(3)    NOT NULL   ,
	fractal_type         CHAR(10)   COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	fibonacci            BINARY(3)    NOT NULL   ,
	fractal_state        CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	price                DOUBLE    NOT NULL   ,
	CONSTRAINT pk_fractal_fibonacci PRIMARY KEY ( fractal, fractal_type, fibonacci ),
	CONSTRAINT fk_ff_fibonacci FOREIGN KEY ( fibonacci ) REFERENCES devel.fibonacci( fibonacci ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ff_fractal FOREIGN KEY ( fractal ) REFERENCES devel.fractal( fractal ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_ff_fractal_state FOREIGN KEY ( fractal_state ) REFERENCES devel.fractal_state( fractal_state ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

ALTER TABLE devel.fractal_fibonacci ADD CONSTRAINT ck_ff_fractal_type CHECK ( `fractal_type` in (_utf8mb4'extension',_utf8mb4'retrace') );

CREATE INDEX fk_ff_fibonacci ON devel.fractal_fibonacci ( fibonacci );

CREATE INDEX fk_ff_fractal_state ON devel.fractal_fibonacci ( fractal_state );

CREATE  TABLE devel.fractal_point ( 
	fractal              BINARY(3)    NOT NULL   ,
	point_type           CHAR(10)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs NOT NULL   ,
	price                DOUBLE    NOT NULL   ,
	create_time          DATETIME    NOT NULL   ,
	CONSTRAINT pk_fractal_point PRIMARY KEY ( fractal, point_type ),
	CONSTRAINT fk_p_point_type FOREIGN KEY ( point_type ) REFERENCES devel.point_type( point_type ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_point_fractal FOREIGN KEY ( fractal ) REFERENCES devel.fractal( fractal ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_fp_point_type ON devel.fractal_point ( point_type );

CREATE  TABLE devel.orders ( 
	request              BINARY(6)    NOT NULL   PRIMARY KEY,
	order_id             BIGINT    NOT NULL   ,
	order_category       BINARY(3)    NOT NULL   ,
	order_state          BINARY(3)    NOT NULL   ,
	cancel_source        BINARY(3)    NOT NULL   ,
	filled_size          DOUBLE  DEFAULT (0)  NOT NULL   ,
	filled_amount        DOUBLE  DEFAULT (0)  NOT NULL   ,
	average_price        DOUBLE  DEFAULT (0)  NOT NULL   ,
	fee                  DOUBLE  DEFAULT (0)  NOT NULL   ,
	pnl                  DOUBLE  DEFAULT (0)  NOT NULL   ,
	broker_id            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	update_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_orders UNIQUE ( order_id ) ,
	CONSTRAINT fk_o_cancel_source FOREIGN KEY ( cancel_source ) REFERENCES devel.cancel_source( cancel_source ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_o_order_category FOREIGN KEY ( order_category ) REFERENCES devel.order_category( order_category ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_o_order_state FOREIGN KEY ( order_state ) REFERENCES devel.order_state( order_state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_o_request FOREIGN KEY ( request ) REFERENCES devel.request( request ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_o_order_state ON devel.orders ( order_state );

CREATE INDEX fk_o_order_category ON devel.orders ( order_category );

CREATE INDEX fk_o_cancel_source ON devel.orders ( cancel_source );

CREATE  TABLE devel.stop_order ( 
	stop_request         BINARY(4)    NOT NULL   PRIMARY KEY,
	tpsl_id              BIGINT    NOT NULL   ,
	order_state          BINARY(3)    NOT NULL   ,
	actual_size          DOUBLE    NOT NULL   ,
	broker_id            VARCHAR(16)   CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_cs    ,
	create_time          DATETIME(3)  DEFAULT (now(3))  NOT NULL   ,
	CONSTRAINT ak_stop_order UNIQUE ( tpsl_id ) ,
	CONSTRAINT fk_so_order_state FOREIGN KEY ( order_state ) REFERENCES devel.order_state( order_state ) ON DELETE NO ACTION ON UPDATE NO ACTION,
	CONSTRAINT fk_so_stop_request FOREIGN KEY ( stop_request ) REFERENCES devel.stop_request( stop_request ) ON DELETE NO ACTION ON UPDATE NO ACTION
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_as_cs;

CREATE INDEX fk_so_order_state ON devel.stop_order ( order_state );

CREATE VIEW devel.vw_accounts AS select `a`.`account` AS `account`,`a`.`alias` AS `alias`,`a`.`broker` AS `broker`,`a`.`state` AS `state`,`s`.`status` AS `status`,`e`.`environment` AS `environment`,`e`.`environ` AS `environ`,`b`.`name` AS `broker_name`,`b`.`image_url` AS `broker_image_url`,`b`.`website_url` AS `broker_website_url`,`u`.`username` AS `owner_name`,`u`.`email` AS `owner_email`,`u`.`image_url` AS `owner_image_url`,`a`.`total_equity` AS `total_equity`,`a`.`isolated_equity` AS `isolated_equity`,`a`.`rest_api_url` AS `rest_api_url`,`a`.`private_wss_url` AS `private_wss_url`,`a`.`public_wss_url` AS `public_wss_url`,`c`.`currency` AS `currency`,`c`.`symbol` AS `symbol`,`c`.`image_url` AS `currency_image_url`,`c`.`state` AS `currency_state`,`cs`.`status` AS `currency_status`,`ad`.`balance` AS `balance`,`ad`.`currency_equity` AS `currency_equity`,`ad`.`currency_isolated_equity` AS `currency_isolated_equity`,`ad`.`available` AS `available`,`ad`.`available_equity` AS `available_equity`,`ad`.`equity_usd` AS `equity_usd`,`ad`.`frozen` AS `frozen`,`ad`.`order_frozen` AS `order_frozen`,`ad`.`borrow_frozen` AS `borrow_frozen`,`ad`.`unrealized_pnl` AS `unrealized_pnl`,`ad`.`isolated_unrealized_pnl` AS `isolated_unrealized_pnl`,`ad`.`coin_usd_price` AS `coin_usd_price`,`ad`.`margin_ratio` AS `margin_ratio`,`ad`.`spot_available` AS `spot_available`,`ad`.`liability` AS `liability`,`ad`.`update_time` AS `update_time` from (((((((`devel`.`account` `a` left join `devel`.`account_detail` `ad` on((`a`.`account` = `ad`.`account`))) left join `devel`.`currency` `c` on((`ad`.`currency` = `c`.`currency`))) left join `devel`.`state` `cs` on((`c`.`state` = `cs`.`state`))) join `devel`.`user` `u` on((`u`.`user` = `a`.`owner`))) join `devel`.`environment` `e` on((`a`.`environment` = `e`.`environment`))) join `devel`.`broker` `b` on((`a`.`broker` = `b`.`broker`))) join `devel`.`state` `s` on((`a`.`state` = `s`.`state`)));

CREATE VIEW devel.vw_activity AS select `sa`.`subject_area` AS `subject_area`,`sa`.`title` AS `title`,`sa`.`description` AS `description`,`a`.`activity` AS `activity`,`a`.`task` AS `task` from (`devel`.`subject_area` `sa` join `devel`.`activity` `a` on((`a`.`subject_area` = `sa`.`subject_area`)));

CREATE VIEW devel.vw_api_requests AS select `ip`.`account` AS `account`,ifnull(`os`.`map_ref`,`rs`.`status`) AS `status`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `instId`,`r`.`margin_mode` AS `marginMode`,`ip`.`position` AS `positionSide`,`r`.`action` AS `side`,`rt`.`source_ref` AS `orderType`,replace(format(`r`.`price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `price`,replace(format(`r`.`size`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `size`,cast(`r`.`leverage` as char charset utf8mb4) AS `leverage`,if((`r`.`reduce_only` = 0),'false','true') AS `reduceOnly`,`r`.`broker_id` AS `brokerId`,cast(hex(`r`.`request`) as char charset utf8mb4) AS `clientOrderId`,`r`.`memo` AS `memo`,`r`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`request` `r` left join `devel`.`orders` `o` on((`r`.`request` = `o`.`request`))) left join `devel`.`order_state` `os` on((`o`.`order_state` = `os`.`order_state`))) join `devel`.`instrument_position` `ip` on((`r`.`instrument_position` = `ip`.`instrument_position`))) join `devel`.`instrument` `i` on((`ip`.`instrument` = `i`.`instrument`))) join `devel`.`instrument_detail` `id` on((`i`.`instrument` = `id`.`instrument`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`))) join `devel`.`request_type` `rt` on((`r`.`request_type` = `rt`.`request_type`))) join `devel`.`state` `rs` on((`r`.`state` = `rs`.`state`)));

CREATE VIEW devel.vw_audit_instrument_periods AS select `missing`.`instrument` AS `instrument`,`missing`.`period` AS `period` from ((select `i`.`instrument` AS `instrument`,`p`.`period` AS `period` from (`devel`.`instrument` `i` join `devel`.`period` `p`)) `missing` left join `devel`.`instrument_period` `ip` on(((`ip`.`instrument` = `missing`.`instrument`) and (`ip`.`period` = `missing`.`period`)))) where (`ip`.`period` is null);

CREATE VIEW devel.vw_audit_role_authority AS select `r`.`role` AS `role`,`auth`.`authority` AS `authority`,`a`.`activity` AS `activity` from ((`devel`.`activity` `a` join `devel`.`role` `r`) join `devel`.`authority` `auth`) where (`r`.`role`,`auth`.`authority`,`a`.`activity`) in (select `devel`.`role_authority`.`role`,`devel`.`role_authority`.`authority`,`devel`.`role_authority`.`activity` from `devel`.`role_authority`) is false;

CREATE VIEW devel.vw_currency AS select `c`.`currency` AS `currency`,`c`.`symbol` AS `symbol`,`s`.`state` AS `state`,`s`.`status` AS `status`,`c`.`image_url` AS `image_url` from (`devel`.`currency` `c` join `devel`.`state` `s` on((`c`.`state` = `s`.`state`)));

CREATE VIEW devel.vw_instrument_periods AS select `i`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`symbol` AS `base_symbol`,`b`.`currency` AS `base_currency`,`q`.`symbol` AS `quote_symbol`,`q`.`currency` AS `quote_currency`,`p`.`period` AS `period`,`p`.`timeframe` AS `timeframe`,`p`.`timeframe_units` AS `timeframe_units`,`ip`.`bulk_collection_rate` AS `bulk_collection_rate`,if((`ip`.`bulk_collection_rate` = 0),0,if((`ip`.`interval_collection_rate` > 4),`ip`.`interval_collection_rate`,4)) AS `interval_collection_rate`,`ip`.`sma_factor` AS `sma_factor`,`ip`.`active_collection` AS `active_collection`,if((`qs`.`status` = 'Suspended'),`qs`.`state`,`bs`.`state`) AS `state`,if((`qs`.`status` = 'Suspended'),`qs`.`status`,`bs`.`status`) AS `status` from (((((((`devel`.`instrument` `i` join `devel`.`instrument_period` `ip` on((`ip`.`instrument` = `i`.`instrument`))) join `devel`.`period` `p` on((`ip`.`period` = `p`.`period`))) join `devel`.`instrument_detail` `id` on((`i`.`instrument` = `id`.`instrument`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`state` `bs` on((`b`.`state` = `bs`.`state`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`))) join `devel`.`state` `qs` on((`q`.`state` = `qs`.`state`)));

CREATE VIEW devel.vw_instruments AS select `i`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`currency` AS `base_currency`,`b`.`symbol` AS `base_symbol`,`q`.`currency` AS `quote_currency`,`q`.`symbol` AS `quote_symbol`,`it`.`source_ref` AS `instrument_type`,`ct`.`source_ref` AS `contract_type`,`id`.`contract_value` AS `contract_value`,`i`.`margin_mode` AS `margin_mode`,`i`.`leverage` AS `leverage`,`id`.`max_leverage` AS `max_leverage`,`id`.`min_size` AS `min_size`,`id`.`max_limit_size` AS `max_limit_size`,`id`.`max_market_size` AS `max_market_size`,`id`.`lot_size` AS `lot_size`,`i`.`lot_scale_factor` AS `lot_scale_factor`,`id`.`tick_size` AS `tick_size`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits`,`i`.`martingale_factor` AS `martingale_factor`,`ip`.`bulk_collection_rate` AS `bulk_collection_rate`,if(((`ip`.`bulk_collection_rate` = 0) or (`ip`.`bulk_collection_rate` is null)),NULL,if((`ip`.`interval_collection_rate` > 4),`ip`.`interval_collection_rate`,4)) AS `interval_collection_rate`,`ip`.`sma_factor` AS `sma_factor`,`p`.`period` AS `trade_period`,`p`.`timeframe` AS `trade_timeframe`,`p`.`timeframe_units` AS `timeframe_units`,if((`qs`.`status` = 'Suspended'),`qs`.`state`,`bs`.`state`) AS `state`,if((`qs`.`status` = 'Suspended'),`qs`.`status`,`bs`.`status`) AS `status`,`id`.`list_time` AS `list_time`,`id`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`instrument` `i` join `devel`.`currency` `b` on((`b`.`currency` = `i`.`base_currency`))) join `devel`.`currency` `q` on((`q`.`currency` = `i`.`quote_currency`))) join `devel`.`state` `bs` on((`bs`.`state` = `b`.`state`))) join `devel`.`state` `qs` on((`qs`.`state` = `q`.`state`))) left join `devel`.`instrument_period` `ip` on(((`ip`.`period` = `i`.`trade_period`) and (`ip`.`instrument` = `i`.`instrument`)))) left join `devel`.`instrument_detail` `id` on((`id`.`instrument` = `i`.`instrument`))) left join `devel`.`instrument_type` `it` on((`it`.`instrument_type` = `id`.`instrument_type`))) left join `devel`.`contract_type` `ct` on((`ct`.`contract_type` = `id`.`contract_type`))) left join `devel`.`period` `p` on((`p`.`period` = `i`.`trade_period`)));

CREATE VIEW devel.vw_orders AS select `ipos`.`account` AS `account`,`r`.`request` AS `request`,`o`.`order_id` AS `order_id`,cast(hex(`r`.`request`) as char charset utf8mb4) AS `client_order_id`,`ipos`.`instrument_position` AS `instrument_position`,`ipos`.`instrument` AS `instrument`,`devel`.`vi`.`symbol` AS `symbol`,`devel`.`vi`.`base_currency` AS `base_currency`,`devel`.`vi`.`base_symbol` AS `base_symbol`,`devel`.`vi`.`quote_currency` AS `quote_currency`,`devel`.`vi`.`quote_symbol` AS `quote_symbol`,`s`.`state` AS `state`,`s`.`status` AS `status`,ifnull(`rs`.`state`,`s`.`state`) AS `request_state`,ifnull(`os`.`map_ref`,`s`.`status`) AS `request_status`,`os`.`order_state` AS `order_state`,`os`.`source_ref` AS `order_status`,`ipos`.`position` AS `position`,`r`.`action` AS `action`,`r`.`request_type` AS `request_type`,`rt`.`source_ref` AS `order_type`,`r`.`margin_mode` AS `margin_mode`,`r`.`price` AS `price`,`r`.`size` AS `size`,`r`.`leverage` AS `leverage`,`o`.`filled_size` AS `filled_size`,`o`.`filled_amount` AS `filled_amount`,`o`.`average_price` AS `average_price`,`o`.`fee` AS `fee`,`o`.`pnl` AS `pnl`,`devel`.`vi`.`digits` AS `digits`,`cat`.`order_category` AS `order_category`,`cat`.`source_ref` AS `category`,`can`.`cancel_source` AS `cancel_source`,`can`.`source_ref` AS `canceled_by`,`devel`.`vi`.`contract_type` AS `contract_type`,`devel`.`vi`.`instrument_type` AS `instrument_type`,`r`.`reduce_only` AS `reduce_only`,`r`.`broker_id` AS `broker_id`,`devel`.`vi`.`trade_period` AS `trade_period`,`devel`.`vi`.`trade_timeframe` AS `trade_timeframe`,`devel`.`vi`.`timeframe_units` AS `timeframe_units`,`devel`.`vi`.`state` AS `trade_state`,`devel`.`vi`.`status` AS `trade_status`,`r`.`memo` AS `memo`,ifnull(`o`.`create_time`,`r`.`create_time`) AS `create_time`,ifnull(`o`.`update_time`,`r`.`update_time`) AS `update_time`,`r`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`request` `r` join `devel`.`instrument_position` `ipos` on((`ipos`.`instrument_position` = `r`.`instrument_position`))) join `devel`.`vw_instruments` `vi` on((`devel`.`vi`.`instrument` = `ipos`.`instrument`))) join `devel`.`state` `s` on((`r`.`state` = `s`.`state`))) join `devel`.`request_type` `rt` on((`r`.`request_type` = `rt`.`request_type`))) left join `devel`.`orders` `o` on((`r`.`request` = `o`.`request`))) left join `devel`.`order_state` `os` on((`o`.`order_state` = `os`.`order_state`))) left join `devel`.`state` `rs` on((`os`.`map_ref` = `rs`.`status`))) left join `devel`.`cancel_source` `can` on((`o`.`cancel_source` = `can`.`cancel_source`))) left join `devel`.`order_category` `cat` on((`o`.`order_category` = `cat`.`order_category`)));

CREATE VIEW devel.vw_positions AS select `ipos`.`account` AS `account`,`p`.`positions` AS `positions`,`ipos`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`ipos`.`position` AS `position`,`it`.`source_ref` AS `instrument_type`,if((`p`.`size` > 0),'buy','sell') AS `action`,if((`p`.`size` < 0),'buy','sell') AS `counter_action`,`p`.`size` AS `size`,`p`.`size_available` AS `size_available`,`p`.`leverage` AS `leverage`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits`,`p`.`margin_mode` AS `margin_mode`,`p`.`margin_ratio` AS `margin_ratio`,replace(format(`p`.`margin_initial`,3),',','') AS `margin_initial`,replace(format(`p`.`margin_maint`,3),',','') AS `margin_maint`,replace(format(`p`.`average_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `average_price`,replace(format(`p`.`liquidation_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `liquidation_price`,replace(format(`p`.`mark_price`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1)),',','') AS `mark_price`,replace(format(`p`.`unrealized_pnl`,3),',','') AS `unrealized_pnl`,`p`.`unrealized_pnl_ratio` AS `unrealized_pnl_ratio`,`p`.`adl` AS `adl`,`s`.`state` AS `state`,`s`.`status` AS `status`,`p`.`create_time` AS `create_time`,`p`.`update_time` AS `update_time` from (((((((`devel`.`positions` `p` join `devel`.`instrument_position` `ipos` on((`ipos`.`instrument_position` = `p`.`instrument_position`))) join `devel`.`instrument` `i` on((`i`.`instrument` = `ipos`.`instrument`))) join `devel`.`instrument_detail` `id` on((`id`.`instrument` = `ipos`.`instrument`))) join `devel`.`instrument_type` `it` on((`it`.`instrument_type` = `id`.`instrument_type`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`))) join `devel`.`state` `s` on((`ipos`.`state` = `s`.`state`)));

CREATE VIEW devel.vw_role_authority AS select `r`.`role` AS `role`,`r`.`title` AS `title`,`sa`.`subject_area` AS `subject_area`,`sa`.`title` AS `subject_area_title`,`sa`.`description` AS `description`,`a`.`activity` AS `activity`,`a`.`task` AS `task`,`auth`.`authority` AS `authority`,`auth`.`privilege` AS `privilege`,`auth`.`priority` AS `priority`,`s`.`state` AS `state`,`s`.`status` AS `status` from (((((`devel`.`role_authority` `ra` join `devel`.`role` `r` on((`r`.`role` = `ra`.`role`))) join `devel`.`activity` `a` on((`a`.`activity` = `ra`.`activity`))) join `devel`.`subject_area` `sa` on((`sa`.`subject_area` = `a`.`subject_area`))) join `devel`.`authority` `auth` on((`auth`.`authority` = `ra`.`authority`))) join `devel`.`state` `s` on((`s`.`state` = `ra`.`state`)));

CREATE VIEW devel.vw_role_subject_areas AS select `ra`.`role` AS `role`,`ra`.`authority` AS `authority`,`ra`.`activity` AS `activity`,`ra`.`state` AS `state`,`rsa`.`title` AS `subject_area_title` from (`devel`.`role_authority` `ra` join (select `a`.`activity` AS `activity`,`sa`.`subject_area` AS `subject_area`,`sa`.`title` AS `title` from (`devel`.`activity` `a` join `devel`.`subject_area` `sa`) group by `a`.`activity`,`sa`.`subject_area`) `rsa` on((`ra`.`activity` = `rsa`.`activity`)));

CREATE VIEW devel.vw_users AS select `u`.`user` AS `user`,`u`.`username` AS `username`,`u`.`email` AS `email`,`u`.`role` AS `role`,`r`.`title` AS `title`,`u`.`state` AS `state`,`s`.`status` AS `status`,`u`.`image_url` AS `image_url`,`u`.`password` AS `password`,`u`.`hash` AS `hash`,`rc`.`similar_roles` AS `similar_roles`,`uc`.`total_users` AS `total_users`,`u`.`create_time` AS `create_time`,`u`.`update_time` AS `update_time` from ((((`devel`.`user` `u` join `devel`.`role` `r` on((`r`.`role` = `u`.`role`))) join (select `devel`.`user`.`role` AS `role`,count(0) AS `similar_roles` from `devel`.`user` group by `devel`.`user`.`role`) `rc` on((`rc`.`role` = `u`.`role`))) join (select count(0) AS `total_users` from `devel`.`user`) `uc`) join `devel`.`state` `s` on((`s`.`state` = `u`.`state`)));

CREATE VIEW devel.vw_candles AS select `devel`.`vi`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`currency` AS `base_currency`,`b`.`symbol` AS `base_symbol`,`q`.`currency` AS `quote_currency`,`q`.`symbol` AS `quote_symbol`,`pt`.`period` AS `period`,`pt`.`timeframe` AS `timeframe`,`c`.`bar_time` AS `bar_time`,(unix_timestamp(`c`.`bar_time`) * 1000) AS `timestamp`,`c`.`open` AS `open`,`c`.`high` AS `high`,`c`.`low` AS `low`,`c`.`close` AS `close`,`c`.`volume` AS `volume`,`c`.`vol_currency` AS `vol_currency`,`c`.`vol_currency_quote` AS `vol_currency_quote`,`devel`.`vi`.`digits` AS `digits`,`c`.`completed` AS `completed` from (((((`devel`.`candle` `c` join `devel`.`vw_instruments` `vi` on((`c`.`instrument` = `devel`.`vi`.`instrument`))) join `devel`.`period` `pt` on((`c`.`period` = `pt`.`period`))) join `devel`.`instrument_period` `ip` on(((`devel`.`vi`.`instrument` = `ip`.`instrument`) and (`ip`.`period` = `pt`.`period`)))) join `devel`.`currency` `b` on((`devel`.`vi`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`devel`.`vi`.`quote_currency` = `q`.`currency`)));

CREATE VIEW devel.vw_instrument_positions AS select `ipos`.`account` AS `account`,`ipos`.`instrument_position` AS `instrument_position`,`ipos`.`instrument` AS `instrument`,`ipos`.`position` AS `position`,`devel`.`vi`.`symbol` AS `symbol`,`ipos`.`state` AS `state`,`s`.`status` AS `status`,`ipos`.`auto_state` AS `auto_state`,`auto`.`status` AS `auto_status`,`id`.`digits` AS `digits`,ifnull(`r`.`open_request`,0) AS `open_request`,ifnull(`tp`.`open_take_profit`,0) AS `open_take_profit`,ifnull(`sl`.`open_stop_loss`,0) AS `open_stop_loss`,`ipos`.`update_time` AS `update_time`,`ipos`.`close_time` AS `close_time`,`r`.`create_time` AS `create_time` from (((((((`devel`.`instrument_position` `ipos` join `devel`.`vw_instruments` `vi` on((`ipos`.`instrument` = `devel`.`vi`.`instrument`))) join `devel`.`state` `s` on((`ipos`.`state` = `s`.`state`))) join `devel`.`state` `auto` on((`auto`.`state` = `ipos`.`auto_state`))) join (select `id`.`instrument` AS `instrument`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits` from `devel`.`instrument_detail` `id`) `id` on((`id`.`instrument` = `ipos`.`instrument`))) left join (select `r`.`instrument_position` AS `instrument_position`,max(`r`.`create_time`) AS `create_time`,count(0) AS `open_request` from (`devel`.`state` `s` join `devel`.`request` `r` on(((`r`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued'))))) group by `r`.`instrument_position`) `r` on((`r`.`instrument_position` = `ipos`.`instrument_position`))) left join (select `sr`.`instrument_position` AS `instrument_position`,count(0) AS `open_take_profit` from (`devel`.`state` `s` join `devel`.`stop_request` `sr` on(((`sr`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued')) and (`sr`.`stop_type` = 'tp')))) group by `sr`.`instrument_position`) `tp` on((`tp`.`instrument_position` = `ipos`.`instrument_position`))) left join (select `sr`.`instrument_position` AS `instrument_position`,count(0) AS `open_stop_loss` from (`devel`.`state` `s` join `devel`.`stop_request` `sr` on(((`sr`.`state` = `s`.`state`) and (`s`.`status` in ('Pending','Queued')) and (`sr`.`stop_type` = 'sl')))) group by `sr`.`instrument_position`) `sl` on((`sl`.`instrument_position` = `ipos`.`instrument_position`)));

CREATE VIEW devel.vw_stop_orders AS select `sr`.`stop_request` AS `stop_request`,`sr`.`stop_type` AS `stop_type`,`so`.`tpsl_id` AS `tpsl_id`,concat(lower(cast(hex(`sr`.`stop_request`) as char charset utf8mb4)),'-',`sr`.`stop_type`) AS `client_order_id`,`devel`.`vip`.`instrument_position` AS `instrument_position`,`devel`.`vip`.`instrument` AS `instrument`,`devel`.`vip`.`symbol` AS `symbol`,`devel`.`vip`.`position` AS `position`,`devel`.`vip`.`state` AS `position_state`,`devel`.`vip`.`status` AS `position_status`,`rs`.`state` AS `state`,`rs`.`status` AS `status`,ifnull(`rs`.`state`,`s`.`state`) AS `request_state`,ifnull(`os`.`map_ref`,`s`.`status`) AS `request_status`,`os`.`order_state` AS `order_state`,`os`.`source_ref` AS `order_status`,`sr`.`action` AS `action`,`sr`.`size` AS `size`,`so`.`actual_size` AS `actual_size`,`sr`.`trigger_price` AS `trigger_price`,`sr`.`order_price` AS `order_price`,`sr`.`reduce_only` AS `reduce_only`,`sr`.`memo` AS `memo`,`so`.`broker_id` AS `broker_id`,ifnull(`so`.`create_time`,`sr`.`create_time`) AS `create_time` from (((((`devel`.`stop_request` `sr` left join `devel`.`stop_order` `so` on((`so`.`stop_request` = `sr`.`stop_request`))) left join `devel`.`order_state` `os` on((`so`.`order_state` = `os`.`order_state`))) left join `devel`.`state` `s` on((`s`.`state` = `os`.`map_ref`))) join `devel`.`vw_instrument_positions` `vip` on((`sr`.`instrument_position` = `devel`.`vip`.`instrument_position`))) join `devel`.`state` `rs` on((`sr`.`state` = `rs`.`state`)));

CREATE VIEW devel.vw_api_stop_requests AS select `s`.`status` AS `status`,`devel`.`vip`.`symbol` AS `instId`,`devel`.`vip`.`position` AS `positionSide`,`sr`.`action` AS `side`,`sr`.`size` AS `size`,if((`sr`.`stop_type` = 'tp'),replace(format(`sr`.`trigger_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `tpTriggerPrice`,if((`sr`.`stop_type` = 'tp'),replace(format(`sr`.`order_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `tpOrderPrice`,if((`sr`.`stop_type` = 'sl'),replace(format(`sr`.`trigger_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `slTriggerPrice`,if((`sr`.`stop_type` = 'sl'),replace(format(`sr`.`order_price`,`devel`.`vip`.`digits`),',',''),NULL) AS `slOrderPrice`,`sr`.`reduce_only` AS `reduceOnly`,concat(lower(cast(hex(`sr`.`stop_request`) as char charset utf8mb4)),'-',`sr`.`stop_type`) AS `clientOrderId` from ((`devel`.`stop_request` `sr` join `devel`.`state` `s` on((`sr`.`state` = `s`.`state`))) join `devel`.`vw_instrument_positions` `vip` on((`sr`.`instrument_position` = `devel`.`vip`.`instrument_position`)));

CREATE VIEW devel.vw_audit_candles AS select `audit`.`instrument` AS `instrument`,`audit`.`symbol` AS `symbol`,`audit`.`period` AS `period`,`audit`.`timeframe` AS `timeframe`,`audit`.`hour` AS `hour`,`audit`.`entries` AS `entries` from ((select `devel`.`vc`.`instrument` AS `instrument`,`devel`.`vc`.`symbol` AS `symbol`,`devel`.`vc`.`period` AS `period`,`devel`.`vc`.`timeframe` AS `timeframe`,cast(date_format(`devel`.`vc`.`bar_time`,'%Y-%m-%d %k:00:00') as datetime) AS `hour`,count(0) AS `entries` from `devel`.`vw_candles` `vc` group by `devel`.`vc`.`instrument`,`devel`.`vc`.`symbol`,`devel`.`vc`.`period`,`devel`.`vc`.`timeframe`,cast(date_format(`devel`.`vc`.`bar_time`,'%Y-%m-%d %k:00:00') as datetime) having (`entries` < 4)) `audit` join (select `c`.`instrument` AS `instrument`,`c`.`period` AS `period`,min(cast(date_format(`c`.`bar_time`,'%Y-%m-%d %k:00:00') as datetime)) AS `hour` from `devel`.`candle` `c` group by `c`.`instrument`,`c`.`period`) `exclusions` on(((`audit`.`instrument` = `exclusions`.`instrument`) and (`audit`.`period` = `exclusions`.`period`)))) where (`audit`.`hour` > `exclusions`.`hour`) order by `audit`.`symbol`,`audit`.`timeframe`,`audit`.`hour` desc;

ALTER TABLE devel.cancel_source COMMENT 'not_canceled
user_canceled
system_canceled';

ALTER TABLE devel.fractal_state COMMENT 'Rally
Pullback
Retrace
Correction
Recovery
Breakout
Reversal
Extension';

ALTER TABLE devel.margin_mode COMMENT 'Margin mode
cross
isolated';

ALTER TABLE devel.order_category COMMENT 'normal
full_liquidation
partial_liquidation
adl
tp
sl';

ALTER TABLE devel.order_state COMMENT 'live, effective, canceled, order_failed, filled, partially_canceled, partially_filled';

ALTER TABLE devel.point_type COMMENT 'Origin
Base
Root
Expansion
Retrace
Recovery
Close';

ALTER TABLE devel.price_type COMMENT 'Trigger price type.
last: last price
index: index price
mark: mark price';

ALTER TABLE devel.request_type COMMENT 'market: market order
limit: limit order
post_only: Post-only order
fok: Fill-or-kill order
ioc: Immediate-or-cancel order';

ALTER TABLE devel.fractal_fibonacci MODIFY fractal_type CHAR(10)  NOT NULL   COMMENT 'Retrace
Extension';

]]></string>
		</script>
		<script name="vw_accounts_001" id="8cd088f2-b29a-4431-943a-f50d26baf0ca" language="SQL" >
			<string><![CDATA[CREATE VIEW devel.vw_accounts AS select `a`.`account` AS `account`,`a`.`broker` AS `broker`,`a`.`state` AS `state`,`s`.`status` AS `status`,`e`.`environment` AS `environment`,`e`.`environ` AS `environ`,`b`.`name` AS `broker_name`,`b`.`image_url` AS `broker_image_url`,`b`.`website_url` AS `broker_website_url`,`u`.`username` AS `owner_name`,`ua`.`alias` AS `alias`,`u`.`email` AS `owner_email`,`u`.`image_url` AS `owner_image_url`,`a`.`total_equity` AS `total_equity`,`a`.`isolated_equity` AS `isolated_equity`,`a`.`rest_api_url` AS `rest_api_url`,`a`.`private_wss_url` AS `private_wss_url`,`a`.`public_wss_url` AS `public_wss_url`,`c`.`currency` AS `currency`,`c`.`symbol` AS `symbol`,`c`.`image_url` AS `currency_image_url`,`c`.`state` AS `currency_state`,`cs`.`status` AS `currency_status`,`ad`.`balance` AS `balance`,`ad`.`equity` AS `currency_equity`,`ad`.`isolated_equity` AS `currency_isolated_equity`,`ad`.`equity` AS `equity`,`ad`.`available` AS `available`,`ad`.`available_equity` AS `available_equity`,`ad`.`equity_usd` AS `equity_usd`,`ad`.`frozen` AS `frozen`,`ad`.`order_frozen` AS `order_frozen`,`ad`.`borrow_frozen` AS `borrow_frozen`,`ad`.`unrealized_pnl` AS `unrealized_pnl`,`ad`.`isolated_unrealized_pnl` AS `isolated_unrealized_pnl`,`ad`.`coin_usd_price` AS `coin_usd_price`,`ad`.`margin_ratio` AS `margin_ratio`,`ad`.`spot_available` AS `spot_available`,`ad`.`liability` AS `liability`,`ad`.`update_time` AS `update_time` from ((((((((`devel`.`account` `a` left join `devel`.`account_detail` `ad` on((`a`.`account` = `ad`.`account`))) left join `devel`.`currency` `c` on((`ad`.`currency` = `c`.`currency`))) left join `devel`.`state` `cs` on((`c`.`state` = `cs`.`state`))) left join `devel`.`user_account` `ua` on((`a`.`account` = `ua`.`account`))) left join `devel`.`user` `u` on((`u`.`user` = `ua`.`owner`))) join `devel`.`environment` `e` on((`a`.`environment` = `e`.`environment`))) join `devel`.`broker` `b` on((`a`.`broker` = `b`.`broker`))) join `devel`.`state` `s` on((`a`.`state` = `s`.`state`)));

]]></string>
		</script>
		<script name="vw_instrument_periods" id="4de45533-c77f-4f68-b89e-9029b9acadff" language="SQL" >
			<string><![CDATA[CREATE VIEW devel.vw_instrument_periods AS select `i`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`symbol` AS `base_symbol`,`b`.`currency` AS `base_currency`,`q`.`symbol` AS `quote_symbol`,`q`.`currency` AS `quote_currency`,`p`.`period` AS `period`,`p`.`timeframe` AS `timeframe`,`p`.`timeframe_units` AS `timeframe_units`,`ip`.`bulk_collection_rate` AS `bulk_collection_rate`,if((`ip`.`bulk_collection_rate` = 0),0,if((`ip`.`interval_collection_rate` > 4),`ip`.`interval_collection_rate`,4)) AS `interval_collection_rate`,`ip`.`sma_factor` AS `sma_factor`,`ip`.`active_collection` AS `active_collection`,if(((`b`.`suspense` = true) or (`q`.`suspense` = true)),true,false) AS `suspense` from (((((`devel`.`instrument` `i` join `devel`.`instrument_period` `ip` on((`ip`.`instrument` = `i`.`instrument`))) join `devel`.`period` `p` on((`ip`.`period` = `p`.`period`))) join `devel`.`instrument_detail` `id` on((`i`.`instrument` = `id`.`instrument`))) join `devel`.`currency` `b` on((`i`.`base_currency` = `b`.`currency`))) join `devel`.`currency` `q` on((`i`.`quote_currency` = `q`.`currency`)));

]]></string>
		</script>
		<script name="vw_instruments" id="bf7dba2c-34c6-4dae-9c92-4ee5aee38e97" language="SQL" >
			<string><![CDATA[CREATE VIEW devel.vw_instruments AS select `i`.`instrument` AS `instrument`,concat(`b`.`symbol`,'-',`q`.`symbol`) AS `symbol`,`b`.`currency` AS `base_currency`,`b`.`symbol` AS `base_symbol`,`q`.`currency` AS `quote_currency`,`q`.`symbol` AS `quote_symbol`,`it`.`source_ref` AS `instrument_type`,`ct`.`source_ref` AS `contract_type`,`id`.`contract_value` AS `contract_value`,`id`.`max_leverage` AS `max_leverage`,`id`.`min_size` AS `min_size`,`id`.`lot_size` AS `lot_size`,`id`.`tick_size` AS `tick_size`,(length(substring_index(cast(`id`.`tick_size` as char charset utf8mb4),'.',-(1))) + 1) AS `digits`,`id`.`max_limit_size` AS `max_limit_size`,`id`.`max_market_size` AS `max_market_size`,`i`.`leverage` AS `leverage`,`i`.`margin_mode` AS `margin_mode`,`i`.`martingale_factor` AS `martingale_factor`,`ip`.`bulk_collection_rate` AS `bulk_collection_rate`,if(((`ip`.`bulk_collection_rate` = 0) or (`ip`.`bulk_collection_rate` is null)),NULL,if((`ip`.`interval_collection_rate` > 4),`ip`.`interval_collection_rate`,4)) AS `interval_collection_rate`,`ip`.`sma_factor` AS `sma_factor`,`p`.`period` AS `trade_period`,`p`.`timeframe` AS `trade_timeframe`,`p`.`timeframe_units` AS `timeframe_units`,if((`b`.`state` = `q`.`state`),`b`.`state`,if((`bs`.`status` = 'Suspended'),`b`.`state`,if((`qs`.`status` = 'Suspended'),`qs`.`state`,`bs`.`state`))) AS `state`,if((`b`.`state` = `q`.`state`),`bs`.`status`,if((`bs`.`status` = 'Suspended'),`bs`.`status`,if((`qs`.`status` = 'Suspended'),`qs`.`status`,`bs`.`status`))) AS `status`,`id`.`list_time` AS `list_time`,`id`.`expiry_time` AS `expiry_time` from (((((((((`devel`.`instrument` `i` join `devel`.`currency` `b` on((`b`.`currency` = `i`.`base_currency`))) join `devel`.`currency` `q` on((`q`.`currency` = `i`.`quote_currency`))) join `devel`.`state` `bs` on((`bs`.`state` = `b`.`state`))) join `devel`.`state` `qs` on((`qs`.`state` = `q`.`state`))) left join `devel`.`instrument_period` `ip` on(((`ip`.`period` = `i`.`period`) and (`ip`.`instrument` = `i`.`instrument`)))) left join `devel`.`instrument_detail` `id` on((`id`.`instrument` = `i`.`instrument`))) left join `devel`.`instrument_type` `it` on((`it`.`instrument_type` = `id`.`instrument_type`))) left join `devel`.`contract_type` `ct` on((`ct`.`contract_type` = `id`.`contract_type`))) left join `devel`.`period` `p` on((`p`.`period` = `i`.`period`)));

]]></string>
		</script>
	</layout>
</project>